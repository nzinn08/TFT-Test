
TFT_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000364c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000538  0800370c  0800370c  0001370c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003c44  08003c44  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08003c44  08003c44  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003c44  08003c44  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003c44  08003c44  00013c44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003c48  08003c48  00013c48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08003c4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000f4  20000004  08003c50  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000f8  08003c50  000200f8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000e85f  00000000  00000000  0002002c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00002074  00000000  00000000  0002e88b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000850  00000000  00000000  00030900  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000768  00000000  00000000  00031150  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00018652  00000000  00000000  000318b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00009528  00000000  00000000  00049f0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00078921  00000000  00000000  00053432  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000cbd53  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001c18  00000000  00000000  000cbdd0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000004 	.word	0x20000004
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080036f4 	.word	0x080036f4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000008 	.word	0x20000008
 8000104:	080036f4 	.word	0x080036f4

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <HAL_Init>:
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
 8000224:	4b07      	ldr	r3, [pc, #28]	; (8000244 <HAL_Init+0x24>)
 8000226:	681a      	ldr	r2, [r3, #0]
 8000228:	4b06      	ldr	r3, [pc, #24]	; (8000244 <HAL_Init+0x24>)
 800022a:	2110      	movs	r1, #16
 800022c:	430a      	orrs	r2, r1
 800022e:	601a      	str	r2, [r3, #0]
 8000230:	2000      	movs	r0, #0
 8000232:	f000 f809 	bl	8000248 <HAL_InitTick>
 8000236:	f002 fa17 	bl	8002668 <HAL_MspInit>
 800023a:	2300      	movs	r3, #0
 800023c:	0018      	movs	r0, r3
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}
 8000242:	46c0      	nop			; (mov r8, r8)
 8000244:	40022000 	.word	0x40022000

08000248 <HAL_InitTick>:
 8000248:	b580      	push	{r7, lr}
 800024a:	b082      	sub	sp, #8
 800024c:	af00      	add	r7, sp, #0
 800024e:	6078      	str	r0, [r7, #4]
 8000250:	f000 ff80 	bl	8001154 <HAL_RCC_GetHCLKFreq>
 8000254:	0002      	movs	r2, r0
 8000256:	23fa      	movs	r3, #250	; 0xfa
 8000258:	0099      	lsls	r1, r3, #2
 800025a:	0010      	movs	r0, r2
 800025c:	f7ff ff54 	bl	8000108 <__udivsi3>
 8000260:	0003      	movs	r3, r0
 8000262:	0018      	movs	r0, r3
 8000264:	f000 f8e7 	bl	8000436 <HAL_SYSTICK_Config>
 8000268:	6879      	ldr	r1, [r7, #4]
 800026a:	2301      	movs	r3, #1
 800026c:	425b      	negs	r3, r3
 800026e:	2200      	movs	r2, #0
 8000270:	0018      	movs	r0, r3
 8000272:	f000 f8cb 	bl	800040c <HAL_NVIC_SetPriority>
 8000276:	2300      	movs	r3, #0
 8000278:	0018      	movs	r0, r3
 800027a:	46bd      	mov	sp, r7
 800027c:	b002      	add	sp, #8
 800027e:	bd80      	pop	{r7, pc}

08000280 <HAL_IncTick>:
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
 8000284:	4b03      	ldr	r3, [pc, #12]	; (8000294 <HAL_IncTick+0x14>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	1c5a      	adds	r2, r3, #1
 800028a:	4b02      	ldr	r3, [pc, #8]	; (8000294 <HAL_IncTick+0x14>)
 800028c:	601a      	str	r2, [r3, #0]
 800028e:	46c0      	nop			; (mov r8, r8)
 8000290:	46bd      	mov	sp, r7
 8000292:	bd80      	pop	{r7, pc}
 8000294:	200000f4 	.word	0x200000f4

08000298 <HAL_GetTick>:
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
 800029c:	4b02      	ldr	r3, [pc, #8]	; (80002a8 <HAL_GetTick+0x10>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	0018      	movs	r0, r3
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bd80      	pop	{r7, pc}
 80002a6:	46c0      	nop			; (mov r8, r8)
 80002a8:	200000f4 	.word	0x200000f4

080002ac <HAL_Delay>:
 80002ac:	b580      	push	{r7, lr}
 80002ae:	b084      	sub	sp, #16
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	f7ff fff0 	bl	8000298 <HAL_GetTick>
 80002b8:	0003      	movs	r3, r0
 80002ba:	60bb      	str	r3, [r7, #8]
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	60fb      	str	r3, [r7, #12]
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	3301      	adds	r3, #1
 80002c4:	d002      	beq.n	80002cc <HAL_Delay+0x20>
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	46c0      	nop			; (mov r8, r8)
 80002ce:	f7ff ffe3 	bl	8000298 <HAL_GetTick>
 80002d2:	0002      	movs	r2, r0
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1ad3      	subs	r3, r2, r3
 80002d8:	68fa      	ldr	r2, [r7, #12]
 80002da:	429a      	cmp	r2, r3
 80002dc:	d8f7      	bhi.n	80002ce <HAL_Delay+0x22>
 80002de:	46c0      	nop			; (mov r8, r8)
 80002e0:	46bd      	mov	sp, r7
 80002e2:	b004      	add	sp, #16
 80002e4:	bd80      	pop	{r7, pc}
	...

080002e8 <NVIC_SetPriority>:
 80002e8:	b590      	push	{r4, r7, lr}
 80002ea:	b083      	sub	sp, #12
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	0002      	movs	r2, r0
 80002f0:	6039      	str	r1, [r7, #0]
 80002f2:	1dfb      	adds	r3, r7, #7
 80002f4:	701a      	strb	r2, [r3, #0]
 80002f6:	1dfb      	adds	r3, r7, #7
 80002f8:	781b      	ldrb	r3, [r3, #0]
 80002fa:	2b7f      	cmp	r3, #127	; 0x7f
 80002fc:	d932      	bls.n	8000364 <NVIC_SetPriority+0x7c>
 80002fe:	4a2f      	ldr	r2, [pc, #188]	; (80003bc <NVIC_SetPriority+0xd4>)
 8000300:	1dfb      	adds	r3, r7, #7
 8000302:	781b      	ldrb	r3, [r3, #0]
 8000304:	0019      	movs	r1, r3
 8000306:	230f      	movs	r3, #15
 8000308:	400b      	ands	r3, r1
 800030a:	3b08      	subs	r3, #8
 800030c:	089b      	lsrs	r3, r3, #2
 800030e:	3306      	adds	r3, #6
 8000310:	009b      	lsls	r3, r3, #2
 8000312:	18d3      	adds	r3, r2, r3
 8000314:	3304      	adds	r3, #4
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	1dfa      	adds	r2, r7, #7
 800031a:	7812      	ldrb	r2, [r2, #0]
 800031c:	0011      	movs	r1, r2
 800031e:	2203      	movs	r2, #3
 8000320:	400a      	ands	r2, r1
 8000322:	00d2      	lsls	r2, r2, #3
 8000324:	21ff      	movs	r1, #255	; 0xff
 8000326:	4091      	lsls	r1, r2
 8000328:	000a      	movs	r2, r1
 800032a:	43d2      	mvns	r2, r2
 800032c:	401a      	ands	r2, r3
 800032e:	0011      	movs	r1, r2
 8000330:	683b      	ldr	r3, [r7, #0]
 8000332:	019b      	lsls	r3, r3, #6
 8000334:	22ff      	movs	r2, #255	; 0xff
 8000336:	401a      	ands	r2, r3
 8000338:	1dfb      	adds	r3, r7, #7
 800033a:	781b      	ldrb	r3, [r3, #0]
 800033c:	0018      	movs	r0, r3
 800033e:	2303      	movs	r3, #3
 8000340:	4003      	ands	r3, r0
 8000342:	00db      	lsls	r3, r3, #3
 8000344:	409a      	lsls	r2, r3
 8000346:	481d      	ldr	r0, [pc, #116]	; (80003bc <NVIC_SetPriority+0xd4>)
 8000348:	1dfb      	adds	r3, r7, #7
 800034a:	781b      	ldrb	r3, [r3, #0]
 800034c:	001c      	movs	r4, r3
 800034e:	230f      	movs	r3, #15
 8000350:	4023      	ands	r3, r4
 8000352:	3b08      	subs	r3, #8
 8000354:	089b      	lsrs	r3, r3, #2
 8000356:	430a      	orrs	r2, r1
 8000358:	3306      	adds	r3, #6
 800035a:	009b      	lsls	r3, r3, #2
 800035c:	18c3      	adds	r3, r0, r3
 800035e:	3304      	adds	r3, #4
 8000360:	601a      	str	r2, [r3, #0]
 8000362:	e027      	b.n	80003b4 <NVIC_SetPriority+0xcc>
 8000364:	4a16      	ldr	r2, [pc, #88]	; (80003c0 <NVIC_SetPriority+0xd8>)
 8000366:	1dfb      	adds	r3, r7, #7
 8000368:	781b      	ldrb	r3, [r3, #0]
 800036a:	b25b      	sxtb	r3, r3
 800036c:	089b      	lsrs	r3, r3, #2
 800036e:	33c0      	adds	r3, #192	; 0xc0
 8000370:	009b      	lsls	r3, r3, #2
 8000372:	589b      	ldr	r3, [r3, r2]
 8000374:	1dfa      	adds	r2, r7, #7
 8000376:	7812      	ldrb	r2, [r2, #0]
 8000378:	0011      	movs	r1, r2
 800037a:	2203      	movs	r2, #3
 800037c:	400a      	ands	r2, r1
 800037e:	00d2      	lsls	r2, r2, #3
 8000380:	21ff      	movs	r1, #255	; 0xff
 8000382:	4091      	lsls	r1, r2
 8000384:	000a      	movs	r2, r1
 8000386:	43d2      	mvns	r2, r2
 8000388:	401a      	ands	r2, r3
 800038a:	0011      	movs	r1, r2
 800038c:	683b      	ldr	r3, [r7, #0]
 800038e:	019b      	lsls	r3, r3, #6
 8000390:	22ff      	movs	r2, #255	; 0xff
 8000392:	401a      	ands	r2, r3
 8000394:	1dfb      	adds	r3, r7, #7
 8000396:	781b      	ldrb	r3, [r3, #0]
 8000398:	0018      	movs	r0, r3
 800039a:	2303      	movs	r3, #3
 800039c:	4003      	ands	r3, r0
 800039e:	00db      	lsls	r3, r3, #3
 80003a0:	409a      	lsls	r2, r3
 80003a2:	4807      	ldr	r0, [pc, #28]	; (80003c0 <NVIC_SetPriority+0xd8>)
 80003a4:	1dfb      	adds	r3, r7, #7
 80003a6:	781b      	ldrb	r3, [r3, #0]
 80003a8:	b25b      	sxtb	r3, r3
 80003aa:	089b      	lsrs	r3, r3, #2
 80003ac:	430a      	orrs	r2, r1
 80003ae:	33c0      	adds	r3, #192	; 0xc0
 80003b0:	009b      	lsls	r3, r3, #2
 80003b2:	501a      	str	r2, [r3, r0]
 80003b4:	46c0      	nop			; (mov r8, r8)
 80003b6:	46bd      	mov	sp, r7
 80003b8:	b003      	add	sp, #12
 80003ba:	bd90      	pop	{r4, r7, pc}
 80003bc:	e000ed00 	.word	0xe000ed00
 80003c0:	e000e100 	.word	0xe000e100

080003c4 <SysTick_Config>:
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b082      	sub	sp, #8
 80003c8:	af00      	add	r7, sp, #0
 80003ca:	6078      	str	r0, [r7, #4]
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	3b01      	subs	r3, #1
 80003d0:	4a0c      	ldr	r2, [pc, #48]	; (8000404 <SysTick_Config+0x40>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d901      	bls.n	80003da <SysTick_Config+0x16>
 80003d6:	2301      	movs	r3, #1
 80003d8:	e010      	b.n	80003fc <SysTick_Config+0x38>
 80003da:	4b0b      	ldr	r3, [pc, #44]	; (8000408 <SysTick_Config+0x44>)
 80003dc:	687a      	ldr	r2, [r7, #4]
 80003de:	3a01      	subs	r2, #1
 80003e0:	605a      	str	r2, [r3, #4]
 80003e2:	2301      	movs	r3, #1
 80003e4:	425b      	negs	r3, r3
 80003e6:	2103      	movs	r1, #3
 80003e8:	0018      	movs	r0, r3
 80003ea:	f7ff ff7d 	bl	80002e8 <NVIC_SetPriority>
 80003ee:	4b06      	ldr	r3, [pc, #24]	; (8000408 <SysTick_Config+0x44>)
 80003f0:	2200      	movs	r2, #0
 80003f2:	609a      	str	r2, [r3, #8]
 80003f4:	4b04      	ldr	r3, [pc, #16]	; (8000408 <SysTick_Config+0x44>)
 80003f6:	2207      	movs	r2, #7
 80003f8:	601a      	str	r2, [r3, #0]
 80003fa:	2300      	movs	r3, #0
 80003fc:	0018      	movs	r0, r3
 80003fe:	46bd      	mov	sp, r7
 8000400:	b002      	add	sp, #8
 8000402:	bd80      	pop	{r7, pc}
 8000404:	00ffffff 	.word	0x00ffffff
 8000408:	e000e010 	.word	0xe000e010

0800040c <HAL_NVIC_SetPriority>:
 800040c:	b580      	push	{r7, lr}
 800040e:	b084      	sub	sp, #16
 8000410:	af00      	add	r7, sp, #0
 8000412:	60b9      	str	r1, [r7, #8]
 8000414:	607a      	str	r2, [r7, #4]
 8000416:	210f      	movs	r1, #15
 8000418:	187b      	adds	r3, r7, r1
 800041a:	1c02      	adds	r2, r0, #0
 800041c:	701a      	strb	r2, [r3, #0]
 800041e:	68ba      	ldr	r2, [r7, #8]
 8000420:	187b      	adds	r3, r7, r1
 8000422:	781b      	ldrb	r3, [r3, #0]
 8000424:	b25b      	sxtb	r3, r3
 8000426:	0011      	movs	r1, r2
 8000428:	0018      	movs	r0, r3
 800042a:	f7ff ff5d 	bl	80002e8 <NVIC_SetPriority>
 800042e:	46c0      	nop			; (mov r8, r8)
 8000430:	46bd      	mov	sp, r7
 8000432:	b004      	add	sp, #16
 8000434:	bd80      	pop	{r7, pc}

08000436 <HAL_SYSTICK_Config>:
 8000436:	b580      	push	{r7, lr}
 8000438:	b082      	sub	sp, #8
 800043a:	af00      	add	r7, sp, #0
 800043c:	6078      	str	r0, [r7, #4]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	0018      	movs	r0, r3
 8000442:	f7ff ffbf 	bl	80003c4 <SysTick_Config>
 8000446:	0003      	movs	r3, r0
 8000448:	0018      	movs	r0, r3
 800044a:	46bd      	mov	sp, r7
 800044c:	b002      	add	sp, #8
 800044e:	bd80      	pop	{r7, pc}

08000450 <HAL_GPIO_Init>:
 8000450:	b580      	push	{r7, lr}
 8000452:	b086      	sub	sp, #24
 8000454:	af00      	add	r7, sp, #0
 8000456:	6078      	str	r0, [r7, #4]
 8000458:	6039      	str	r1, [r7, #0]
 800045a:	2300      	movs	r3, #0
 800045c:	617b      	str	r3, [r7, #20]
 800045e:	2300      	movs	r3, #0
 8000460:	60fb      	str	r3, [r7, #12]
 8000462:	2300      	movs	r3, #0
 8000464:	613b      	str	r3, [r7, #16]
 8000466:	e155      	b.n	8000714 <HAL_GPIO_Init+0x2c4>
 8000468:	683b      	ldr	r3, [r7, #0]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	2101      	movs	r1, #1
 800046e:	697a      	ldr	r2, [r7, #20]
 8000470:	4091      	lsls	r1, r2
 8000472:	000a      	movs	r2, r1
 8000474:	4013      	ands	r3, r2
 8000476:	60fb      	str	r3, [r7, #12]
 8000478:	68fb      	ldr	r3, [r7, #12]
 800047a:	2b00      	cmp	r3, #0
 800047c:	d100      	bne.n	8000480 <HAL_GPIO_Init+0x30>
 800047e:	e146      	b.n	800070e <HAL_GPIO_Init+0x2be>
 8000480:	683b      	ldr	r3, [r7, #0]
 8000482:	685b      	ldr	r3, [r3, #4]
 8000484:	2b02      	cmp	r3, #2
 8000486:	d003      	beq.n	8000490 <HAL_GPIO_Init+0x40>
 8000488:	683b      	ldr	r3, [r7, #0]
 800048a:	685b      	ldr	r3, [r3, #4]
 800048c:	2b12      	cmp	r3, #18
 800048e:	d123      	bne.n	80004d8 <HAL_GPIO_Init+0x88>
 8000490:	697b      	ldr	r3, [r7, #20]
 8000492:	08da      	lsrs	r2, r3, #3
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	3208      	adds	r2, #8
 8000498:	0092      	lsls	r2, r2, #2
 800049a:	58d3      	ldr	r3, [r2, r3]
 800049c:	613b      	str	r3, [r7, #16]
 800049e:	697b      	ldr	r3, [r7, #20]
 80004a0:	2207      	movs	r2, #7
 80004a2:	4013      	ands	r3, r2
 80004a4:	009b      	lsls	r3, r3, #2
 80004a6:	220f      	movs	r2, #15
 80004a8:	409a      	lsls	r2, r3
 80004aa:	0013      	movs	r3, r2
 80004ac:	43da      	mvns	r2, r3
 80004ae:	693b      	ldr	r3, [r7, #16]
 80004b0:	4013      	ands	r3, r2
 80004b2:	613b      	str	r3, [r7, #16]
 80004b4:	683b      	ldr	r3, [r7, #0]
 80004b6:	691a      	ldr	r2, [r3, #16]
 80004b8:	697b      	ldr	r3, [r7, #20]
 80004ba:	2107      	movs	r1, #7
 80004bc:	400b      	ands	r3, r1
 80004be:	009b      	lsls	r3, r3, #2
 80004c0:	409a      	lsls	r2, r3
 80004c2:	0013      	movs	r3, r2
 80004c4:	693a      	ldr	r2, [r7, #16]
 80004c6:	4313      	orrs	r3, r2
 80004c8:	613b      	str	r3, [r7, #16]
 80004ca:	697b      	ldr	r3, [r7, #20]
 80004cc:	08da      	lsrs	r2, r3, #3
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	3208      	adds	r2, #8
 80004d2:	0092      	lsls	r2, r2, #2
 80004d4:	6939      	ldr	r1, [r7, #16]
 80004d6:	50d1      	str	r1, [r2, r3]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	613b      	str	r3, [r7, #16]
 80004de:	697b      	ldr	r3, [r7, #20]
 80004e0:	005b      	lsls	r3, r3, #1
 80004e2:	2203      	movs	r2, #3
 80004e4:	409a      	lsls	r2, r3
 80004e6:	0013      	movs	r3, r2
 80004e8:	43da      	mvns	r2, r3
 80004ea:	693b      	ldr	r3, [r7, #16]
 80004ec:	4013      	ands	r3, r2
 80004ee:	613b      	str	r3, [r7, #16]
 80004f0:	683b      	ldr	r3, [r7, #0]
 80004f2:	685b      	ldr	r3, [r3, #4]
 80004f4:	2203      	movs	r2, #3
 80004f6:	401a      	ands	r2, r3
 80004f8:	697b      	ldr	r3, [r7, #20]
 80004fa:	005b      	lsls	r3, r3, #1
 80004fc:	409a      	lsls	r2, r3
 80004fe:	0013      	movs	r3, r2
 8000500:	693a      	ldr	r2, [r7, #16]
 8000502:	4313      	orrs	r3, r2
 8000504:	613b      	str	r3, [r7, #16]
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	693a      	ldr	r2, [r7, #16]
 800050a:	601a      	str	r2, [r3, #0]
 800050c:	683b      	ldr	r3, [r7, #0]
 800050e:	685b      	ldr	r3, [r3, #4]
 8000510:	2b01      	cmp	r3, #1
 8000512:	d00b      	beq.n	800052c <HAL_GPIO_Init+0xdc>
 8000514:	683b      	ldr	r3, [r7, #0]
 8000516:	685b      	ldr	r3, [r3, #4]
 8000518:	2b02      	cmp	r3, #2
 800051a:	d007      	beq.n	800052c <HAL_GPIO_Init+0xdc>
 800051c:	683b      	ldr	r3, [r7, #0]
 800051e:	685b      	ldr	r3, [r3, #4]
 8000520:	2b11      	cmp	r3, #17
 8000522:	d003      	beq.n	800052c <HAL_GPIO_Init+0xdc>
 8000524:	683b      	ldr	r3, [r7, #0]
 8000526:	685b      	ldr	r3, [r3, #4]
 8000528:	2b12      	cmp	r3, #18
 800052a:	d130      	bne.n	800058e <HAL_GPIO_Init+0x13e>
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	689b      	ldr	r3, [r3, #8]
 8000530:	613b      	str	r3, [r7, #16]
 8000532:	697b      	ldr	r3, [r7, #20]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	2203      	movs	r2, #3
 8000538:	409a      	lsls	r2, r3
 800053a:	0013      	movs	r3, r2
 800053c:	43da      	mvns	r2, r3
 800053e:	693b      	ldr	r3, [r7, #16]
 8000540:	4013      	ands	r3, r2
 8000542:	613b      	str	r3, [r7, #16]
 8000544:	683b      	ldr	r3, [r7, #0]
 8000546:	68da      	ldr	r2, [r3, #12]
 8000548:	697b      	ldr	r3, [r7, #20]
 800054a:	005b      	lsls	r3, r3, #1
 800054c:	409a      	lsls	r2, r3
 800054e:	0013      	movs	r3, r2
 8000550:	693a      	ldr	r2, [r7, #16]
 8000552:	4313      	orrs	r3, r2
 8000554:	613b      	str	r3, [r7, #16]
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	693a      	ldr	r2, [r7, #16]
 800055a:	609a      	str	r2, [r3, #8]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	685b      	ldr	r3, [r3, #4]
 8000560:	613b      	str	r3, [r7, #16]
 8000562:	2201      	movs	r2, #1
 8000564:	697b      	ldr	r3, [r7, #20]
 8000566:	409a      	lsls	r2, r3
 8000568:	0013      	movs	r3, r2
 800056a:	43da      	mvns	r2, r3
 800056c:	693b      	ldr	r3, [r7, #16]
 800056e:	4013      	ands	r3, r2
 8000570:	613b      	str	r3, [r7, #16]
 8000572:	683b      	ldr	r3, [r7, #0]
 8000574:	685b      	ldr	r3, [r3, #4]
 8000576:	091b      	lsrs	r3, r3, #4
 8000578:	2201      	movs	r2, #1
 800057a:	401a      	ands	r2, r3
 800057c:	697b      	ldr	r3, [r7, #20]
 800057e:	409a      	lsls	r2, r3
 8000580:	0013      	movs	r3, r2
 8000582:	693a      	ldr	r2, [r7, #16]
 8000584:	4313      	orrs	r3, r2
 8000586:	613b      	str	r3, [r7, #16]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	693a      	ldr	r2, [r7, #16]
 800058c:	605a      	str	r2, [r3, #4]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	68db      	ldr	r3, [r3, #12]
 8000592:	613b      	str	r3, [r7, #16]
 8000594:	697b      	ldr	r3, [r7, #20]
 8000596:	005b      	lsls	r3, r3, #1
 8000598:	2203      	movs	r2, #3
 800059a:	409a      	lsls	r2, r3
 800059c:	0013      	movs	r3, r2
 800059e:	43da      	mvns	r2, r3
 80005a0:	693b      	ldr	r3, [r7, #16]
 80005a2:	4013      	ands	r3, r2
 80005a4:	613b      	str	r3, [r7, #16]
 80005a6:	683b      	ldr	r3, [r7, #0]
 80005a8:	689a      	ldr	r2, [r3, #8]
 80005aa:	697b      	ldr	r3, [r7, #20]
 80005ac:	005b      	lsls	r3, r3, #1
 80005ae:	409a      	lsls	r2, r3
 80005b0:	0013      	movs	r3, r2
 80005b2:	693a      	ldr	r2, [r7, #16]
 80005b4:	4313      	orrs	r3, r2
 80005b6:	613b      	str	r3, [r7, #16]
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	693a      	ldr	r2, [r7, #16]
 80005bc:	60da      	str	r2, [r3, #12]
 80005be:	683b      	ldr	r3, [r7, #0]
 80005c0:	685a      	ldr	r2, [r3, #4]
 80005c2:	2380      	movs	r3, #128	; 0x80
 80005c4:	055b      	lsls	r3, r3, #21
 80005c6:	4013      	ands	r3, r2
 80005c8:	d100      	bne.n	80005cc <HAL_GPIO_Init+0x17c>
 80005ca:	e0a0      	b.n	800070e <HAL_GPIO_Init+0x2be>
 80005cc:	4b57      	ldr	r3, [pc, #348]	; (800072c <HAL_GPIO_Init+0x2dc>)
 80005ce:	699a      	ldr	r2, [r3, #24]
 80005d0:	4b56      	ldr	r3, [pc, #344]	; (800072c <HAL_GPIO_Init+0x2dc>)
 80005d2:	2101      	movs	r1, #1
 80005d4:	430a      	orrs	r2, r1
 80005d6:	619a      	str	r2, [r3, #24]
 80005d8:	4b54      	ldr	r3, [pc, #336]	; (800072c <HAL_GPIO_Init+0x2dc>)
 80005da:	699b      	ldr	r3, [r3, #24]
 80005dc:	2201      	movs	r2, #1
 80005de:	4013      	ands	r3, r2
 80005e0:	60bb      	str	r3, [r7, #8]
 80005e2:	68bb      	ldr	r3, [r7, #8]
 80005e4:	4a52      	ldr	r2, [pc, #328]	; (8000730 <HAL_GPIO_Init+0x2e0>)
 80005e6:	697b      	ldr	r3, [r7, #20]
 80005e8:	089b      	lsrs	r3, r3, #2
 80005ea:	3302      	adds	r3, #2
 80005ec:	009b      	lsls	r3, r3, #2
 80005ee:	589b      	ldr	r3, [r3, r2]
 80005f0:	613b      	str	r3, [r7, #16]
 80005f2:	697b      	ldr	r3, [r7, #20]
 80005f4:	2203      	movs	r2, #3
 80005f6:	4013      	ands	r3, r2
 80005f8:	009b      	lsls	r3, r3, #2
 80005fa:	220f      	movs	r2, #15
 80005fc:	409a      	lsls	r2, r3
 80005fe:	0013      	movs	r3, r2
 8000600:	43da      	mvns	r2, r3
 8000602:	693b      	ldr	r3, [r7, #16]
 8000604:	4013      	ands	r3, r2
 8000606:	613b      	str	r3, [r7, #16]
 8000608:	687a      	ldr	r2, [r7, #4]
 800060a:	2390      	movs	r3, #144	; 0x90
 800060c:	05db      	lsls	r3, r3, #23
 800060e:	429a      	cmp	r2, r3
 8000610:	d019      	beq.n	8000646 <HAL_GPIO_Init+0x1f6>
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	4a47      	ldr	r2, [pc, #284]	; (8000734 <HAL_GPIO_Init+0x2e4>)
 8000616:	4293      	cmp	r3, r2
 8000618:	d013      	beq.n	8000642 <HAL_GPIO_Init+0x1f2>
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	4a46      	ldr	r2, [pc, #280]	; (8000738 <HAL_GPIO_Init+0x2e8>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d00d      	beq.n	800063e <HAL_GPIO_Init+0x1ee>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	4a45      	ldr	r2, [pc, #276]	; (800073c <HAL_GPIO_Init+0x2ec>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d007      	beq.n	800063a <HAL_GPIO_Init+0x1ea>
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	4a44      	ldr	r2, [pc, #272]	; (8000740 <HAL_GPIO_Init+0x2f0>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d101      	bne.n	8000636 <HAL_GPIO_Init+0x1e6>
 8000632:	2304      	movs	r3, #4
 8000634:	e008      	b.n	8000648 <HAL_GPIO_Init+0x1f8>
 8000636:	2305      	movs	r3, #5
 8000638:	e006      	b.n	8000648 <HAL_GPIO_Init+0x1f8>
 800063a:	2303      	movs	r3, #3
 800063c:	e004      	b.n	8000648 <HAL_GPIO_Init+0x1f8>
 800063e:	2302      	movs	r3, #2
 8000640:	e002      	b.n	8000648 <HAL_GPIO_Init+0x1f8>
 8000642:	2301      	movs	r3, #1
 8000644:	e000      	b.n	8000648 <HAL_GPIO_Init+0x1f8>
 8000646:	2300      	movs	r3, #0
 8000648:	697a      	ldr	r2, [r7, #20]
 800064a:	2103      	movs	r1, #3
 800064c:	400a      	ands	r2, r1
 800064e:	0092      	lsls	r2, r2, #2
 8000650:	4093      	lsls	r3, r2
 8000652:	693a      	ldr	r2, [r7, #16]
 8000654:	4313      	orrs	r3, r2
 8000656:	613b      	str	r3, [r7, #16]
 8000658:	4935      	ldr	r1, [pc, #212]	; (8000730 <HAL_GPIO_Init+0x2e0>)
 800065a:	697b      	ldr	r3, [r7, #20]
 800065c:	089b      	lsrs	r3, r3, #2
 800065e:	3302      	adds	r3, #2
 8000660:	009b      	lsls	r3, r3, #2
 8000662:	693a      	ldr	r2, [r7, #16]
 8000664:	505a      	str	r2, [r3, r1]
 8000666:	4b37      	ldr	r3, [pc, #220]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	613b      	str	r3, [r7, #16]
 800066c:	68fb      	ldr	r3, [r7, #12]
 800066e:	43da      	mvns	r2, r3
 8000670:	693b      	ldr	r3, [r7, #16]
 8000672:	4013      	ands	r3, r2
 8000674:	613b      	str	r3, [r7, #16]
 8000676:	683b      	ldr	r3, [r7, #0]
 8000678:	685a      	ldr	r2, [r3, #4]
 800067a:	2380      	movs	r3, #128	; 0x80
 800067c:	025b      	lsls	r3, r3, #9
 800067e:	4013      	ands	r3, r2
 8000680:	d003      	beq.n	800068a <HAL_GPIO_Init+0x23a>
 8000682:	693a      	ldr	r2, [r7, #16]
 8000684:	68fb      	ldr	r3, [r7, #12]
 8000686:	4313      	orrs	r3, r2
 8000688:	613b      	str	r3, [r7, #16]
 800068a:	4b2e      	ldr	r3, [pc, #184]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 800068c:	693a      	ldr	r2, [r7, #16]
 800068e:	601a      	str	r2, [r3, #0]
 8000690:	4b2c      	ldr	r3, [pc, #176]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 8000692:	685b      	ldr	r3, [r3, #4]
 8000694:	613b      	str	r3, [r7, #16]
 8000696:	68fb      	ldr	r3, [r7, #12]
 8000698:	43da      	mvns	r2, r3
 800069a:	693b      	ldr	r3, [r7, #16]
 800069c:	4013      	ands	r3, r2
 800069e:	613b      	str	r3, [r7, #16]
 80006a0:	683b      	ldr	r3, [r7, #0]
 80006a2:	685a      	ldr	r2, [r3, #4]
 80006a4:	2380      	movs	r3, #128	; 0x80
 80006a6:	029b      	lsls	r3, r3, #10
 80006a8:	4013      	ands	r3, r2
 80006aa:	d003      	beq.n	80006b4 <HAL_GPIO_Init+0x264>
 80006ac:	693a      	ldr	r2, [r7, #16]
 80006ae:	68fb      	ldr	r3, [r7, #12]
 80006b0:	4313      	orrs	r3, r2
 80006b2:	613b      	str	r3, [r7, #16]
 80006b4:	4b23      	ldr	r3, [pc, #140]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 80006b6:	693a      	ldr	r2, [r7, #16]
 80006b8:	605a      	str	r2, [r3, #4]
 80006ba:	4b22      	ldr	r3, [pc, #136]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 80006bc:	689b      	ldr	r3, [r3, #8]
 80006be:	613b      	str	r3, [r7, #16]
 80006c0:	68fb      	ldr	r3, [r7, #12]
 80006c2:	43da      	mvns	r2, r3
 80006c4:	693b      	ldr	r3, [r7, #16]
 80006c6:	4013      	ands	r3, r2
 80006c8:	613b      	str	r3, [r7, #16]
 80006ca:	683b      	ldr	r3, [r7, #0]
 80006cc:	685a      	ldr	r2, [r3, #4]
 80006ce:	2380      	movs	r3, #128	; 0x80
 80006d0:	035b      	lsls	r3, r3, #13
 80006d2:	4013      	ands	r3, r2
 80006d4:	d003      	beq.n	80006de <HAL_GPIO_Init+0x28e>
 80006d6:	693a      	ldr	r2, [r7, #16]
 80006d8:	68fb      	ldr	r3, [r7, #12]
 80006da:	4313      	orrs	r3, r2
 80006dc:	613b      	str	r3, [r7, #16]
 80006de:	4b19      	ldr	r3, [pc, #100]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 80006e0:	693a      	ldr	r2, [r7, #16]
 80006e2:	609a      	str	r2, [r3, #8]
 80006e4:	4b17      	ldr	r3, [pc, #92]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 80006e6:	68db      	ldr	r3, [r3, #12]
 80006e8:	613b      	str	r3, [r7, #16]
 80006ea:	68fb      	ldr	r3, [r7, #12]
 80006ec:	43da      	mvns	r2, r3
 80006ee:	693b      	ldr	r3, [r7, #16]
 80006f0:	4013      	ands	r3, r2
 80006f2:	613b      	str	r3, [r7, #16]
 80006f4:	683b      	ldr	r3, [r7, #0]
 80006f6:	685a      	ldr	r2, [r3, #4]
 80006f8:	2380      	movs	r3, #128	; 0x80
 80006fa:	039b      	lsls	r3, r3, #14
 80006fc:	4013      	ands	r3, r2
 80006fe:	d003      	beq.n	8000708 <HAL_GPIO_Init+0x2b8>
 8000700:	693a      	ldr	r2, [r7, #16]
 8000702:	68fb      	ldr	r3, [r7, #12]
 8000704:	4313      	orrs	r3, r2
 8000706:	613b      	str	r3, [r7, #16]
 8000708:	4b0e      	ldr	r3, [pc, #56]	; (8000744 <HAL_GPIO_Init+0x2f4>)
 800070a:	693a      	ldr	r2, [r7, #16]
 800070c:	60da      	str	r2, [r3, #12]
 800070e:	697b      	ldr	r3, [r7, #20]
 8000710:	3301      	adds	r3, #1
 8000712:	617b      	str	r3, [r7, #20]
 8000714:	683b      	ldr	r3, [r7, #0]
 8000716:	681a      	ldr	r2, [r3, #0]
 8000718:	697b      	ldr	r3, [r7, #20]
 800071a:	40da      	lsrs	r2, r3
 800071c:	1e13      	subs	r3, r2, #0
 800071e:	d000      	beq.n	8000722 <HAL_GPIO_Init+0x2d2>
 8000720:	e6a2      	b.n	8000468 <HAL_GPIO_Init+0x18>
 8000722:	46c0      	nop			; (mov r8, r8)
 8000724:	46bd      	mov	sp, r7
 8000726:	b006      	add	sp, #24
 8000728:	bd80      	pop	{r7, pc}
 800072a:	46c0      	nop			; (mov r8, r8)
 800072c:	40021000 	.word	0x40021000
 8000730:	40010000 	.word	0x40010000
 8000734:	48000400 	.word	0x48000400
 8000738:	48000800 	.word	0x48000800
 800073c:	48000c00 	.word	0x48000c00
 8000740:	48001000 	.word	0x48001000
 8000744:	40010400 	.word	0x40010400

08000748 <HAL_GPIO_WritePin>:
 8000748:	b580      	push	{r7, lr}
 800074a:	b082      	sub	sp, #8
 800074c:	af00      	add	r7, sp, #0
 800074e:	6078      	str	r0, [r7, #4]
 8000750:	0008      	movs	r0, r1
 8000752:	0011      	movs	r1, r2
 8000754:	1cbb      	adds	r3, r7, #2
 8000756:	1c02      	adds	r2, r0, #0
 8000758:	801a      	strh	r2, [r3, #0]
 800075a:	1c7b      	adds	r3, r7, #1
 800075c:	1c0a      	adds	r2, r1, #0
 800075e:	701a      	strb	r2, [r3, #0]
 8000760:	1c7b      	adds	r3, r7, #1
 8000762:	781b      	ldrb	r3, [r3, #0]
 8000764:	2b00      	cmp	r3, #0
 8000766:	d004      	beq.n	8000772 <HAL_GPIO_WritePin+0x2a>
 8000768:	1cbb      	adds	r3, r7, #2
 800076a:	881a      	ldrh	r2, [r3, #0]
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	619a      	str	r2, [r3, #24]
 8000770:	e003      	b.n	800077a <HAL_GPIO_WritePin+0x32>
 8000772:	1cbb      	adds	r3, r7, #2
 8000774:	881a      	ldrh	r2, [r3, #0]
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	629a      	str	r2, [r3, #40]	; 0x28
 800077a:	46c0      	nop			; (mov r8, r8)
 800077c:	46bd      	mov	sp, r7
 800077e:	b002      	add	sp, #8
 8000780:	bd80      	pop	{r7, pc}
	...

08000784 <HAL_RCC_OscConfig>:
 8000784:	b580      	push	{r7, lr}
 8000786:	b086      	sub	sp, #24
 8000788:	af00      	add	r7, sp, #0
 800078a:	6078      	str	r0, [r7, #4]
 800078c:	2300      	movs	r3, #0
 800078e:	613b      	str	r3, [r7, #16]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	2201      	movs	r2, #1
 8000796:	4013      	ands	r3, r2
 8000798:	d100      	bne.n	800079c <HAL_RCC_OscConfig+0x18>
 800079a:	e08d      	b.n	80008b8 <HAL_RCC_OscConfig+0x134>
 800079c:	4bc5      	ldr	r3, [pc, #788]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 800079e:	685b      	ldr	r3, [r3, #4]
 80007a0:	220c      	movs	r2, #12
 80007a2:	4013      	ands	r3, r2
 80007a4:	2b04      	cmp	r3, #4
 80007a6:	d00e      	beq.n	80007c6 <HAL_RCC_OscConfig+0x42>
 80007a8:	4bc2      	ldr	r3, [pc, #776]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80007aa:	685b      	ldr	r3, [r3, #4]
 80007ac:	220c      	movs	r2, #12
 80007ae:	4013      	ands	r3, r2
 80007b0:	2b08      	cmp	r3, #8
 80007b2:	d116      	bne.n	80007e2 <HAL_RCC_OscConfig+0x5e>
 80007b4:	4bbf      	ldr	r3, [pc, #764]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80007b6:	685a      	ldr	r2, [r3, #4]
 80007b8:	23c0      	movs	r3, #192	; 0xc0
 80007ba:	025b      	lsls	r3, r3, #9
 80007bc:	401a      	ands	r2, r3
 80007be:	2380      	movs	r3, #128	; 0x80
 80007c0:	025b      	lsls	r3, r3, #9
 80007c2:	429a      	cmp	r2, r3
 80007c4:	d10d      	bne.n	80007e2 <HAL_RCC_OscConfig+0x5e>
 80007c6:	4bbb      	ldr	r3, [pc, #748]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80007c8:	681a      	ldr	r2, [r3, #0]
 80007ca:	2380      	movs	r3, #128	; 0x80
 80007cc:	029b      	lsls	r3, r3, #10
 80007ce:	4013      	ands	r3, r2
 80007d0:	d100      	bne.n	80007d4 <HAL_RCC_OscConfig+0x50>
 80007d2:	e070      	b.n	80008b6 <HAL_RCC_OscConfig+0x132>
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	685b      	ldr	r3, [r3, #4]
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d000      	beq.n	80007de <HAL_RCC_OscConfig+0x5a>
 80007dc:	e06b      	b.n	80008b6 <HAL_RCC_OscConfig+0x132>
 80007de:	2301      	movs	r3, #1
 80007e0:	e329      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	685b      	ldr	r3, [r3, #4]
 80007e6:	2b01      	cmp	r3, #1
 80007e8:	d107      	bne.n	80007fa <HAL_RCC_OscConfig+0x76>
 80007ea:	4bb2      	ldr	r3, [pc, #712]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80007ec:	681a      	ldr	r2, [r3, #0]
 80007ee:	4bb1      	ldr	r3, [pc, #708]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80007f0:	2180      	movs	r1, #128	; 0x80
 80007f2:	0249      	lsls	r1, r1, #9
 80007f4:	430a      	orrs	r2, r1
 80007f6:	601a      	str	r2, [r3, #0]
 80007f8:	e02f      	b.n	800085a <HAL_RCC_OscConfig+0xd6>
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	685b      	ldr	r3, [r3, #4]
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d10c      	bne.n	800081c <HAL_RCC_OscConfig+0x98>
 8000802:	4bac      	ldr	r3, [pc, #688]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000804:	681a      	ldr	r2, [r3, #0]
 8000806:	4bab      	ldr	r3, [pc, #684]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000808:	49ab      	ldr	r1, [pc, #684]	; (8000ab8 <HAL_RCC_OscConfig+0x334>)
 800080a:	400a      	ands	r2, r1
 800080c:	601a      	str	r2, [r3, #0]
 800080e:	4ba9      	ldr	r3, [pc, #676]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000810:	681a      	ldr	r2, [r3, #0]
 8000812:	4ba8      	ldr	r3, [pc, #672]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000814:	49a9      	ldr	r1, [pc, #676]	; (8000abc <HAL_RCC_OscConfig+0x338>)
 8000816:	400a      	ands	r2, r1
 8000818:	601a      	str	r2, [r3, #0]
 800081a:	e01e      	b.n	800085a <HAL_RCC_OscConfig+0xd6>
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	685b      	ldr	r3, [r3, #4]
 8000820:	2b05      	cmp	r3, #5
 8000822:	d10e      	bne.n	8000842 <HAL_RCC_OscConfig+0xbe>
 8000824:	4ba3      	ldr	r3, [pc, #652]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000826:	681a      	ldr	r2, [r3, #0]
 8000828:	4ba2      	ldr	r3, [pc, #648]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 800082a:	2180      	movs	r1, #128	; 0x80
 800082c:	02c9      	lsls	r1, r1, #11
 800082e:	430a      	orrs	r2, r1
 8000830:	601a      	str	r2, [r3, #0]
 8000832:	4ba0      	ldr	r3, [pc, #640]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000834:	681a      	ldr	r2, [r3, #0]
 8000836:	4b9f      	ldr	r3, [pc, #636]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000838:	2180      	movs	r1, #128	; 0x80
 800083a:	0249      	lsls	r1, r1, #9
 800083c:	430a      	orrs	r2, r1
 800083e:	601a      	str	r2, [r3, #0]
 8000840:	e00b      	b.n	800085a <HAL_RCC_OscConfig+0xd6>
 8000842:	4b9c      	ldr	r3, [pc, #624]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000844:	681a      	ldr	r2, [r3, #0]
 8000846:	4b9b      	ldr	r3, [pc, #620]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000848:	499b      	ldr	r1, [pc, #620]	; (8000ab8 <HAL_RCC_OscConfig+0x334>)
 800084a:	400a      	ands	r2, r1
 800084c:	601a      	str	r2, [r3, #0]
 800084e:	4b99      	ldr	r3, [pc, #612]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000850:	681a      	ldr	r2, [r3, #0]
 8000852:	4b98      	ldr	r3, [pc, #608]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000854:	4999      	ldr	r1, [pc, #612]	; (8000abc <HAL_RCC_OscConfig+0x338>)
 8000856:	400a      	ands	r2, r1
 8000858:	601a      	str	r2, [r3, #0]
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	685b      	ldr	r3, [r3, #4]
 800085e:	2b00      	cmp	r3, #0
 8000860:	d014      	beq.n	800088c <HAL_RCC_OscConfig+0x108>
 8000862:	f7ff fd19 	bl	8000298 <HAL_GetTick>
 8000866:	0003      	movs	r3, r0
 8000868:	613b      	str	r3, [r7, #16]
 800086a:	e008      	b.n	800087e <HAL_RCC_OscConfig+0xfa>
 800086c:	f7ff fd14 	bl	8000298 <HAL_GetTick>
 8000870:	0002      	movs	r2, r0
 8000872:	693b      	ldr	r3, [r7, #16]
 8000874:	1ad3      	subs	r3, r2, r3
 8000876:	2b64      	cmp	r3, #100	; 0x64
 8000878:	d901      	bls.n	800087e <HAL_RCC_OscConfig+0xfa>
 800087a:	2303      	movs	r3, #3
 800087c:	e2db      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 800087e:	4b8d      	ldr	r3, [pc, #564]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000880:	681a      	ldr	r2, [r3, #0]
 8000882:	2380      	movs	r3, #128	; 0x80
 8000884:	029b      	lsls	r3, r3, #10
 8000886:	4013      	ands	r3, r2
 8000888:	d0f0      	beq.n	800086c <HAL_RCC_OscConfig+0xe8>
 800088a:	e015      	b.n	80008b8 <HAL_RCC_OscConfig+0x134>
 800088c:	f7ff fd04 	bl	8000298 <HAL_GetTick>
 8000890:	0003      	movs	r3, r0
 8000892:	613b      	str	r3, [r7, #16]
 8000894:	e008      	b.n	80008a8 <HAL_RCC_OscConfig+0x124>
 8000896:	f7ff fcff 	bl	8000298 <HAL_GetTick>
 800089a:	0002      	movs	r2, r0
 800089c:	693b      	ldr	r3, [r7, #16]
 800089e:	1ad3      	subs	r3, r2, r3
 80008a0:	2b64      	cmp	r3, #100	; 0x64
 80008a2:	d901      	bls.n	80008a8 <HAL_RCC_OscConfig+0x124>
 80008a4:	2303      	movs	r3, #3
 80008a6:	e2c6      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 80008a8:	4b82      	ldr	r3, [pc, #520]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80008aa:	681a      	ldr	r2, [r3, #0]
 80008ac:	2380      	movs	r3, #128	; 0x80
 80008ae:	029b      	lsls	r3, r3, #10
 80008b0:	4013      	ands	r3, r2
 80008b2:	d1f0      	bne.n	8000896 <HAL_RCC_OscConfig+0x112>
 80008b4:	e000      	b.n	80008b8 <HAL_RCC_OscConfig+0x134>
 80008b6:	46c0      	nop			; (mov r8, r8)
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	2202      	movs	r2, #2
 80008be:	4013      	ands	r3, r2
 80008c0:	d100      	bne.n	80008c4 <HAL_RCC_OscConfig+0x140>
 80008c2:	e06c      	b.n	800099e <HAL_RCC_OscConfig+0x21a>
 80008c4:	4b7b      	ldr	r3, [pc, #492]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80008c6:	685b      	ldr	r3, [r3, #4]
 80008c8:	220c      	movs	r2, #12
 80008ca:	4013      	ands	r3, r2
 80008cc:	d00e      	beq.n	80008ec <HAL_RCC_OscConfig+0x168>
 80008ce:	4b79      	ldr	r3, [pc, #484]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80008d0:	685b      	ldr	r3, [r3, #4]
 80008d2:	220c      	movs	r2, #12
 80008d4:	4013      	ands	r3, r2
 80008d6:	2b08      	cmp	r3, #8
 80008d8:	d11f      	bne.n	800091a <HAL_RCC_OscConfig+0x196>
 80008da:	4b76      	ldr	r3, [pc, #472]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80008dc:	685a      	ldr	r2, [r3, #4]
 80008de:	23c0      	movs	r3, #192	; 0xc0
 80008e0:	025b      	lsls	r3, r3, #9
 80008e2:	401a      	ands	r2, r3
 80008e4:	2380      	movs	r3, #128	; 0x80
 80008e6:	021b      	lsls	r3, r3, #8
 80008e8:	429a      	cmp	r2, r3
 80008ea:	d116      	bne.n	800091a <HAL_RCC_OscConfig+0x196>
 80008ec:	4b71      	ldr	r3, [pc, #452]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	2202      	movs	r2, #2
 80008f2:	4013      	ands	r3, r2
 80008f4:	d005      	beq.n	8000902 <HAL_RCC_OscConfig+0x17e>
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	68db      	ldr	r3, [r3, #12]
 80008fa:	2b01      	cmp	r3, #1
 80008fc:	d001      	beq.n	8000902 <HAL_RCC_OscConfig+0x17e>
 80008fe:	2301      	movs	r3, #1
 8000900:	e299      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000902:	4b6c      	ldr	r3, [pc, #432]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	22f8      	movs	r2, #248	; 0xf8
 8000908:	4393      	bics	r3, r2
 800090a:	0019      	movs	r1, r3
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	691b      	ldr	r3, [r3, #16]
 8000910:	00da      	lsls	r2, r3, #3
 8000912:	4b68      	ldr	r3, [pc, #416]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000914:	430a      	orrs	r2, r1
 8000916:	601a      	str	r2, [r3, #0]
 8000918:	e041      	b.n	800099e <HAL_RCC_OscConfig+0x21a>
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	68db      	ldr	r3, [r3, #12]
 800091e:	2b00      	cmp	r3, #0
 8000920:	d024      	beq.n	800096c <HAL_RCC_OscConfig+0x1e8>
 8000922:	4b64      	ldr	r3, [pc, #400]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000924:	681a      	ldr	r2, [r3, #0]
 8000926:	4b63      	ldr	r3, [pc, #396]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000928:	2101      	movs	r1, #1
 800092a:	430a      	orrs	r2, r1
 800092c:	601a      	str	r2, [r3, #0]
 800092e:	f7ff fcb3 	bl	8000298 <HAL_GetTick>
 8000932:	0003      	movs	r3, r0
 8000934:	613b      	str	r3, [r7, #16]
 8000936:	e008      	b.n	800094a <HAL_RCC_OscConfig+0x1c6>
 8000938:	f7ff fcae 	bl	8000298 <HAL_GetTick>
 800093c:	0002      	movs	r2, r0
 800093e:	693b      	ldr	r3, [r7, #16]
 8000940:	1ad3      	subs	r3, r2, r3
 8000942:	2b02      	cmp	r3, #2
 8000944:	d901      	bls.n	800094a <HAL_RCC_OscConfig+0x1c6>
 8000946:	2303      	movs	r3, #3
 8000948:	e275      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 800094a:	4b5a      	ldr	r3, [pc, #360]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	2202      	movs	r2, #2
 8000950:	4013      	ands	r3, r2
 8000952:	d0f1      	beq.n	8000938 <HAL_RCC_OscConfig+0x1b4>
 8000954:	4b57      	ldr	r3, [pc, #348]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	22f8      	movs	r2, #248	; 0xf8
 800095a:	4393      	bics	r3, r2
 800095c:	0019      	movs	r1, r3
 800095e:	687b      	ldr	r3, [r7, #4]
 8000960:	691b      	ldr	r3, [r3, #16]
 8000962:	00da      	lsls	r2, r3, #3
 8000964:	4b53      	ldr	r3, [pc, #332]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000966:	430a      	orrs	r2, r1
 8000968:	601a      	str	r2, [r3, #0]
 800096a:	e018      	b.n	800099e <HAL_RCC_OscConfig+0x21a>
 800096c:	4b51      	ldr	r3, [pc, #324]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 800096e:	681a      	ldr	r2, [r3, #0]
 8000970:	4b50      	ldr	r3, [pc, #320]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000972:	2101      	movs	r1, #1
 8000974:	438a      	bics	r2, r1
 8000976:	601a      	str	r2, [r3, #0]
 8000978:	f7ff fc8e 	bl	8000298 <HAL_GetTick>
 800097c:	0003      	movs	r3, r0
 800097e:	613b      	str	r3, [r7, #16]
 8000980:	e008      	b.n	8000994 <HAL_RCC_OscConfig+0x210>
 8000982:	f7ff fc89 	bl	8000298 <HAL_GetTick>
 8000986:	0002      	movs	r2, r0
 8000988:	693b      	ldr	r3, [r7, #16]
 800098a:	1ad3      	subs	r3, r2, r3
 800098c:	2b02      	cmp	r3, #2
 800098e:	d901      	bls.n	8000994 <HAL_RCC_OscConfig+0x210>
 8000990:	2303      	movs	r3, #3
 8000992:	e250      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000994:	4b47      	ldr	r3, [pc, #284]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	2202      	movs	r2, #2
 800099a:	4013      	ands	r3, r2
 800099c:	d1f1      	bne.n	8000982 <HAL_RCC_OscConfig+0x1fe>
 800099e:	687b      	ldr	r3, [r7, #4]
 80009a0:	681b      	ldr	r3, [r3, #0]
 80009a2:	2208      	movs	r2, #8
 80009a4:	4013      	ands	r3, r2
 80009a6:	d036      	beq.n	8000a16 <HAL_RCC_OscConfig+0x292>
 80009a8:	687b      	ldr	r3, [r7, #4]
 80009aa:	69db      	ldr	r3, [r3, #28]
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	d019      	beq.n	80009e4 <HAL_RCC_OscConfig+0x260>
 80009b0:	4b40      	ldr	r3, [pc, #256]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80009b2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80009b4:	4b3f      	ldr	r3, [pc, #252]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80009b6:	2101      	movs	r1, #1
 80009b8:	430a      	orrs	r2, r1
 80009ba:	625a      	str	r2, [r3, #36]	; 0x24
 80009bc:	f7ff fc6c 	bl	8000298 <HAL_GetTick>
 80009c0:	0003      	movs	r3, r0
 80009c2:	613b      	str	r3, [r7, #16]
 80009c4:	e008      	b.n	80009d8 <HAL_RCC_OscConfig+0x254>
 80009c6:	f7ff fc67 	bl	8000298 <HAL_GetTick>
 80009ca:	0002      	movs	r2, r0
 80009cc:	693b      	ldr	r3, [r7, #16]
 80009ce:	1ad3      	subs	r3, r2, r3
 80009d0:	2b02      	cmp	r3, #2
 80009d2:	d901      	bls.n	80009d8 <HAL_RCC_OscConfig+0x254>
 80009d4:	2303      	movs	r3, #3
 80009d6:	e22e      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 80009d8:	4b36      	ldr	r3, [pc, #216]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80009da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009dc:	2202      	movs	r2, #2
 80009de:	4013      	ands	r3, r2
 80009e0:	d0f1      	beq.n	80009c6 <HAL_RCC_OscConfig+0x242>
 80009e2:	e018      	b.n	8000a16 <HAL_RCC_OscConfig+0x292>
 80009e4:	4b33      	ldr	r3, [pc, #204]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80009e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80009e8:	4b32      	ldr	r3, [pc, #200]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 80009ea:	2101      	movs	r1, #1
 80009ec:	438a      	bics	r2, r1
 80009ee:	625a      	str	r2, [r3, #36]	; 0x24
 80009f0:	f7ff fc52 	bl	8000298 <HAL_GetTick>
 80009f4:	0003      	movs	r3, r0
 80009f6:	613b      	str	r3, [r7, #16]
 80009f8:	e008      	b.n	8000a0c <HAL_RCC_OscConfig+0x288>
 80009fa:	f7ff fc4d 	bl	8000298 <HAL_GetTick>
 80009fe:	0002      	movs	r2, r0
 8000a00:	693b      	ldr	r3, [r7, #16]
 8000a02:	1ad3      	subs	r3, r2, r3
 8000a04:	2b02      	cmp	r3, #2
 8000a06:	d901      	bls.n	8000a0c <HAL_RCC_OscConfig+0x288>
 8000a08:	2303      	movs	r3, #3
 8000a0a:	e214      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000a0c:	4b29      	ldr	r3, [pc, #164]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000a10:	2202      	movs	r2, #2
 8000a12:	4013      	ands	r3, r2
 8000a14:	d1f1      	bne.n	80009fa <HAL_RCC_OscConfig+0x276>
 8000a16:	687b      	ldr	r3, [r7, #4]
 8000a18:	681b      	ldr	r3, [r3, #0]
 8000a1a:	2204      	movs	r2, #4
 8000a1c:	4013      	ands	r3, r2
 8000a1e:	d100      	bne.n	8000a22 <HAL_RCC_OscConfig+0x29e>
 8000a20:	e0b6      	b.n	8000b90 <HAL_RCC_OscConfig+0x40c>
 8000a22:	2317      	movs	r3, #23
 8000a24:	18fb      	adds	r3, r7, r3
 8000a26:	2200      	movs	r2, #0
 8000a28:	701a      	strb	r2, [r3, #0]
 8000a2a:	4b22      	ldr	r3, [pc, #136]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000a2c:	69da      	ldr	r2, [r3, #28]
 8000a2e:	2380      	movs	r3, #128	; 0x80
 8000a30:	055b      	lsls	r3, r3, #21
 8000a32:	4013      	ands	r3, r2
 8000a34:	d111      	bne.n	8000a5a <HAL_RCC_OscConfig+0x2d6>
 8000a36:	4b1f      	ldr	r3, [pc, #124]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000a38:	69da      	ldr	r2, [r3, #28]
 8000a3a:	4b1e      	ldr	r3, [pc, #120]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000a3c:	2180      	movs	r1, #128	; 0x80
 8000a3e:	0549      	lsls	r1, r1, #21
 8000a40:	430a      	orrs	r2, r1
 8000a42:	61da      	str	r2, [r3, #28]
 8000a44:	4b1b      	ldr	r3, [pc, #108]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000a46:	69da      	ldr	r2, [r3, #28]
 8000a48:	2380      	movs	r3, #128	; 0x80
 8000a4a:	055b      	lsls	r3, r3, #21
 8000a4c:	4013      	ands	r3, r2
 8000a4e:	60fb      	str	r3, [r7, #12]
 8000a50:	68fb      	ldr	r3, [r7, #12]
 8000a52:	2317      	movs	r3, #23
 8000a54:	18fb      	adds	r3, r7, r3
 8000a56:	2201      	movs	r2, #1
 8000a58:	701a      	strb	r2, [r3, #0]
 8000a5a:	4b19      	ldr	r3, [pc, #100]	; (8000ac0 <HAL_RCC_OscConfig+0x33c>)
 8000a5c:	681a      	ldr	r2, [r3, #0]
 8000a5e:	2380      	movs	r3, #128	; 0x80
 8000a60:	005b      	lsls	r3, r3, #1
 8000a62:	4013      	ands	r3, r2
 8000a64:	d11a      	bne.n	8000a9c <HAL_RCC_OscConfig+0x318>
 8000a66:	4b16      	ldr	r3, [pc, #88]	; (8000ac0 <HAL_RCC_OscConfig+0x33c>)
 8000a68:	681a      	ldr	r2, [r3, #0]
 8000a6a:	4b15      	ldr	r3, [pc, #84]	; (8000ac0 <HAL_RCC_OscConfig+0x33c>)
 8000a6c:	2180      	movs	r1, #128	; 0x80
 8000a6e:	0049      	lsls	r1, r1, #1
 8000a70:	430a      	orrs	r2, r1
 8000a72:	601a      	str	r2, [r3, #0]
 8000a74:	f7ff fc10 	bl	8000298 <HAL_GetTick>
 8000a78:	0003      	movs	r3, r0
 8000a7a:	613b      	str	r3, [r7, #16]
 8000a7c:	e008      	b.n	8000a90 <HAL_RCC_OscConfig+0x30c>
 8000a7e:	f7ff fc0b 	bl	8000298 <HAL_GetTick>
 8000a82:	0002      	movs	r2, r0
 8000a84:	693b      	ldr	r3, [r7, #16]
 8000a86:	1ad3      	subs	r3, r2, r3
 8000a88:	2b64      	cmp	r3, #100	; 0x64
 8000a8a:	d901      	bls.n	8000a90 <HAL_RCC_OscConfig+0x30c>
 8000a8c:	2303      	movs	r3, #3
 8000a8e:	e1d2      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000a90:	4b0b      	ldr	r3, [pc, #44]	; (8000ac0 <HAL_RCC_OscConfig+0x33c>)
 8000a92:	681a      	ldr	r2, [r3, #0]
 8000a94:	2380      	movs	r3, #128	; 0x80
 8000a96:	005b      	lsls	r3, r3, #1
 8000a98:	4013      	ands	r3, r2
 8000a9a:	d0f0      	beq.n	8000a7e <HAL_RCC_OscConfig+0x2fa>
 8000a9c:	687b      	ldr	r3, [r7, #4]
 8000a9e:	689b      	ldr	r3, [r3, #8]
 8000aa0:	2b01      	cmp	r3, #1
 8000aa2:	d10f      	bne.n	8000ac4 <HAL_RCC_OscConfig+0x340>
 8000aa4:	4b03      	ldr	r3, [pc, #12]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000aa6:	6a1a      	ldr	r2, [r3, #32]
 8000aa8:	4b02      	ldr	r3, [pc, #8]	; (8000ab4 <HAL_RCC_OscConfig+0x330>)
 8000aaa:	2101      	movs	r1, #1
 8000aac:	430a      	orrs	r2, r1
 8000aae:	621a      	str	r2, [r3, #32]
 8000ab0:	e036      	b.n	8000b20 <HAL_RCC_OscConfig+0x39c>
 8000ab2:	46c0      	nop			; (mov r8, r8)
 8000ab4:	40021000 	.word	0x40021000
 8000ab8:	fffeffff 	.word	0xfffeffff
 8000abc:	fffbffff 	.word	0xfffbffff
 8000ac0:	40007000 	.word	0x40007000
 8000ac4:	687b      	ldr	r3, [r7, #4]
 8000ac6:	689b      	ldr	r3, [r3, #8]
 8000ac8:	2b00      	cmp	r3, #0
 8000aca:	d10c      	bne.n	8000ae6 <HAL_RCC_OscConfig+0x362>
 8000acc:	4bca      	ldr	r3, [pc, #808]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ace:	6a1a      	ldr	r2, [r3, #32]
 8000ad0:	4bc9      	ldr	r3, [pc, #804]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ad2:	2101      	movs	r1, #1
 8000ad4:	438a      	bics	r2, r1
 8000ad6:	621a      	str	r2, [r3, #32]
 8000ad8:	4bc7      	ldr	r3, [pc, #796]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ada:	6a1a      	ldr	r2, [r3, #32]
 8000adc:	4bc6      	ldr	r3, [pc, #792]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ade:	2104      	movs	r1, #4
 8000ae0:	438a      	bics	r2, r1
 8000ae2:	621a      	str	r2, [r3, #32]
 8000ae4:	e01c      	b.n	8000b20 <HAL_RCC_OscConfig+0x39c>
 8000ae6:	687b      	ldr	r3, [r7, #4]
 8000ae8:	689b      	ldr	r3, [r3, #8]
 8000aea:	2b05      	cmp	r3, #5
 8000aec:	d10c      	bne.n	8000b08 <HAL_RCC_OscConfig+0x384>
 8000aee:	4bc2      	ldr	r3, [pc, #776]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000af0:	6a1a      	ldr	r2, [r3, #32]
 8000af2:	4bc1      	ldr	r3, [pc, #772]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000af4:	2104      	movs	r1, #4
 8000af6:	430a      	orrs	r2, r1
 8000af8:	621a      	str	r2, [r3, #32]
 8000afa:	4bbf      	ldr	r3, [pc, #764]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000afc:	6a1a      	ldr	r2, [r3, #32]
 8000afe:	4bbe      	ldr	r3, [pc, #760]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b00:	2101      	movs	r1, #1
 8000b02:	430a      	orrs	r2, r1
 8000b04:	621a      	str	r2, [r3, #32]
 8000b06:	e00b      	b.n	8000b20 <HAL_RCC_OscConfig+0x39c>
 8000b08:	4bbb      	ldr	r3, [pc, #748]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b0a:	6a1a      	ldr	r2, [r3, #32]
 8000b0c:	4bba      	ldr	r3, [pc, #744]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b0e:	2101      	movs	r1, #1
 8000b10:	438a      	bics	r2, r1
 8000b12:	621a      	str	r2, [r3, #32]
 8000b14:	4bb8      	ldr	r3, [pc, #736]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b16:	6a1a      	ldr	r2, [r3, #32]
 8000b18:	4bb7      	ldr	r3, [pc, #732]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b1a:	2104      	movs	r1, #4
 8000b1c:	438a      	bics	r2, r1
 8000b1e:	621a      	str	r2, [r3, #32]
 8000b20:	687b      	ldr	r3, [r7, #4]
 8000b22:	689b      	ldr	r3, [r3, #8]
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d014      	beq.n	8000b52 <HAL_RCC_OscConfig+0x3ce>
 8000b28:	f7ff fbb6 	bl	8000298 <HAL_GetTick>
 8000b2c:	0003      	movs	r3, r0
 8000b2e:	613b      	str	r3, [r7, #16]
 8000b30:	e009      	b.n	8000b46 <HAL_RCC_OscConfig+0x3c2>
 8000b32:	f7ff fbb1 	bl	8000298 <HAL_GetTick>
 8000b36:	0002      	movs	r2, r0
 8000b38:	693b      	ldr	r3, [r7, #16]
 8000b3a:	1ad3      	subs	r3, r2, r3
 8000b3c:	4aaf      	ldr	r2, [pc, #700]	; (8000dfc <HAL_RCC_OscConfig+0x678>)
 8000b3e:	4293      	cmp	r3, r2
 8000b40:	d901      	bls.n	8000b46 <HAL_RCC_OscConfig+0x3c2>
 8000b42:	2303      	movs	r3, #3
 8000b44:	e177      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000b46:	4bac      	ldr	r3, [pc, #688]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b48:	6a1b      	ldr	r3, [r3, #32]
 8000b4a:	2202      	movs	r2, #2
 8000b4c:	4013      	ands	r3, r2
 8000b4e:	d0f0      	beq.n	8000b32 <HAL_RCC_OscConfig+0x3ae>
 8000b50:	e013      	b.n	8000b7a <HAL_RCC_OscConfig+0x3f6>
 8000b52:	f7ff fba1 	bl	8000298 <HAL_GetTick>
 8000b56:	0003      	movs	r3, r0
 8000b58:	613b      	str	r3, [r7, #16]
 8000b5a:	e009      	b.n	8000b70 <HAL_RCC_OscConfig+0x3ec>
 8000b5c:	f7ff fb9c 	bl	8000298 <HAL_GetTick>
 8000b60:	0002      	movs	r2, r0
 8000b62:	693b      	ldr	r3, [r7, #16]
 8000b64:	1ad3      	subs	r3, r2, r3
 8000b66:	4aa5      	ldr	r2, [pc, #660]	; (8000dfc <HAL_RCC_OscConfig+0x678>)
 8000b68:	4293      	cmp	r3, r2
 8000b6a:	d901      	bls.n	8000b70 <HAL_RCC_OscConfig+0x3ec>
 8000b6c:	2303      	movs	r3, #3
 8000b6e:	e162      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000b70:	4ba1      	ldr	r3, [pc, #644]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b72:	6a1b      	ldr	r3, [r3, #32]
 8000b74:	2202      	movs	r2, #2
 8000b76:	4013      	ands	r3, r2
 8000b78:	d1f0      	bne.n	8000b5c <HAL_RCC_OscConfig+0x3d8>
 8000b7a:	2317      	movs	r3, #23
 8000b7c:	18fb      	adds	r3, r7, r3
 8000b7e:	781b      	ldrb	r3, [r3, #0]
 8000b80:	2b01      	cmp	r3, #1
 8000b82:	d105      	bne.n	8000b90 <HAL_RCC_OscConfig+0x40c>
 8000b84:	4b9c      	ldr	r3, [pc, #624]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b86:	69da      	ldr	r2, [r3, #28]
 8000b88:	4b9b      	ldr	r3, [pc, #620]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000b8a:	499d      	ldr	r1, [pc, #628]	; (8000e00 <HAL_RCC_OscConfig+0x67c>)
 8000b8c:	400a      	ands	r2, r1
 8000b8e:	61da      	str	r2, [r3, #28]
 8000b90:	687b      	ldr	r3, [r7, #4]
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	2210      	movs	r2, #16
 8000b96:	4013      	ands	r3, r2
 8000b98:	d063      	beq.n	8000c62 <HAL_RCC_OscConfig+0x4de>
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	695b      	ldr	r3, [r3, #20]
 8000b9e:	2b01      	cmp	r3, #1
 8000ba0:	d12a      	bne.n	8000bf8 <HAL_RCC_OscConfig+0x474>
 8000ba2:	4b95      	ldr	r3, [pc, #596]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ba4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000ba6:	4b94      	ldr	r3, [pc, #592]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ba8:	2104      	movs	r1, #4
 8000baa:	430a      	orrs	r2, r1
 8000bac:	635a      	str	r2, [r3, #52]	; 0x34
 8000bae:	4b92      	ldr	r3, [pc, #584]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000bb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000bb2:	4b91      	ldr	r3, [pc, #580]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000bb4:	2101      	movs	r1, #1
 8000bb6:	430a      	orrs	r2, r1
 8000bb8:	635a      	str	r2, [r3, #52]	; 0x34
 8000bba:	f7ff fb6d 	bl	8000298 <HAL_GetTick>
 8000bbe:	0003      	movs	r3, r0
 8000bc0:	613b      	str	r3, [r7, #16]
 8000bc2:	e008      	b.n	8000bd6 <HAL_RCC_OscConfig+0x452>
 8000bc4:	f7ff fb68 	bl	8000298 <HAL_GetTick>
 8000bc8:	0002      	movs	r2, r0
 8000bca:	693b      	ldr	r3, [r7, #16]
 8000bcc:	1ad3      	subs	r3, r2, r3
 8000bce:	2b02      	cmp	r3, #2
 8000bd0:	d901      	bls.n	8000bd6 <HAL_RCC_OscConfig+0x452>
 8000bd2:	2303      	movs	r3, #3
 8000bd4:	e12f      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000bd6:	4b88      	ldr	r3, [pc, #544]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000bd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000bda:	2202      	movs	r2, #2
 8000bdc:	4013      	ands	r3, r2
 8000bde:	d0f1      	beq.n	8000bc4 <HAL_RCC_OscConfig+0x440>
 8000be0:	4b85      	ldr	r3, [pc, #532]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000be2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000be4:	22f8      	movs	r2, #248	; 0xf8
 8000be6:	4393      	bics	r3, r2
 8000be8:	0019      	movs	r1, r3
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	699b      	ldr	r3, [r3, #24]
 8000bee:	00da      	lsls	r2, r3, #3
 8000bf0:	4b81      	ldr	r3, [pc, #516]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000bf2:	430a      	orrs	r2, r1
 8000bf4:	635a      	str	r2, [r3, #52]	; 0x34
 8000bf6:	e034      	b.n	8000c62 <HAL_RCC_OscConfig+0x4de>
 8000bf8:	687b      	ldr	r3, [r7, #4]
 8000bfa:	695b      	ldr	r3, [r3, #20]
 8000bfc:	3305      	adds	r3, #5
 8000bfe:	d111      	bne.n	8000c24 <HAL_RCC_OscConfig+0x4a0>
 8000c00:	4b7d      	ldr	r3, [pc, #500]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c02:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000c04:	4b7c      	ldr	r3, [pc, #496]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c06:	2104      	movs	r1, #4
 8000c08:	438a      	bics	r2, r1
 8000c0a:	635a      	str	r2, [r3, #52]	; 0x34
 8000c0c:	4b7a      	ldr	r3, [pc, #488]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000c10:	22f8      	movs	r2, #248	; 0xf8
 8000c12:	4393      	bics	r3, r2
 8000c14:	0019      	movs	r1, r3
 8000c16:	687b      	ldr	r3, [r7, #4]
 8000c18:	699b      	ldr	r3, [r3, #24]
 8000c1a:	00da      	lsls	r2, r3, #3
 8000c1c:	4b76      	ldr	r3, [pc, #472]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c1e:	430a      	orrs	r2, r1
 8000c20:	635a      	str	r2, [r3, #52]	; 0x34
 8000c22:	e01e      	b.n	8000c62 <HAL_RCC_OscConfig+0x4de>
 8000c24:	4b74      	ldr	r3, [pc, #464]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000c28:	4b73      	ldr	r3, [pc, #460]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c2a:	2104      	movs	r1, #4
 8000c2c:	430a      	orrs	r2, r1
 8000c2e:	635a      	str	r2, [r3, #52]	; 0x34
 8000c30:	4b71      	ldr	r3, [pc, #452]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c32:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000c34:	4b70      	ldr	r3, [pc, #448]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c36:	2101      	movs	r1, #1
 8000c38:	438a      	bics	r2, r1
 8000c3a:	635a      	str	r2, [r3, #52]	; 0x34
 8000c3c:	f7ff fb2c 	bl	8000298 <HAL_GetTick>
 8000c40:	0003      	movs	r3, r0
 8000c42:	613b      	str	r3, [r7, #16]
 8000c44:	e008      	b.n	8000c58 <HAL_RCC_OscConfig+0x4d4>
 8000c46:	f7ff fb27 	bl	8000298 <HAL_GetTick>
 8000c4a:	0002      	movs	r2, r0
 8000c4c:	693b      	ldr	r3, [r7, #16]
 8000c4e:	1ad3      	subs	r3, r2, r3
 8000c50:	2b02      	cmp	r3, #2
 8000c52:	d901      	bls.n	8000c58 <HAL_RCC_OscConfig+0x4d4>
 8000c54:	2303      	movs	r3, #3
 8000c56:	e0ee      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000c58:	4b67      	ldr	r3, [pc, #412]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000c5c:	2202      	movs	r2, #2
 8000c5e:	4013      	ands	r3, r2
 8000c60:	d1f1      	bne.n	8000c46 <HAL_RCC_OscConfig+0x4c2>
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	681b      	ldr	r3, [r3, #0]
 8000c66:	2220      	movs	r2, #32
 8000c68:	4013      	ands	r3, r2
 8000c6a:	d05c      	beq.n	8000d26 <HAL_RCC_OscConfig+0x5a2>
 8000c6c:	4b62      	ldr	r3, [pc, #392]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c6e:	685b      	ldr	r3, [r3, #4]
 8000c70:	220c      	movs	r2, #12
 8000c72:	4013      	ands	r3, r2
 8000c74:	2b0c      	cmp	r3, #12
 8000c76:	d00e      	beq.n	8000c96 <HAL_RCC_OscConfig+0x512>
 8000c78:	4b5f      	ldr	r3, [pc, #380]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c7a:	685b      	ldr	r3, [r3, #4]
 8000c7c:	220c      	movs	r2, #12
 8000c7e:	4013      	ands	r3, r2
 8000c80:	2b08      	cmp	r3, #8
 8000c82:	d114      	bne.n	8000cae <HAL_RCC_OscConfig+0x52a>
 8000c84:	4b5c      	ldr	r3, [pc, #368]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c86:	685a      	ldr	r2, [r3, #4]
 8000c88:	23c0      	movs	r3, #192	; 0xc0
 8000c8a:	025b      	lsls	r3, r3, #9
 8000c8c:	401a      	ands	r2, r3
 8000c8e:	23c0      	movs	r3, #192	; 0xc0
 8000c90:	025b      	lsls	r3, r3, #9
 8000c92:	429a      	cmp	r2, r3
 8000c94:	d10b      	bne.n	8000cae <HAL_RCC_OscConfig+0x52a>
 8000c96:	4b58      	ldr	r3, [pc, #352]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000c98:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000c9a:	2380      	movs	r3, #128	; 0x80
 8000c9c:	025b      	lsls	r3, r3, #9
 8000c9e:	4013      	ands	r3, r2
 8000ca0:	d040      	beq.n	8000d24 <HAL_RCC_OscConfig+0x5a0>
 8000ca2:	687b      	ldr	r3, [r7, #4]
 8000ca4:	6a1b      	ldr	r3, [r3, #32]
 8000ca6:	2b01      	cmp	r3, #1
 8000ca8:	d03c      	beq.n	8000d24 <HAL_RCC_OscConfig+0x5a0>
 8000caa:	2301      	movs	r3, #1
 8000cac:	e0c3      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000cae:	687b      	ldr	r3, [r7, #4]
 8000cb0:	6a1b      	ldr	r3, [r3, #32]
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d01b      	beq.n	8000cee <HAL_RCC_OscConfig+0x56a>
 8000cb6:	4b50      	ldr	r3, [pc, #320]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000cb8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000cba:	4b4f      	ldr	r3, [pc, #316]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000cbc:	2180      	movs	r1, #128	; 0x80
 8000cbe:	0249      	lsls	r1, r1, #9
 8000cc0:	430a      	orrs	r2, r1
 8000cc2:	635a      	str	r2, [r3, #52]	; 0x34
 8000cc4:	f7ff fae8 	bl	8000298 <HAL_GetTick>
 8000cc8:	0003      	movs	r3, r0
 8000cca:	613b      	str	r3, [r7, #16]
 8000ccc:	e008      	b.n	8000ce0 <HAL_RCC_OscConfig+0x55c>
 8000cce:	f7ff fae3 	bl	8000298 <HAL_GetTick>
 8000cd2:	0002      	movs	r2, r0
 8000cd4:	693b      	ldr	r3, [r7, #16]
 8000cd6:	1ad3      	subs	r3, r2, r3
 8000cd8:	2b02      	cmp	r3, #2
 8000cda:	d901      	bls.n	8000ce0 <HAL_RCC_OscConfig+0x55c>
 8000cdc:	2303      	movs	r3, #3
 8000cde:	e0aa      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000ce0:	4b45      	ldr	r3, [pc, #276]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000ce2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000ce4:	2380      	movs	r3, #128	; 0x80
 8000ce6:	025b      	lsls	r3, r3, #9
 8000ce8:	4013      	ands	r3, r2
 8000cea:	d0f0      	beq.n	8000cce <HAL_RCC_OscConfig+0x54a>
 8000cec:	e01b      	b.n	8000d26 <HAL_RCC_OscConfig+0x5a2>
 8000cee:	4b42      	ldr	r3, [pc, #264]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000cf0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000cf2:	4b41      	ldr	r3, [pc, #260]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000cf4:	4943      	ldr	r1, [pc, #268]	; (8000e04 <HAL_RCC_OscConfig+0x680>)
 8000cf6:	400a      	ands	r2, r1
 8000cf8:	635a      	str	r2, [r3, #52]	; 0x34
 8000cfa:	f7ff facd 	bl	8000298 <HAL_GetTick>
 8000cfe:	0003      	movs	r3, r0
 8000d00:	613b      	str	r3, [r7, #16]
 8000d02:	e008      	b.n	8000d16 <HAL_RCC_OscConfig+0x592>
 8000d04:	f7ff fac8 	bl	8000298 <HAL_GetTick>
 8000d08:	0002      	movs	r2, r0
 8000d0a:	693b      	ldr	r3, [r7, #16]
 8000d0c:	1ad3      	subs	r3, r2, r3
 8000d0e:	2b02      	cmp	r3, #2
 8000d10:	d901      	bls.n	8000d16 <HAL_RCC_OscConfig+0x592>
 8000d12:	2303      	movs	r3, #3
 8000d14:	e08f      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000d16:	4b38      	ldr	r3, [pc, #224]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d18:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000d1a:	2380      	movs	r3, #128	; 0x80
 8000d1c:	025b      	lsls	r3, r3, #9
 8000d1e:	4013      	ands	r3, r2
 8000d20:	d1f0      	bne.n	8000d04 <HAL_RCC_OscConfig+0x580>
 8000d22:	e000      	b.n	8000d26 <HAL_RCC_OscConfig+0x5a2>
 8000d24:	46c0      	nop			; (mov r8, r8)
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d2a:	2b00      	cmp	r3, #0
 8000d2c:	d100      	bne.n	8000d30 <HAL_RCC_OscConfig+0x5ac>
 8000d2e:	e081      	b.n	8000e34 <HAL_RCC_OscConfig+0x6b0>
 8000d30:	4b31      	ldr	r3, [pc, #196]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d32:	685b      	ldr	r3, [r3, #4]
 8000d34:	220c      	movs	r2, #12
 8000d36:	4013      	ands	r3, r2
 8000d38:	2b08      	cmp	r3, #8
 8000d3a:	d100      	bne.n	8000d3e <HAL_RCC_OscConfig+0x5ba>
 8000d3c:	e078      	b.n	8000e30 <HAL_RCC_OscConfig+0x6ac>
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d42:	2b02      	cmp	r3, #2
 8000d44:	d14c      	bne.n	8000de0 <HAL_RCC_OscConfig+0x65c>
 8000d46:	4b2c      	ldr	r3, [pc, #176]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d48:	681a      	ldr	r2, [r3, #0]
 8000d4a:	4b2b      	ldr	r3, [pc, #172]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d4c:	492e      	ldr	r1, [pc, #184]	; (8000e08 <HAL_RCC_OscConfig+0x684>)
 8000d4e:	400a      	ands	r2, r1
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	f7ff faa1 	bl	8000298 <HAL_GetTick>
 8000d56:	0003      	movs	r3, r0
 8000d58:	613b      	str	r3, [r7, #16]
 8000d5a:	e008      	b.n	8000d6e <HAL_RCC_OscConfig+0x5ea>
 8000d5c:	f7ff fa9c 	bl	8000298 <HAL_GetTick>
 8000d60:	0002      	movs	r2, r0
 8000d62:	693b      	ldr	r3, [r7, #16]
 8000d64:	1ad3      	subs	r3, r2, r3
 8000d66:	2b02      	cmp	r3, #2
 8000d68:	d901      	bls.n	8000d6e <HAL_RCC_OscConfig+0x5ea>
 8000d6a:	2303      	movs	r3, #3
 8000d6c:	e063      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000d6e:	4b22      	ldr	r3, [pc, #136]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d70:	681a      	ldr	r2, [r3, #0]
 8000d72:	2380      	movs	r3, #128	; 0x80
 8000d74:	049b      	lsls	r3, r3, #18
 8000d76:	4013      	ands	r3, r2
 8000d78:	d1f0      	bne.n	8000d5c <HAL_RCC_OscConfig+0x5d8>
 8000d7a:	4b1f      	ldr	r3, [pc, #124]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000d7e:	220f      	movs	r2, #15
 8000d80:	4393      	bics	r3, r2
 8000d82:	0019      	movs	r1, r3
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d88:	4b1b      	ldr	r3, [pc, #108]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d8a:	430a      	orrs	r2, r1
 8000d8c:	62da      	str	r2, [r3, #44]	; 0x2c
 8000d8e:	4b1a      	ldr	r3, [pc, #104]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000d90:	685b      	ldr	r3, [r3, #4]
 8000d92:	4a1e      	ldr	r2, [pc, #120]	; (8000e0c <HAL_RCC_OscConfig+0x688>)
 8000d94:	4013      	ands	r3, r2
 8000d96:	0019      	movs	r1, r3
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000da0:	431a      	orrs	r2, r3
 8000da2:	4b15      	ldr	r3, [pc, #84]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000da4:	430a      	orrs	r2, r1
 8000da6:	605a      	str	r2, [r3, #4]
 8000da8:	4b13      	ldr	r3, [pc, #76]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000daa:	681a      	ldr	r2, [r3, #0]
 8000dac:	4b12      	ldr	r3, [pc, #72]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000dae:	2180      	movs	r1, #128	; 0x80
 8000db0:	0449      	lsls	r1, r1, #17
 8000db2:	430a      	orrs	r2, r1
 8000db4:	601a      	str	r2, [r3, #0]
 8000db6:	f7ff fa6f 	bl	8000298 <HAL_GetTick>
 8000dba:	0003      	movs	r3, r0
 8000dbc:	613b      	str	r3, [r7, #16]
 8000dbe:	e008      	b.n	8000dd2 <HAL_RCC_OscConfig+0x64e>
 8000dc0:	f7ff fa6a 	bl	8000298 <HAL_GetTick>
 8000dc4:	0002      	movs	r2, r0
 8000dc6:	693b      	ldr	r3, [r7, #16]
 8000dc8:	1ad3      	subs	r3, r2, r3
 8000dca:	2b02      	cmp	r3, #2
 8000dcc:	d901      	bls.n	8000dd2 <HAL_RCC_OscConfig+0x64e>
 8000dce:	2303      	movs	r3, #3
 8000dd0:	e031      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000dd2:	4b09      	ldr	r3, [pc, #36]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000dd4:	681a      	ldr	r2, [r3, #0]
 8000dd6:	2380      	movs	r3, #128	; 0x80
 8000dd8:	049b      	lsls	r3, r3, #18
 8000dda:	4013      	ands	r3, r2
 8000ddc:	d0f0      	beq.n	8000dc0 <HAL_RCC_OscConfig+0x63c>
 8000dde:	e029      	b.n	8000e34 <HAL_RCC_OscConfig+0x6b0>
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000de2:	681a      	ldr	r2, [r3, #0]
 8000de4:	4b04      	ldr	r3, [pc, #16]	; (8000df8 <HAL_RCC_OscConfig+0x674>)
 8000de6:	4908      	ldr	r1, [pc, #32]	; (8000e08 <HAL_RCC_OscConfig+0x684>)
 8000de8:	400a      	ands	r2, r1
 8000dea:	601a      	str	r2, [r3, #0]
 8000dec:	f7ff fa54 	bl	8000298 <HAL_GetTick>
 8000df0:	0003      	movs	r3, r0
 8000df2:	613b      	str	r3, [r7, #16]
 8000df4:	e015      	b.n	8000e22 <HAL_RCC_OscConfig+0x69e>
 8000df6:	46c0      	nop			; (mov r8, r8)
 8000df8:	40021000 	.word	0x40021000
 8000dfc:	00001388 	.word	0x00001388
 8000e00:	efffffff 	.word	0xefffffff
 8000e04:	fffeffff 	.word	0xfffeffff
 8000e08:	feffffff 	.word	0xfeffffff
 8000e0c:	ffc27fff 	.word	0xffc27fff
 8000e10:	f7ff fa42 	bl	8000298 <HAL_GetTick>
 8000e14:	0002      	movs	r2, r0
 8000e16:	693b      	ldr	r3, [r7, #16]
 8000e18:	1ad3      	subs	r3, r2, r3
 8000e1a:	2b02      	cmp	r3, #2
 8000e1c:	d901      	bls.n	8000e22 <HAL_RCC_OscConfig+0x69e>
 8000e1e:	2303      	movs	r3, #3
 8000e20:	e009      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000e22:	4b07      	ldr	r3, [pc, #28]	; (8000e40 <HAL_RCC_OscConfig+0x6bc>)
 8000e24:	681a      	ldr	r2, [r3, #0]
 8000e26:	2380      	movs	r3, #128	; 0x80
 8000e28:	049b      	lsls	r3, r3, #18
 8000e2a:	4013      	ands	r3, r2
 8000e2c:	d1f0      	bne.n	8000e10 <HAL_RCC_OscConfig+0x68c>
 8000e2e:	e001      	b.n	8000e34 <HAL_RCC_OscConfig+0x6b0>
 8000e30:	2301      	movs	r3, #1
 8000e32:	e000      	b.n	8000e36 <HAL_RCC_OscConfig+0x6b2>
 8000e34:	2300      	movs	r3, #0
 8000e36:	0018      	movs	r0, r3
 8000e38:	46bd      	mov	sp, r7
 8000e3a:	b006      	add	sp, #24
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	46c0      	nop			; (mov r8, r8)
 8000e40:	40021000 	.word	0x40021000

08000e44 <HAL_RCC_ClockConfig>:
 8000e44:	b580      	push	{r7, lr}
 8000e46:	b084      	sub	sp, #16
 8000e48:	af00      	add	r7, sp, #0
 8000e4a:	6078      	str	r0, [r7, #4]
 8000e4c:	6039      	str	r1, [r7, #0]
 8000e4e:	2300      	movs	r3, #0
 8000e50:	60fb      	str	r3, [r7, #12]
 8000e52:	4b7b      	ldr	r3, [pc, #492]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000e54:	681b      	ldr	r3, [r3, #0]
 8000e56:	2201      	movs	r2, #1
 8000e58:	4013      	ands	r3, r2
 8000e5a:	683a      	ldr	r2, [r7, #0]
 8000e5c:	429a      	cmp	r2, r3
 8000e5e:	d911      	bls.n	8000e84 <HAL_RCC_ClockConfig+0x40>
 8000e60:	4b77      	ldr	r3, [pc, #476]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	2201      	movs	r2, #1
 8000e66:	4393      	bics	r3, r2
 8000e68:	0019      	movs	r1, r3
 8000e6a:	4b75      	ldr	r3, [pc, #468]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000e6c:	683a      	ldr	r2, [r7, #0]
 8000e6e:	430a      	orrs	r2, r1
 8000e70:	601a      	str	r2, [r3, #0]
 8000e72:	4b73      	ldr	r3, [pc, #460]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	2201      	movs	r2, #1
 8000e78:	4013      	ands	r3, r2
 8000e7a:	683a      	ldr	r2, [r7, #0]
 8000e7c:	429a      	cmp	r2, r3
 8000e7e:	d001      	beq.n	8000e84 <HAL_RCC_ClockConfig+0x40>
 8000e80:	2301      	movs	r3, #1
 8000e82:	e0d8      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	2202      	movs	r2, #2
 8000e8a:	4013      	ands	r3, r2
 8000e8c:	d009      	beq.n	8000ea2 <HAL_RCC_ClockConfig+0x5e>
 8000e8e:	4b6d      	ldr	r3, [pc, #436]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000e90:	685b      	ldr	r3, [r3, #4]
 8000e92:	22f0      	movs	r2, #240	; 0xf0
 8000e94:	4393      	bics	r3, r2
 8000e96:	0019      	movs	r1, r3
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	689a      	ldr	r2, [r3, #8]
 8000e9c:	4b69      	ldr	r3, [pc, #420]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000e9e:	430a      	orrs	r2, r1
 8000ea0:	605a      	str	r2, [r3, #4]
 8000ea2:	687b      	ldr	r3, [r7, #4]
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	2201      	movs	r2, #1
 8000ea8:	4013      	ands	r3, r2
 8000eaa:	d100      	bne.n	8000eae <HAL_RCC_ClockConfig+0x6a>
 8000eac:	e089      	b.n	8000fc2 <HAL_RCC_ClockConfig+0x17e>
 8000eae:	687b      	ldr	r3, [r7, #4]
 8000eb0:	685b      	ldr	r3, [r3, #4]
 8000eb2:	2b01      	cmp	r3, #1
 8000eb4:	d107      	bne.n	8000ec6 <HAL_RCC_ClockConfig+0x82>
 8000eb6:	4b63      	ldr	r3, [pc, #396]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000eb8:	681a      	ldr	r2, [r3, #0]
 8000eba:	2380      	movs	r3, #128	; 0x80
 8000ebc:	029b      	lsls	r3, r3, #10
 8000ebe:	4013      	ands	r3, r2
 8000ec0:	d120      	bne.n	8000f04 <HAL_RCC_ClockConfig+0xc0>
 8000ec2:	2301      	movs	r3, #1
 8000ec4:	e0b7      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000ec6:	687b      	ldr	r3, [r7, #4]
 8000ec8:	685b      	ldr	r3, [r3, #4]
 8000eca:	2b02      	cmp	r3, #2
 8000ecc:	d107      	bne.n	8000ede <HAL_RCC_ClockConfig+0x9a>
 8000ece:	4b5d      	ldr	r3, [pc, #372]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000ed0:	681a      	ldr	r2, [r3, #0]
 8000ed2:	2380      	movs	r3, #128	; 0x80
 8000ed4:	049b      	lsls	r3, r3, #18
 8000ed6:	4013      	ands	r3, r2
 8000ed8:	d114      	bne.n	8000f04 <HAL_RCC_ClockConfig+0xc0>
 8000eda:	2301      	movs	r3, #1
 8000edc:	e0ab      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	685b      	ldr	r3, [r3, #4]
 8000ee2:	2b03      	cmp	r3, #3
 8000ee4:	d107      	bne.n	8000ef6 <HAL_RCC_ClockConfig+0xb2>
 8000ee6:	4b57      	ldr	r3, [pc, #348]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000ee8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000eea:	2380      	movs	r3, #128	; 0x80
 8000eec:	025b      	lsls	r3, r3, #9
 8000eee:	4013      	ands	r3, r2
 8000ef0:	d108      	bne.n	8000f04 <HAL_RCC_ClockConfig+0xc0>
 8000ef2:	2301      	movs	r3, #1
 8000ef4:	e09f      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000ef6:	4b53      	ldr	r3, [pc, #332]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	2202      	movs	r2, #2
 8000efc:	4013      	ands	r3, r2
 8000efe:	d101      	bne.n	8000f04 <HAL_RCC_ClockConfig+0xc0>
 8000f00:	2301      	movs	r3, #1
 8000f02:	e098      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000f04:	4b4f      	ldr	r3, [pc, #316]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000f06:	685b      	ldr	r3, [r3, #4]
 8000f08:	2203      	movs	r2, #3
 8000f0a:	4393      	bics	r3, r2
 8000f0c:	0019      	movs	r1, r3
 8000f0e:	687b      	ldr	r3, [r7, #4]
 8000f10:	685a      	ldr	r2, [r3, #4]
 8000f12:	4b4c      	ldr	r3, [pc, #304]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000f14:	430a      	orrs	r2, r1
 8000f16:	605a      	str	r2, [r3, #4]
 8000f18:	f7ff f9be 	bl	8000298 <HAL_GetTick>
 8000f1c:	0003      	movs	r3, r0
 8000f1e:	60fb      	str	r3, [r7, #12]
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	685b      	ldr	r3, [r3, #4]
 8000f24:	2b01      	cmp	r3, #1
 8000f26:	d111      	bne.n	8000f4c <HAL_RCC_ClockConfig+0x108>
 8000f28:	e009      	b.n	8000f3e <HAL_RCC_ClockConfig+0xfa>
 8000f2a:	f7ff f9b5 	bl	8000298 <HAL_GetTick>
 8000f2e:	0002      	movs	r2, r0
 8000f30:	68fb      	ldr	r3, [r7, #12]
 8000f32:	1ad3      	subs	r3, r2, r3
 8000f34:	4a44      	ldr	r2, [pc, #272]	; (8001048 <HAL_RCC_ClockConfig+0x204>)
 8000f36:	4293      	cmp	r3, r2
 8000f38:	d901      	bls.n	8000f3e <HAL_RCC_ClockConfig+0xfa>
 8000f3a:	2303      	movs	r3, #3
 8000f3c:	e07b      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000f3e:	4b41      	ldr	r3, [pc, #260]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000f40:	685b      	ldr	r3, [r3, #4]
 8000f42:	220c      	movs	r2, #12
 8000f44:	4013      	ands	r3, r2
 8000f46:	2b04      	cmp	r3, #4
 8000f48:	d1ef      	bne.n	8000f2a <HAL_RCC_ClockConfig+0xe6>
 8000f4a:	e03a      	b.n	8000fc2 <HAL_RCC_ClockConfig+0x17e>
 8000f4c:	687b      	ldr	r3, [r7, #4]
 8000f4e:	685b      	ldr	r3, [r3, #4]
 8000f50:	2b02      	cmp	r3, #2
 8000f52:	d111      	bne.n	8000f78 <HAL_RCC_ClockConfig+0x134>
 8000f54:	e009      	b.n	8000f6a <HAL_RCC_ClockConfig+0x126>
 8000f56:	f7ff f99f 	bl	8000298 <HAL_GetTick>
 8000f5a:	0002      	movs	r2, r0
 8000f5c:	68fb      	ldr	r3, [r7, #12]
 8000f5e:	1ad3      	subs	r3, r2, r3
 8000f60:	4a39      	ldr	r2, [pc, #228]	; (8001048 <HAL_RCC_ClockConfig+0x204>)
 8000f62:	4293      	cmp	r3, r2
 8000f64:	d901      	bls.n	8000f6a <HAL_RCC_ClockConfig+0x126>
 8000f66:	2303      	movs	r3, #3
 8000f68:	e065      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000f6a:	4b36      	ldr	r3, [pc, #216]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000f6c:	685b      	ldr	r3, [r3, #4]
 8000f6e:	220c      	movs	r2, #12
 8000f70:	4013      	ands	r3, r2
 8000f72:	2b08      	cmp	r3, #8
 8000f74:	d1ef      	bne.n	8000f56 <HAL_RCC_ClockConfig+0x112>
 8000f76:	e024      	b.n	8000fc2 <HAL_RCC_ClockConfig+0x17e>
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	685b      	ldr	r3, [r3, #4]
 8000f7c:	2b03      	cmp	r3, #3
 8000f7e:	d11b      	bne.n	8000fb8 <HAL_RCC_ClockConfig+0x174>
 8000f80:	e009      	b.n	8000f96 <HAL_RCC_ClockConfig+0x152>
 8000f82:	f7ff f989 	bl	8000298 <HAL_GetTick>
 8000f86:	0002      	movs	r2, r0
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	1ad3      	subs	r3, r2, r3
 8000f8c:	4a2e      	ldr	r2, [pc, #184]	; (8001048 <HAL_RCC_ClockConfig+0x204>)
 8000f8e:	4293      	cmp	r3, r2
 8000f90:	d901      	bls.n	8000f96 <HAL_RCC_ClockConfig+0x152>
 8000f92:	2303      	movs	r3, #3
 8000f94:	e04f      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000f96:	4b2b      	ldr	r3, [pc, #172]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000f98:	685b      	ldr	r3, [r3, #4]
 8000f9a:	220c      	movs	r2, #12
 8000f9c:	4013      	ands	r3, r2
 8000f9e:	2b0c      	cmp	r3, #12
 8000fa0:	d1ef      	bne.n	8000f82 <HAL_RCC_ClockConfig+0x13e>
 8000fa2:	e00e      	b.n	8000fc2 <HAL_RCC_ClockConfig+0x17e>
 8000fa4:	f7ff f978 	bl	8000298 <HAL_GetTick>
 8000fa8:	0002      	movs	r2, r0
 8000faa:	68fb      	ldr	r3, [r7, #12]
 8000fac:	1ad3      	subs	r3, r2, r3
 8000fae:	4a26      	ldr	r2, [pc, #152]	; (8001048 <HAL_RCC_ClockConfig+0x204>)
 8000fb0:	4293      	cmp	r3, r2
 8000fb2:	d901      	bls.n	8000fb8 <HAL_RCC_ClockConfig+0x174>
 8000fb4:	2303      	movs	r3, #3
 8000fb6:	e03e      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000fb8:	4b22      	ldr	r3, [pc, #136]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8000fba:	685b      	ldr	r3, [r3, #4]
 8000fbc:	220c      	movs	r2, #12
 8000fbe:	4013      	ands	r3, r2
 8000fc0:	d1f0      	bne.n	8000fa4 <HAL_RCC_ClockConfig+0x160>
 8000fc2:	4b1f      	ldr	r3, [pc, #124]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	4013      	ands	r3, r2
 8000fca:	683a      	ldr	r2, [r7, #0]
 8000fcc:	429a      	cmp	r2, r3
 8000fce:	d211      	bcs.n	8000ff4 <HAL_RCC_ClockConfig+0x1b0>
 8000fd0:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000fd2:	681b      	ldr	r3, [r3, #0]
 8000fd4:	2201      	movs	r2, #1
 8000fd6:	4393      	bics	r3, r2
 8000fd8:	0019      	movs	r1, r3
 8000fda:	4b19      	ldr	r3, [pc, #100]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000fdc:	683a      	ldr	r2, [r7, #0]
 8000fde:	430a      	orrs	r2, r1
 8000fe0:	601a      	str	r2, [r3, #0]
 8000fe2:	4b17      	ldr	r3, [pc, #92]	; (8001040 <HAL_RCC_ClockConfig+0x1fc>)
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	2201      	movs	r2, #1
 8000fe8:	4013      	ands	r3, r2
 8000fea:	683a      	ldr	r2, [r7, #0]
 8000fec:	429a      	cmp	r2, r3
 8000fee:	d001      	beq.n	8000ff4 <HAL_RCC_ClockConfig+0x1b0>
 8000ff0:	2301      	movs	r3, #1
 8000ff2:	e020      	b.n	8001036 <HAL_RCC_ClockConfig+0x1f2>
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	2204      	movs	r2, #4
 8000ffa:	4013      	ands	r3, r2
 8000ffc:	d009      	beq.n	8001012 <HAL_RCC_ClockConfig+0x1ce>
 8000ffe:	4b11      	ldr	r3, [pc, #68]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 8001000:	685b      	ldr	r3, [r3, #4]
 8001002:	4a12      	ldr	r2, [pc, #72]	; (800104c <HAL_RCC_ClockConfig+0x208>)
 8001004:	4013      	ands	r3, r2
 8001006:	0019      	movs	r1, r3
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	68da      	ldr	r2, [r3, #12]
 800100c:	4b0d      	ldr	r3, [pc, #52]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 800100e:	430a      	orrs	r2, r1
 8001010:	605a      	str	r2, [r3, #4]
 8001012:	f000 f821 	bl	8001058 <HAL_RCC_GetSysClockFreq>
 8001016:	0001      	movs	r1, r0
 8001018:	4b0a      	ldr	r3, [pc, #40]	; (8001044 <HAL_RCC_ClockConfig+0x200>)
 800101a:	685b      	ldr	r3, [r3, #4]
 800101c:	091b      	lsrs	r3, r3, #4
 800101e:	220f      	movs	r2, #15
 8001020:	4013      	ands	r3, r2
 8001022:	4a0b      	ldr	r2, [pc, #44]	; (8001050 <HAL_RCC_ClockConfig+0x20c>)
 8001024:	5cd3      	ldrb	r3, [r2, r3]
 8001026:	000a      	movs	r2, r1
 8001028:	40da      	lsrs	r2, r3
 800102a:	4b0a      	ldr	r3, [pc, #40]	; (8001054 <HAL_RCC_ClockConfig+0x210>)
 800102c:	601a      	str	r2, [r3, #0]
 800102e:	2000      	movs	r0, #0
 8001030:	f7ff f90a 	bl	8000248 <HAL_InitTick>
 8001034:	2300      	movs	r3, #0
 8001036:	0018      	movs	r0, r3
 8001038:	46bd      	mov	sp, r7
 800103a:	b004      	add	sp, #16
 800103c:	bd80      	pop	{r7, pc}
 800103e:	46c0      	nop			; (mov r8, r8)
 8001040:	40022000 	.word	0x40022000
 8001044:	40021000 	.word	0x40021000
 8001048:	00001388 	.word	0x00001388
 800104c:	fffff8ff 	.word	0xfffff8ff
 8001050:	0800372c 	.word	0x0800372c
 8001054:	20000000 	.word	0x20000000

08001058 <HAL_RCC_GetSysClockFreq>:
 8001058:	b590      	push	{r4, r7, lr}
 800105a:	b08f      	sub	sp, #60	; 0x3c
 800105c:	af00      	add	r7, sp, #0
 800105e:	2314      	movs	r3, #20
 8001060:	18fb      	adds	r3, r7, r3
 8001062:	4a37      	ldr	r2, [pc, #220]	; (8001140 <HAL_RCC_GetSysClockFreq+0xe8>)
 8001064:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001066:	c313      	stmia	r3!, {r0, r1, r4}
 8001068:	6812      	ldr	r2, [r2, #0]
 800106a:	601a      	str	r2, [r3, #0]
 800106c:	1d3b      	adds	r3, r7, #4
 800106e:	4a35      	ldr	r2, [pc, #212]	; (8001144 <HAL_RCC_GetSysClockFreq+0xec>)
 8001070:	ca13      	ldmia	r2!, {r0, r1, r4}
 8001072:	c313      	stmia	r3!, {r0, r1, r4}
 8001074:	6812      	ldr	r2, [r2, #0]
 8001076:	601a      	str	r2, [r3, #0]
 8001078:	2300      	movs	r3, #0
 800107a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800107c:	2300      	movs	r3, #0
 800107e:	62bb      	str	r3, [r7, #40]	; 0x28
 8001080:	2300      	movs	r3, #0
 8001082:	637b      	str	r3, [r7, #52]	; 0x34
 8001084:	2300      	movs	r3, #0
 8001086:	627b      	str	r3, [r7, #36]	; 0x24
 8001088:	2300      	movs	r3, #0
 800108a:	633b      	str	r3, [r7, #48]	; 0x30
 800108c:	4b2e      	ldr	r3, [pc, #184]	; (8001148 <HAL_RCC_GetSysClockFreq+0xf0>)
 800108e:	685b      	ldr	r3, [r3, #4]
 8001090:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001092:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001094:	220c      	movs	r2, #12
 8001096:	4013      	ands	r3, r2
 8001098:	2b08      	cmp	r3, #8
 800109a:	d006      	beq.n	80010aa <HAL_RCC_GetSysClockFreq+0x52>
 800109c:	2b0c      	cmp	r3, #12
 800109e:	d043      	beq.n	8001128 <HAL_RCC_GetSysClockFreq+0xd0>
 80010a0:	2b04      	cmp	r3, #4
 80010a2:	d144      	bne.n	800112e <HAL_RCC_GetSysClockFreq+0xd6>
 80010a4:	4b29      	ldr	r3, [pc, #164]	; (800114c <HAL_RCC_GetSysClockFreq+0xf4>)
 80010a6:	633b      	str	r3, [r7, #48]	; 0x30
 80010a8:	e044      	b.n	8001134 <HAL_RCC_GetSysClockFreq+0xdc>
 80010aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80010ac:	0c9b      	lsrs	r3, r3, #18
 80010ae:	220f      	movs	r2, #15
 80010b0:	4013      	ands	r3, r2
 80010b2:	2214      	movs	r2, #20
 80010b4:	18ba      	adds	r2, r7, r2
 80010b6:	5cd3      	ldrb	r3, [r2, r3]
 80010b8:	627b      	str	r3, [r7, #36]	; 0x24
 80010ba:	4b23      	ldr	r3, [pc, #140]	; (8001148 <HAL_RCC_GetSysClockFreq+0xf0>)
 80010bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010be:	220f      	movs	r2, #15
 80010c0:	4013      	ands	r3, r2
 80010c2:	1d3a      	adds	r2, r7, #4
 80010c4:	5cd3      	ldrb	r3, [r2, r3]
 80010c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80010c8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80010ca:	23c0      	movs	r3, #192	; 0xc0
 80010cc:	025b      	lsls	r3, r3, #9
 80010ce:	401a      	ands	r2, r3
 80010d0:	2380      	movs	r3, #128	; 0x80
 80010d2:	025b      	lsls	r3, r3, #9
 80010d4:	429a      	cmp	r2, r3
 80010d6:	d109      	bne.n	80010ec <HAL_RCC_GetSysClockFreq+0x94>
 80010d8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80010da:	481c      	ldr	r0, [pc, #112]	; (800114c <HAL_RCC_GetSysClockFreq+0xf4>)
 80010dc:	f7ff f814 	bl	8000108 <__udivsi3>
 80010e0:	0003      	movs	r3, r0
 80010e2:	001a      	movs	r2, r3
 80010e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010e6:	4353      	muls	r3, r2
 80010e8:	637b      	str	r3, [r7, #52]	; 0x34
 80010ea:	e01a      	b.n	8001122 <HAL_RCC_GetSysClockFreq+0xca>
 80010ec:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80010ee:	23c0      	movs	r3, #192	; 0xc0
 80010f0:	025b      	lsls	r3, r3, #9
 80010f2:	401a      	ands	r2, r3
 80010f4:	23c0      	movs	r3, #192	; 0xc0
 80010f6:	025b      	lsls	r3, r3, #9
 80010f8:	429a      	cmp	r2, r3
 80010fa:	d109      	bne.n	8001110 <HAL_RCC_GetSysClockFreq+0xb8>
 80010fc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80010fe:	4814      	ldr	r0, [pc, #80]	; (8001150 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001100:	f7ff f802 	bl	8000108 <__udivsi3>
 8001104:	0003      	movs	r3, r0
 8001106:	001a      	movs	r2, r3
 8001108:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800110a:	4353      	muls	r3, r2
 800110c:	637b      	str	r3, [r7, #52]	; 0x34
 800110e:	e008      	b.n	8001122 <HAL_RCC_GetSysClockFreq+0xca>
 8001110:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001112:	480e      	ldr	r0, [pc, #56]	; (800114c <HAL_RCC_GetSysClockFreq+0xf4>)
 8001114:	f7fe fff8 	bl	8000108 <__udivsi3>
 8001118:	0003      	movs	r3, r0
 800111a:	001a      	movs	r2, r3
 800111c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800111e:	4353      	muls	r3, r2
 8001120:	637b      	str	r3, [r7, #52]	; 0x34
 8001122:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001124:	633b      	str	r3, [r7, #48]	; 0x30
 8001126:	e005      	b.n	8001134 <HAL_RCC_GetSysClockFreq+0xdc>
 8001128:	4b09      	ldr	r3, [pc, #36]	; (8001150 <HAL_RCC_GetSysClockFreq+0xf8>)
 800112a:	633b      	str	r3, [r7, #48]	; 0x30
 800112c:	e002      	b.n	8001134 <HAL_RCC_GetSysClockFreq+0xdc>
 800112e:	4b07      	ldr	r3, [pc, #28]	; (800114c <HAL_RCC_GetSysClockFreq+0xf4>)
 8001130:	633b      	str	r3, [r7, #48]	; 0x30
 8001132:	46c0      	nop			; (mov r8, r8)
 8001134:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001136:	0018      	movs	r0, r3
 8001138:	46bd      	mov	sp, r7
 800113a:	b00f      	add	sp, #60	; 0x3c
 800113c:	bd90      	pop	{r4, r7, pc}
 800113e:	46c0      	nop			; (mov r8, r8)
 8001140:	0800370c 	.word	0x0800370c
 8001144:	0800371c 	.word	0x0800371c
 8001148:	40021000 	.word	0x40021000
 800114c:	007a1200 	.word	0x007a1200
 8001150:	02dc6c00 	.word	0x02dc6c00

08001154 <HAL_RCC_GetHCLKFreq>:
 8001154:	b580      	push	{r7, lr}
 8001156:	af00      	add	r7, sp, #0
 8001158:	4b02      	ldr	r3, [pc, #8]	; (8001164 <HAL_RCC_GetHCLKFreq+0x10>)
 800115a:	681b      	ldr	r3, [r3, #0]
 800115c:	0018      	movs	r0, r3
 800115e:	46bd      	mov	sp, r7
 8001160:	bd80      	pop	{r7, pc}
 8001162:	46c0      	nop			; (mov r8, r8)
 8001164:	20000000 	.word	0x20000000

08001168 <HAL_RCC_GetPCLK1Freq>:
 8001168:	b580      	push	{r7, lr}
 800116a:	af00      	add	r7, sp, #0
 800116c:	f7ff fff2 	bl	8001154 <HAL_RCC_GetHCLKFreq>
 8001170:	0001      	movs	r1, r0
 8001172:	4b06      	ldr	r3, [pc, #24]	; (800118c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001174:	685b      	ldr	r3, [r3, #4]
 8001176:	0a1b      	lsrs	r3, r3, #8
 8001178:	2207      	movs	r2, #7
 800117a:	4013      	ands	r3, r2
 800117c:	4a04      	ldr	r2, [pc, #16]	; (8001190 <HAL_RCC_GetPCLK1Freq+0x28>)
 800117e:	5cd3      	ldrb	r3, [r2, r3]
 8001180:	40d9      	lsrs	r1, r3
 8001182:	000b      	movs	r3, r1
 8001184:	0018      	movs	r0, r3
 8001186:	46bd      	mov	sp, r7
 8001188:	bd80      	pop	{r7, pc}
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	40021000 	.word	0x40021000
 8001190:	0800373c 	.word	0x0800373c

08001194 <HAL_RCCEx_PeriphCLKConfig>:
 8001194:	b580      	push	{r7, lr}
 8001196:	b086      	sub	sp, #24
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
 800119c:	2300      	movs	r3, #0
 800119e:	613b      	str	r3, [r7, #16]
 80011a0:	2300      	movs	r3, #0
 80011a2:	60fb      	str	r3, [r7, #12]
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	2380      	movs	r3, #128	; 0x80
 80011aa:	025b      	lsls	r3, r3, #9
 80011ac:	4013      	ands	r3, r2
 80011ae:	d100      	bne.n	80011b2 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 80011b0:	e08f      	b.n	80012d2 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 80011b2:	2317      	movs	r3, #23
 80011b4:	18fb      	adds	r3, r7, r3
 80011b6:	2200      	movs	r2, #0
 80011b8:	701a      	strb	r2, [r3, #0]
 80011ba:	4b6f      	ldr	r3, [pc, #444]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80011bc:	69da      	ldr	r2, [r3, #28]
 80011be:	2380      	movs	r3, #128	; 0x80
 80011c0:	055b      	lsls	r3, r3, #21
 80011c2:	4013      	ands	r3, r2
 80011c4:	d111      	bne.n	80011ea <HAL_RCCEx_PeriphCLKConfig+0x56>
 80011c6:	4b6c      	ldr	r3, [pc, #432]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80011c8:	69da      	ldr	r2, [r3, #28]
 80011ca:	4b6b      	ldr	r3, [pc, #428]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80011cc:	2180      	movs	r1, #128	; 0x80
 80011ce:	0549      	lsls	r1, r1, #21
 80011d0:	430a      	orrs	r2, r1
 80011d2:	61da      	str	r2, [r3, #28]
 80011d4:	4b68      	ldr	r3, [pc, #416]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80011d6:	69da      	ldr	r2, [r3, #28]
 80011d8:	2380      	movs	r3, #128	; 0x80
 80011da:	055b      	lsls	r3, r3, #21
 80011dc:	4013      	ands	r3, r2
 80011de:	60bb      	str	r3, [r7, #8]
 80011e0:	68bb      	ldr	r3, [r7, #8]
 80011e2:	2317      	movs	r3, #23
 80011e4:	18fb      	adds	r3, r7, r3
 80011e6:	2201      	movs	r2, #1
 80011e8:	701a      	strb	r2, [r3, #0]
 80011ea:	4b64      	ldr	r3, [pc, #400]	; (800137c <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 80011ec:	681a      	ldr	r2, [r3, #0]
 80011ee:	2380      	movs	r3, #128	; 0x80
 80011f0:	005b      	lsls	r3, r3, #1
 80011f2:	4013      	ands	r3, r2
 80011f4:	d11a      	bne.n	800122c <HAL_RCCEx_PeriphCLKConfig+0x98>
 80011f6:	4b61      	ldr	r3, [pc, #388]	; (800137c <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 80011f8:	681a      	ldr	r2, [r3, #0]
 80011fa:	4b60      	ldr	r3, [pc, #384]	; (800137c <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 80011fc:	2180      	movs	r1, #128	; 0x80
 80011fe:	0049      	lsls	r1, r1, #1
 8001200:	430a      	orrs	r2, r1
 8001202:	601a      	str	r2, [r3, #0]
 8001204:	f7ff f848 	bl	8000298 <HAL_GetTick>
 8001208:	0003      	movs	r3, r0
 800120a:	613b      	str	r3, [r7, #16]
 800120c:	e008      	b.n	8001220 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800120e:	f7ff f843 	bl	8000298 <HAL_GetTick>
 8001212:	0002      	movs	r2, r0
 8001214:	693b      	ldr	r3, [r7, #16]
 8001216:	1ad3      	subs	r3, r2, r3
 8001218:	2b64      	cmp	r3, #100	; 0x64
 800121a:	d901      	bls.n	8001220 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 800121c:	2303      	movs	r3, #3
 800121e:	e0a6      	b.n	800136e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 8001220:	4b56      	ldr	r3, [pc, #344]	; (800137c <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 8001222:	681a      	ldr	r2, [r3, #0]
 8001224:	2380      	movs	r3, #128	; 0x80
 8001226:	005b      	lsls	r3, r3, #1
 8001228:	4013      	ands	r3, r2
 800122a:	d0f0      	beq.n	800120e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 800122c:	4b52      	ldr	r3, [pc, #328]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800122e:	6a1a      	ldr	r2, [r3, #32]
 8001230:	23c0      	movs	r3, #192	; 0xc0
 8001232:	009b      	lsls	r3, r3, #2
 8001234:	4013      	ands	r3, r2
 8001236:	60fb      	str	r3, [r7, #12]
 8001238:	68fb      	ldr	r3, [r7, #12]
 800123a:	2b00      	cmp	r3, #0
 800123c:	d034      	beq.n	80012a8 <HAL_RCCEx_PeriphCLKConfig+0x114>
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	685a      	ldr	r2, [r3, #4]
 8001242:	23c0      	movs	r3, #192	; 0xc0
 8001244:	009b      	lsls	r3, r3, #2
 8001246:	4013      	ands	r3, r2
 8001248:	68fa      	ldr	r2, [r7, #12]
 800124a:	429a      	cmp	r2, r3
 800124c:	d02c      	beq.n	80012a8 <HAL_RCCEx_PeriphCLKConfig+0x114>
 800124e:	4b4a      	ldr	r3, [pc, #296]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001250:	6a1b      	ldr	r3, [r3, #32]
 8001252:	4a4b      	ldr	r2, [pc, #300]	; (8001380 <HAL_RCCEx_PeriphCLKConfig+0x1ec>)
 8001254:	4013      	ands	r3, r2
 8001256:	60fb      	str	r3, [r7, #12]
 8001258:	4b47      	ldr	r3, [pc, #284]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800125a:	6a1a      	ldr	r2, [r3, #32]
 800125c:	4b46      	ldr	r3, [pc, #280]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800125e:	2180      	movs	r1, #128	; 0x80
 8001260:	0249      	lsls	r1, r1, #9
 8001262:	430a      	orrs	r2, r1
 8001264:	621a      	str	r2, [r3, #32]
 8001266:	4b44      	ldr	r3, [pc, #272]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001268:	6a1a      	ldr	r2, [r3, #32]
 800126a:	4b43      	ldr	r3, [pc, #268]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800126c:	4945      	ldr	r1, [pc, #276]	; (8001384 <HAL_RCCEx_PeriphCLKConfig+0x1f0>)
 800126e:	400a      	ands	r2, r1
 8001270:	621a      	str	r2, [r3, #32]
 8001272:	4b41      	ldr	r3, [pc, #260]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001274:	68fa      	ldr	r2, [r7, #12]
 8001276:	621a      	str	r2, [r3, #32]
 8001278:	68fb      	ldr	r3, [r7, #12]
 800127a:	2201      	movs	r2, #1
 800127c:	4013      	ands	r3, r2
 800127e:	d013      	beq.n	80012a8 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8001280:	f7ff f80a 	bl	8000298 <HAL_GetTick>
 8001284:	0003      	movs	r3, r0
 8001286:	613b      	str	r3, [r7, #16]
 8001288:	e009      	b.n	800129e <HAL_RCCEx_PeriphCLKConfig+0x10a>
 800128a:	f7ff f805 	bl	8000298 <HAL_GetTick>
 800128e:	0002      	movs	r2, r0
 8001290:	693b      	ldr	r3, [r7, #16]
 8001292:	1ad3      	subs	r3, r2, r3
 8001294:	4a3c      	ldr	r2, [pc, #240]	; (8001388 <HAL_RCCEx_PeriphCLKConfig+0x1f4>)
 8001296:	4293      	cmp	r3, r2
 8001298:	d901      	bls.n	800129e <HAL_RCCEx_PeriphCLKConfig+0x10a>
 800129a:	2303      	movs	r3, #3
 800129c:	e067      	b.n	800136e <HAL_RCCEx_PeriphCLKConfig+0x1da>
 800129e:	4b36      	ldr	r3, [pc, #216]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012a0:	6a1b      	ldr	r3, [r3, #32]
 80012a2:	2202      	movs	r2, #2
 80012a4:	4013      	ands	r3, r2
 80012a6:	d0f0      	beq.n	800128a <HAL_RCCEx_PeriphCLKConfig+0xf6>
 80012a8:	4b33      	ldr	r3, [pc, #204]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012aa:	6a1b      	ldr	r3, [r3, #32]
 80012ac:	4a34      	ldr	r2, [pc, #208]	; (8001380 <HAL_RCCEx_PeriphCLKConfig+0x1ec>)
 80012ae:	4013      	ands	r3, r2
 80012b0:	0019      	movs	r1, r3
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	685a      	ldr	r2, [r3, #4]
 80012b6:	4b30      	ldr	r3, [pc, #192]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012b8:	430a      	orrs	r2, r1
 80012ba:	621a      	str	r2, [r3, #32]
 80012bc:	2317      	movs	r3, #23
 80012be:	18fb      	adds	r3, r7, r3
 80012c0:	781b      	ldrb	r3, [r3, #0]
 80012c2:	2b01      	cmp	r3, #1
 80012c4:	d105      	bne.n	80012d2 <HAL_RCCEx_PeriphCLKConfig+0x13e>
 80012c6:	4b2c      	ldr	r3, [pc, #176]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012c8:	69da      	ldr	r2, [r3, #28]
 80012ca:	4b2b      	ldr	r3, [pc, #172]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012cc:	492f      	ldr	r1, [pc, #188]	; (800138c <HAL_RCCEx_PeriphCLKConfig+0x1f8>)
 80012ce:	400a      	ands	r2, r1
 80012d0:	61da      	str	r2, [r3, #28]
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	2201      	movs	r2, #1
 80012d8:	4013      	ands	r3, r2
 80012da:	d009      	beq.n	80012f0 <HAL_RCCEx_PeriphCLKConfig+0x15c>
 80012dc:	4b26      	ldr	r3, [pc, #152]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012e0:	2203      	movs	r2, #3
 80012e2:	4393      	bics	r3, r2
 80012e4:	0019      	movs	r1, r3
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	689a      	ldr	r2, [r3, #8]
 80012ea:	4b23      	ldr	r3, [pc, #140]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012ec:	430a      	orrs	r2, r1
 80012ee:	631a      	str	r2, [r3, #48]	; 0x30
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	2202      	movs	r2, #2
 80012f6:	4013      	ands	r3, r2
 80012f8:	d009      	beq.n	800130e <HAL_RCCEx_PeriphCLKConfig+0x17a>
 80012fa:	4b1f      	ldr	r3, [pc, #124]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80012fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012fe:	4a24      	ldr	r2, [pc, #144]	; (8001390 <HAL_RCCEx_PeriphCLKConfig+0x1fc>)
 8001300:	4013      	ands	r3, r2
 8001302:	0019      	movs	r1, r3
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	68da      	ldr	r2, [r3, #12]
 8001308:	4b1b      	ldr	r3, [pc, #108]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800130a:	430a      	orrs	r2, r1
 800130c:	631a      	str	r2, [r3, #48]	; 0x30
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	2220      	movs	r2, #32
 8001314:	4013      	ands	r3, r2
 8001316:	d009      	beq.n	800132c <HAL_RCCEx_PeriphCLKConfig+0x198>
 8001318:	4b17      	ldr	r3, [pc, #92]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800131a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800131c:	2210      	movs	r2, #16
 800131e:	4393      	bics	r3, r2
 8001320:	0019      	movs	r1, r3
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	691a      	ldr	r2, [r3, #16]
 8001326:	4b14      	ldr	r3, [pc, #80]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001328:	430a      	orrs	r2, r1
 800132a:	631a      	str	r2, [r3, #48]	; 0x30
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	681a      	ldr	r2, [r3, #0]
 8001330:	2380      	movs	r3, #128	; 0x80
 8001332:	029b      	lsls	r3, r3, #10
 8001334:	4013      	ands	r3, r2
 8001336:	d009      	beq.n	800134c <HAL_RCCEx_PeriphCLKConfig+0x1b8>
 8001338:	4b0f      	ldr	r3, [pc, #60]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800133a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800133c:	2280      	movs	r2, #128	; 0x80
 800133e:	4393      	bics	r3, r2
 8001340:	0019      	movs	r1, r3
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	699a      	ldr	r2, [r3, #24]
 8001346:	4b0c      	ldr	r3, [pc, #48]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001348:	430a      	orrs	r2, r1
 800134a:	631a      	str	r2, [r3, #48]	; 0x30
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	681a      	ldr	r2, [r3, #0]
 8001350:	2380      	movs	r3, #128	; 0x80
 8001352:	00db      	lsls	r3, r3, #3
 8001354:	4013      	ands	r3, r2
 8001356:	d009      	beq.n	800136c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
 8001358:	4b07      	ldr	r3, [pc, #28]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 800135a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800135c:	2240      	movs	r2, #64	; 0x40
 800135e:	4393      	bics	r3, r2
 8001360:	0019      	movs	r1, r3
 8001362:	687b      	ldr	r3, [r7, #4]
 8001364:	695a      	ldr	r2, [r3, #20]
 8001366:	4b04      	ldr	r3, [pc, #16]	; (8001378 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 8001368:	430a      	orrs	r2, r1
 800136a:	631a      	str	r2, [r3, #48]	; 0x30
 800136c:	2300      	movs	r3, #0
 800136e:	0018      	movs	r0, r3
 8001370:	46bd      	mov	sp, r7
 8001372:	b006      	add	sp, #24
 8001374:	bd80      	pop	{r7, pc}
 8001376:	46c0      	nop			; (mov r8, r8)
 8001378:	40021000 	.word	0x40021000
 800137c:	40007000 	.word	0x40007000
 8001380:	fffffcff 	.word	0xfffffcff
 8001384:	fffeffff 	.word	0xfffeffff
 8001388:	00001388 	.word	0x00001388
 800138c:	efffffff 	.word	0xefffffff
 8001390:	fffcffff 	.word	0xfffcffff

08001394 <HAL_SPI_Init>:
 8001394:	b580      	push	{r7, lr}
 8001396:	b084      	sub	sp, #16
 8001398:	af00      	add	r7, sp, #0
 800139a:	6078      	str	r0, [r7, #4]
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d101      	bne.n	80013a6 <HAL_SPI_Init+0x12>
 80013a2:	2301      	movs	r3, #1
 80013a4:	e08a      	b.n	80014bc <HAL_SPI_Init+0x128>
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	2200      	movs	r2, #0
 80013aa:	629a      	str	r2, [r3, #40]	; 0x28
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	225d      	movs	r2, #93	; 0x5d
 80013b0:	5c9b      	ldrb	r3, [r3, r2]
 80013b2:	b2db      	uxtb	r3, r3
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	d107      	bne.n	80013c8 <HAL_SPI_Init+0x34>
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	225c      	movs	r2, #92	; 0x5c
 80013bc:	2100      	movs	r1, #0
 80013be:	5499      	strb	r1, [r3, r2]
 80013c0:	687b      	ldr	r3, [r7, #4]
 80013c2:	0018      	movs	r0, r3
 80013c4:	f001 f974 	bl	80026b0 <HAL_SPI_MspInit>
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	225d      	movs	r2, #93	; 0x5d
 80013cc:	2102      	movs	r1, #2
 80013ce:	5499      	strb	r1, [r3, r2]
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	681a      	ldr	r2, [r3, #0]
 80013d6:	687b      	ldr	r3, [r7, #4]
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	2140      	movs	r1, #64	; 0x40
 80013dc:	438a      	bics	r2, r1
 80013de:	601a      	str	r2, [r3, #0]
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	68da      	ldr	r2, [r3, #12]
 80013e4:	23e0      	movs	r3, #224	; 0xe0
 80013e6:	00db      	lsls	r3, r3, #3
 80013e8:	429a      	cmp	r2, r3
 80013ea:	d902      	bls.n	80013f2 <HAL_SPI_Init+0x5e>
 80013ec:	2300      	movs	r3, #0
 80013ee:	60fb      	str	r3, [r7, #12]
 80013f0:	e002      	b.n	80013f8 <HAL_SPI_Init+0x64>
 80013f2:	2380      	movs	r3, #128	; 0x80
 80013f4:	015b      	lsls	r3, r3, #5
 80013f6:	60fb      	str	r3, [r7, #12]
 80013f8:	687b      	ldr	r3, [r7, #4]
 80013fa:	68da      	ldr	r2, [r3, #12]
 80013fc:	23f0      	movs	r3, #240	; 0xf0
 80013fe:	011b      	lsls	r3, r3, #4
 8001400:	429a      	cmp	r2, r3
 8001402:	d008      	beq.n	8001416 <HAL_SPI_Init+0x82>
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	68da      	ldr	r2, [r3, #12]
 8001408:	23e0      	movs	r3, #224	; 0xe0
 800140a:	00db      	lsls	r3, r3, #3
 800140c:	429a      	cmp	r2, r3
 800140e:	d002      	beq.n	8001416 <HAL_SPI_Init+0x82>
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	2200      	movs	r2, #0
 8001414:	629a      	str	r2, [r3, #40]	; 0x28
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800141a:	2b00      	cmp	r3, #0
 800141c:	d10c      	bne.n	8001438 <HAL_SPI_Init+0xa4>
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	68da      	ldr	r2, [r3, #12]
 8001422:	23e0      	movs	r3, #224	; 0xe0
 8001424:	00db      	lsls	r3, r3, #3
 8001426:	429a      	cmp	r2, r3
 8001428:	d903      	bls.n	8001432 <HAL_SPI_Init+0x9e>
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	2202      	movs	r2, #2
 800142e:	631a      	str	r2, [r3, #48]	; 0x30
 8001430:	e002      	b.n	8001438 <HAL_SPI_Init+0xa4>
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	2201      	movs	r2, #1
 8001436:	631a      	str	r2, [r3, #48]	; 0x30
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	685a      	ldr	r2, [r3, #4]
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	689b      	ldr	r3, [r3, #8]
 8001440:	431a      	orrs	r2, r3
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	691b      	ldr	r3, [r3, #16]
 8001446:	431a      	orrs	r2, r3
 8001448:	687b      	ldr	r3, [r7, #4]
 800144a:	695b      	ldr	r3, [r3, #20]
 800144c:	431a      	orrs	r2, r3
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	6999      	ldr	r1, [r3, #24]
 8001452:	2380      	movs	r3, #128	; 0x80
 8001454:	009b      	lsls	r3, r3, #2
 8001456:	400b      	ands	r3, r1
 8001458:	431a      	orrs	r2, r3
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	69db      	ldr	r3, [r3, #28]
 800145e:	431a      	orrs	r2, r3
 8001460:	687b      	ldr	r3, [r7, #4]
 8001462:	6a1b      	ldr	r3, [r3, #32]
 8001464:	431a      	orrs	r2, r3
 8001466:	0011      	movs	r1, r2
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	430a      	orrs	r2, r1
 8001472:	601a      	str	r2, [r3, #0]
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	699b      	ldr	r3, [r3, #24]
 8001478:	0c1b      	lsrs	r3, r3, #16
 800147a:	2204      	movs	r2, #4
 800147c:	401a      	ands	r2, r3
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001482:	431a      	orrs	r2, r3
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001488:	431a      	orrs	r2, r3
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	68db      	ldr	r3, [r3, #12]
 800148e:	431a      	orrs	r2, r3
 8001490:	0011      	movs	r1, r2
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	68fa      	ldr	r2, [r7, #12]
 8001498:	430a      	orrs	r2, r1
 800149a:	605a      	str	r2, [r3, #4]
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	69da      	ldr	r2, [r3, #28]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	4907      	ldr	r1, [pc, #28]	; (80014c4 <HAL_SPI_Init+0x130>)
 80014a8:	400a      	ands	r2, r1
 80014aa:	61da      	str	r2, [r3, #28]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	2200      	movs	r2, #0
 80014b0:	661a      	str	r2, [r3, #96]	; 0x60
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	225d      	movs	r2, #93	; 0x5d
 80014b6:	2101      	movs	r1, #1
 80014b8:	5499      	strb	r1, [r3, r2]
 80014ba:	2300      	movs	r3, #0
 80014bc:	0018      	movs	r0, r3
 80014be:	46bd      	mov	sp, r7
 80014c0:	b004      	add	sp, #16
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	fffff7ff 	.word	0xfffff7ff

080014c8 <HAL_SPI_Transmit>:
 80014c8:	b580      	push	{r7, lr}
 80014ca:	b088      	sub	sp, #32
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	60f8      	str	r0, [r7, #12]
 80014d0:	60b9      	str	r1, [r7, #8]
 80014d2:	603b      	str	r3, [r7, #0]
 80014d4:	1dbb      	adds	r3, r7, #6
 80014d6:	801a      	strh	r2, [r3, #0]
 80014d8:	2300      	movs	r3, #0
 80014da:	61bb      	str	r3, [r7, #24]
 80014dc:	231f      	movs	r3, #31
 80014de:	18fb      	adds	r3, r7, r3
 80014e0:	2200      	movs	r2, #0
 80014e2:	701a      	strb	r2, [r3, #0]
 80014e4:	68fb      	ldr	r3, [r7, #12]
 80014e6:	225c      	movs	r2, #92	; 0x5c
 80014e8:	5c9b      	ldrb	r3, [r3, r2]
 80014ea:	2b01      	cmp	r3, #1
 80014ec:	d101      	bne.n	80014f2 <HAL_SPI_Transmit+0x2a>
 80014ee:	2302      	movs	r3, #2
 80014f0:	e14f      	b.n	8001792 <HAL_SPI_Transmit+0x2ca>
 80014f2:	68fb      	ldr	r3, [r7, #12]
 80014f4:	225c      	movs	r2, #92	; 0x5c
 80014f6:	2101      	movs	r1, #1
 80014f8:	5499      	strb	r1, [r3, r2]
 80014fa:	f7fe fecd 	bl	8000298 <HAL_GetTick>
 80014fe:	0003      	movs	r3, r0
 8001500:	61bb      	str	r3, [r7, #24]
 8001502:	68fb      	ldr	r3, [r7, #12]
 8001504:	225d      	movs	r2, #93	; 0x5d
 8001506:	5c9b      	ldrb	r3, [r3, r2]
 8001508:	b2db      	uxtb	r3, r3
 800150a:	2b01      	cmp	r3, #1
 800150c:	d004      	beq.n	8001518 <HAL_SPI_Transmit+0x50>
 800150e:	231f      	movs	r3, #31
 8001510:	18fb      	adds	r3, r7, r3
 8001512:	2202      	movs	r2, #2
 8001514:	701a      	strb	r2, [r3, #0]
 8001516:	e131      	b.n	800177c <HAL_SPI_Transmit+0x2b4>
 8001518:	68bb      	ldr	r3, [r7, #8]
 800151a:	2b00      	cmp	r3, #0
 800151c:	d003      	beq.n	8001526 <HAL_SPI_Transmit+0x5e>
 800151e:	1dbb      	adds	r3, r7, #6
 8001520:	881b      	ldrh	r3, [r3, #0]
 8001522:	2b00      	cmp	r3, #0
 8001524:	d104      	bne.n	8001530 <HAL_SPI_Transmit+0x68>
 8001526:	231f      	movs	r3, #31
 8001528:	18fb      	adds	r3, r7, r3
 800152a:	2201      	movs	r2, #1
 800152c:	701a      	strb	r2, [r3, #0]
 800152e:	e125      	b.n	800177c <HAL_SPI_Transmit+0x2b4>
 8001530:	68fb      	ldr	r3, [r7, #12]
 8001532:	225d      	movs	r2, #93	; 0x5d
 8001534:	2103      	movs	r1, #3
 8001536:	5499      	strb	r1, [r3, r2]
 8001538:	68fb      	ldr	r3, [r7, #12]
 800153a:	2200      	movs	r2, #0
 800153c:	661a      	str	r2, [r3, #96]	; 0x60
 800153e:	68fb      	ldr	r3, [r7, #12]
 8001540:	68ba      	ldr	r2, [r7, #8]
 8001542:	639a      	str	r2, [r3, #56]	; 0x38
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	1dba      	adds	r2, r7, #6
 8001548:	8812      	ldrh	r2, [r2, #0]
 800154a:	879a      	strh	r2, [r3, #60]	; 0x3c
 800154c:	68fb      	ldr	r3, [r7, #12]
 800154e:	1dba      	adds	r2, r7, #6
 8001550:	8812      	ldrh	r2, [r2, #0]
 8001552:	87da      	strh	r2, [r3, #62]	; 0x3e
 8001554:	68fb      	ldr	r3, [r7, #12]
 8001556:	2200      	movs	r2, #0
 8001558:	641a      	str	r2, [r3, #64]	; 0x40
 800155a:	68fb      	ldr	r3, [r7, #12]
 800155c:	2244      	movs	r2, #68	; 0x44
 800155e:	2100      	movs	r1, #0
 8001560:	5299      	strh	r1, [r3, r2]
 8001562:	68fb      	ldr	r3, [r7, #12]
 8001564:	2246      	movs	r2, #70	; 0x46
 8001566:	2100      	movs	r1, #0
 8001568:	5299      	strh	r1, [r3, r2]
 800156a:	68fb      	ldr	r3, [r7, #12]
 800156c:	2200      	movs	r2, #0
 800156e:	651a      	str	r2, [r3, #80]	; 0x50
 8001570:	68fb      	ldr	r3, [r7, #12]
 8001572:	2200      	movs	r2, #0
 8001574:	64da      	str	r2, [r3, #76]	; 0x4c
 8001576:	68fb      	ldr	r3, [r7, #12]
 8001578:	689a      	ldr	r2, [r3, #8]
 800157a:	2380      	movs	r3, #128	; 0x80
 800157c:	021b      	lsls	r3, r3, #8
 800157e:	429a      	cmp	r2, r3
 8001580:	d108      	bne.n	8001594 <HAL_SPI_Transmit+0xcc>
 8001582:	68fb      	ldr	r3, [r7, #12]
 8001584:	681b      	ldr	r3, [r3, #0]
 8001586:	681a      	ldr	r2, [r3, #0]
 8001588:	68fb      	ldr	r3, [r7, #12]
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	2180      	movs	r1, #128	; 0x80
 800158e:	01c9      	lsls	r1, r1, #7
 8001590:	430a      	orrs	r2, r1
 8001592:	601a      	str	r2, [r3, #0]
 8001594:	68fb      	ldr	r3, [r7, #12]
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	681b      	ldr	r3, [r3, #0]
 800159a:	2240      	movs	r2, #64	; 0x40
 800159c:	4013      	ands	r3, r2
 800159e:	2b40      	cmp	r3, #64	; 0x40
 80015a0:	d007      	beq.n	80015b2 <HAL_SPI_Transmit+0xea>
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	681a      	ldr	r2, [r3, #0]
 80015a8:	68fb      	ldr	r3, [r7, #12]
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	2140      	movs	r1, #64	; 0x40
 80015ae:	430a      	orrs	r2, r1
 80015b0:	601a      	str	r2, [r3, #0]
 80015b2:	68fb      	ldr	r3, [r7, #12]
 80015b4:	68da      	ldr	r2, [r3, #12]
 80015b6:	23e0      	movs	r3, #224	; 0xe0
 80015b8:	00db      	lsls	r3, r3, #3
 80015ba:	429a      	cmp	r2, r3
 80015bc:	d948      	bls.n	8001650 <HAL_SPI_Transmit+0x188>
 80015be:	68fb      	ldr	r3, [r7, #12]
 80015c0:	685b      	ldr	r3, [r3, #4]
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	d004      	beq.n	80015d0 <HAL_SPI_Transmit+0x108>
 80015c6:	68fb      	ldr	r3, [r7, #12]
 80015c8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80015ca:	b29b      	uxth	r3, r3
 80015cc:	2b01      	cmp	r3, #1
 80015ce:	d139      	bne.n	8001644 <HAL_SPI_Transmit+0x17c>
 80015d0:	68bb      	ldr	r3, [r7, #8]
 80015d2:	881a      	ldrh	r2, [r3, #0]
 80015d4:	68fb      	ldr	r3, [r7, #12]
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	60da      	str	r2, [r3, #12]
 80015da:	68bb      	ldr	r3, [r7, #8]
 80015dc:	3302      	adds	r3, #2
 80015de:	60bb      	str	r3, [r7, #8]
 80015e0:	68fb      	ldr	r3, [r7, #12]
 80015e2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80015e4:	b29b      	uxth	r3, r3
 80015e6:	3b01      	subs	r3, #1
 80015e8:	b29a      	uxth	r2, r3
 80015ea:	68fb      	ldr	r3, [r7, #12]
 80015ec:	87da      	strh	r2, [r3, #62]	; 0x3e
 80015ee:	e029      	b.n	8001644 <HAL_SPI_Transmit+0x17c>
 80015f0:	68fb      	ldr	r3, [r7, #12]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	689b      	ldr	r3, [r3, #8]
 80015f6:	2202      	movs	r2, #2
 80015f8:	4013      	ands	r3, r2
 80015fa:	2b02      	cmp	r3, #2
 80015fc:	d10f      	bne.n	800161e <HAL_SPI_Transmit+0x156>
 80015fe:	68bb      	ldr	r3, [r7, #8]
 8001600:	881a      	ldrh	r2, [r3, #0]
 8001602:	68fb      	ldr	r3, [r7, #12]
 8001604:	681b      	ldr	r3, [r3, #0]
 8001606:	60da      	str	r2, [r3, #12]
 8001608:	68bb      	ldr	r3, [r7, #8]
 800160a:	3302      	adds	r3, #2
 800160c:	60bb      	str	r3, [r7, #8]
 800160e:	68fb      	ldr	r3, [r7, #12]
 8001610:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8001612:	b29b      	uxth	r3, r3
 8001614:	3b01      	subs	r3, #1
 8001616:	b29a      	uxth	r2, r3
 8001618:	68fb      	ldr	r3, [r7, #12]
 800161a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800161c:	e012      	b.n	8001644 <HAL_SPI_Transmit+0x17c>
 800161e:	683b      	ldr	r3, [r7, #0]
 8001620:	2b00      	cmp	r3, #0
 8001622:	d00a      	beq.n	800163a <HAL_SPI_Transmit+0x172>
 8001624:	683b      	ldr	r3, [r7, #0]
 8001626:	3301      	adds	r3, #1
 8001628:	d00c      	beq.n	8001644 <HAL_SPI_Transmit+0x17c>
 800162a:	f7fe fe35 	bl	8000298 <HAL_GetTick>
 800162e:	0002      	movs	r2, r0
 8001630:	69bb      	ldr	r3, [r7, #24]
 8001632:	1ad3      	subs	r3, r2, r3
 8001634:	683a      	ldr	r2, [r7, #0]
 8001636:	429a      	cmp	r2, r3
 8001638:	d804      	bhi.n	8001644 <HAL_SPI_Transmit+0x17c>
 800163a:	231f      	movs	r3, #31
 800163c:	18fb      	adds	r3, r7, r3
 800163e:	2203      	movs	r2, #3
 8001640:	701a      	strb	r2, [r3, #0]
 8001642:	e09b      	b.n	800177c <HAL_SPI_Transmit+0x2b4>
 8001644:	68fb      	ldr	r3, [r7, #12]
 8001646:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8001648:	b29b      	uxth	r3, r3
 800164a:	2b00      	cmp	r3, #0
 800164c:	d1d0      	bne.n	80015f0 <HAL_SPI_Transmit+0x128>
 800164e:	e071      	b.n	8001734 <HAL_SPI_Transmit+0x26c>
 8001650:	68fb      	ldr	r3, [r7, #12]
 8001652:	685b      	ldr	r3, [r3, #4]
 8001654:	2b00      	cmp	r3, #0
 8001656:	d004      	beq.n	8001662 <HAL_SPI_Transmit+0x19a>
 8001658:	68fb      	ldr	r3, [r7, #12]
 800165a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800165c:	b29b      	uxth	r3, r3
 800165e:	2b01      	cmp	r3, #1
 8001660:	d163      	bne.n	800172a <HAL_SPI_Transmit+0x262>
 8001662:	68fb      	ldr	r3, [r7, #12]
 8001664:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8001666:	b29b      	uxth	r3, r3
 8001668:	2b01      	cmp	r3, #1
 800166a:	d90f      	bls.n	800168c <HAL_SPI_Transmit+0x1c4>
 800166c:	68bb      	ldr	r3, [r7, #8]
 800166e:	881a      	ldrh	r2, [r3, #0]
 8001670:	68fb      	ldr	r3, [r7, #12]
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	60da      	str	r2, [r3, #12]
 8001676:	68bb      	ldr	r3, [r7, #8]
 8001678:	3302      	adds	r3, #2
 800167a:	60bb      	str	r3, [r7, #8]
 800167c:	68fb      	ldr	r3, [r7, #12]
 800167e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8001680:	b29b      	uxth	r3, r3
 8001682:	3b02      	subs	r3, #2
 8001684:	b29a      	uxth	r2, r3
 8001686:	68fb      	ldr	r3, [r7, #12]
 8001688:	87da      	strh	r2, [r3, #62]	; 0x3e
 800168a:	e04e      	b.n	800172a <HAL_SPI_Transmit+0x262>
 800168c:	68bb      	ldr	r3, [r7, #8]
 800168e:	1c5a      	adds	r2, r3, #1
 8001690:	60ba      	str	r2, [r7, #8]
 8001692:	68fa      	ldr	r2, [r7, #12]
 8001694:	6812      	ldr	r2, [r2, #0]
 8001696:	320c      	adds	r2, #12
 8001698:	781b      	ldrb	r3, [r3, #0]
 800169a:	7013      	strb	r3, [r2, #0]
 800169c:	68fb      	ldr	r3, [r7, #12]
 800169e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80016a0:	b29b      	uxth	r3, r3
 80016a2:	3b01      	subs	r3, #1
 80016a4:	b29a      	uxth	r2, r3
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80016aa:	e03e      	b.n	800172a <HAL_SPI_Transmit+0x262>
 80016ac:	68fb      	ldr	r3, [r7, #12]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	689b      	ldr	r3, [r3, #8]
 80016b2:	2202      	movs	r2, #2
 80016b4:	4013      	ands	r3, r2
 80016b6:	2b02      	cmp	r3, #2
 80016b8:	d124      	bne.n	8001704 <HAL_SPI_Transmit+0x23c>
 80016ba:	68fb      	ldr	r3, [r7, #12]
 80016bc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80016be:	b29b      	uxth	r3, r3
 80016c0:	2b01      	cmp	r3, #1
 80016c2:	d90f      	bls.n	80016e4 <HAL_SPI_Transmit+0x21c>
 80016c4:	68bb      	ldr	r3, [r7, #8]
 80016c6:	881a      	ldrh	r2, [r3, #0]
 80016c8:	68fb      	ldr	r3, [r7, #12]
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	60da      	str	r2, [r3, #12]
 80016ce:	68bb      	ldr	r3, [r7, #8]
 80016d0:	3302      	adds	r3, #2
 80016d2:	60bb      	str	r3, [r7, #8]
 80016d4:	68fb      	ldr	r3, [r7, #12]
 80016d6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80016d8:	b29b      	uxth	r3, r3
 80016da:	3b02      	subs	r3, #2
 80016dc:	b29a      	uxth	r2, r3
 80016de:	68fb      	ldr	r3, [r7, #12]
 80016e0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80016e2:	e022      	b.n	800172a <HAL_SPI_Transmit+0x262>
 80016e4:	68bb      	ldr	r3, [r7, #8]
 80016e6:	1c5a      	adds	r2, r3, #1
 80016e8:	60ba      	str	r2, [r7, #8]
 80016ea:	68fa      	ldr	r2, [r7, #12]
 80016ec:	6812      	ldr	r2, [r2, #0]
 80016ee:	320c      	adds	r2, #12
 80016f0:	781b      	ldrb	r3, [r3, #0]
 80016f2:	7013      	strb	r3, [r2, #0]
 80016f4:	68fb      	ldr	r3, [r7, #12]
 80016f6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80016f8:	b29b      	uxth	r3, r3
 80016fa:	3b01      	subs	r3, #1
 80016fc:	b29a      	uxth	r2, r3
 80016fe:	68fb      	ldr	r3, [r7, #12]
 8001700:	87da      	strh	r2, [r3, #62]	; 0x3e
 8001702:	e012      	b.n	800172a <HAL_SPI_Transmit+0x262>
 8001704:	683b      	ldr	r3, [r7, #0]
 8001706:	2b00      	cmp	r3, #0
 8001708:	d00a      	beq.n	8001720 <HAL_SPI_Transmit+0x258>
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	3301      	adds	r3, #1
 800170e:	d00c      	beq.n	800172a <HAL_SPI_Transmit+0x262>
 8001710:	f7fe fdc2 	bl	8000298 <HAL_GetTick>
 8001714:	0002      	movs	r2, r0
 8001716:	69bb      	ldr	r3, [r7, #24]
 8001718:	1ad3      	subs	r3, r2, r3
 800171a:	683a      	ldr	r2, [r7, #0]
 800171c:	429a      	cmp	r2, r3
 800171e:	d804      	bhi.n	800172a <HAL_SPI_Transmit+0x262>
 8001720:	231f      	movs	r3, #31
 8001722:	18fb      	adds	r3, r7, r3
 8001724:	2203      	movs	r2, #3
 8001726:	701a      	strb	r2, [r3, #0]
 8001728:	e028      	b.n	800177c <HAL_SPI_Transmit+0x2b4>
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800172e:	b29b      	uxth	r3, r3
 8001730:	2b00      	cmp	r3, #0
 8001732:	d1bb      	bne.n	80016ac <HAL_SPI_Transmit+0x1e4>
 8001734:	69ba      	ldr	r2, [r7, #24]
 8001736:	6839      	ldr	r1, [r7, #0]
 8001738:	68fb      	ldr	r3, [r7, #12]
 800173a:	0018      	movs	r0, r3
 800173c:	f000 f916 	bl	800196c <SPI_EndRxTxTransaction>
 8001740:	1e03      	subs	r3, r0, #0
 8001742:	d002      	beq.n	800174a <HAL_SPI_Transmit+0x282>
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	2220      	movs	r2, #32
 8001748:	661a      	str	r2, [r3, #96]	; 0x60
 800174a:	68fb      	ldr	r3, [r7, #12]
 800174c:	689b      	ldr	r3, [r3, #8]
 800174e:	2b00      	cmp	r3, #0
 8001750:	d10a      	bne.n	8001768 <HAL_SPI_Transmit+0x2a0>
 8001752:	2300      	movs	r3, #0
 8001754:	617b      	str	r3, [r7, #20]
 8001756:	68fb      	ldr	r3, [r7, #12]
 8001758:	681b      	ldr	r3, [r3, #0]
 800175a:	68db      	ldr	r3, [r3, #12]
 800175c:	617b      	str	r3, [r7, #20]
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	681b      	ldr	r3, [r3, #0]
 8001762:	689b      	ldr	r3, [r3, #8]
 8001764:	617b      	str	r3, [r7, #20]
 8001766:	697b      	ldr	r3, [r7, #20]
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800176c:	2b00      	cmp	r3, #0
 800176e:	d004      	beq.n	800177a <HAL_SPI_Transmit+0x2b2>
 8001770:	231f      	movs	r3, #31
 8001772:	18fb      	adds	r3, r7, r3
 8001774:	2201      	movs	r2, #1
 8001776:	701a      	strb	r2, [r3, #0]
 8001778:	e000      	b.n	800177c <HAL_SPI_Transmit+0x2b4>
 800177a:	46c0      	nop			; (mov r8, r8)
 800177c:	68fb      	ldr	r3, [r7, #12]
 800177e:	225d      	movs	r2, #93	; 0x5d
 8001780:	2101      	movs	r1, #1
 8001782:	5499      	strb	r1, [r3, r2]
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	225c      	movs	r2, #92	; 0x5c
 8001788:	2100      	movs	r1, #0
 800178a:	5499      	strb	r1, [r3, r2]
 800178c:	231f      	movs	r3, #31
 800178e:	18fb      	adds	r3, r7, r3
 8001790:	781b      	ldrb	r3, [r3, #0]
 8001792:	0018      	movs	r0, r3
 8001794:	46bd      	mov	sp, r7
 8001796:	b008      	add	sp, #32
 8001798:	bd80      	pop	{r7, pc}
	...

0800179c <SPI_WaitFlagStateUntilTimeout>:
 800179c:	b580      	push	{r7, lr}
 800179e:	b084      	sub	sp, #16
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	60f8      	str	r0, [r7, #12]
 80017a4:	60b9      	str	r1, [r7, #8]
 80017a6:	607a      	str	r2, [r7, #4]
 80017a8:	603b      	str	r3, [r7, #0]
 80017aa:	e050      	b.n	800184e <SPI_WaitFlagStateUntilTimeout+0xb2>
 80017ac:	683b      	ldr	r3, [r7, #0]
 80017ae:	3301      	adds	r3, #1
 80017b0:	d04d      	beq.n	800184e <SPI_WaitFlagStateUntilTimeout+0xb2>
 80017b2:	683b      	ldr	r3, [r7, #0]
 80017b4:	2b00      	cmp	r3, #0
 80017b6:	d007      	beq.n	80017c8 <SPI_WaitFlagStateUntilTimeout+0x2c>
 80017b8:	f7fe fd6e 	bl	8000298 <HAL_GetTick>
 80017bc:	0002      	movs	r2, r0
 80017be:	69bb      	ldr	r3, [r7, #24]
 80017c0:	1ad3      	subs	r3, r2, r3
 80017c2:	683a      	ldr	r2, [r7, #0]
 80017c4:	429a      	cmp	r2, r3
 80017c6:	d842      	bhi.n	800184e <SPI_WaitFlagStateUntilTimeout+0xb2>
 80017c8:	68fb      	ldr	r3, [r7, #12]
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	685a      	ldr	r2, [r3, #4]
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	21e0      	movs	r1, #224	; 0xe0
 80017d4:	438a      	bics	r2, r1
 80017d6:	605a      	str	r2, [r3, #4]
 80017d8:	68fb      	ldr	r3, [r7, #12]
 80017da:	685a      	ldr	r2, [r3, #4]
 80017dc:	2382      	movs	r3, #130	; 0x82
 80017de:	005b      	lsls	r3, r3, #1
 80017e0:	429a      	cmp	r2, r3
 80017e2:	d113      	bne.n	800180c <SPI_WaitFlagStateUntilTimeout+0x70>
 80017e4:	68fb      	ldr	r3, [r7, #12]
 80017e6:	689a      	ldr	r2, [r3, #8]
 80017e8:	2380      	movs	r3, #128	; 0x80
 80017ea:	021b      	lsls	r3, r3, #8
 80017ec:	429a      	cmp	r2, r3
 80017ee:	d005      	beq.n	80017fc <SPI_WaitFlagStateUntilTimeout+0x60>
 80017f0:	68fb      	ldr	r3, [r7, #12]
 80017f2:	689a      	ldr	r2, [r3, #8]
 80017f4:	2380      	movs	r3, #128	; 0x80
 80017f6:	00db      	lsls	r3, r3, #3
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d107      	bne.n	800180c <SPI_WaitFlagStateUntilTimeout+0x70>
 80017fc:	68fb      	ldr	r3, [r7, #12]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	681a      	ldr	r2, [r3, #0]
 8001802:	68fb      	ldr	r3, [r7, #12]
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	2140      	movs	r1, #64	; 0x40
 8001808:	438a      	bics	r2, r1
 800180a:	601a      	str	r2, [r3, #0]
 800180c:	68fb      	ldr	r3, [r7, #12]
 800180e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001810:	2380      	movs	r3, #128	; 0x80
 8001812:	019b      	lsls	r3, r3, #6
 8001814:	429a      	cmp	r2, r3
 8001816:	d110      	bne.n	800183a <SPI_WaitFlagStateUntilTimeout+0x9e>
 8001818:	68fb      	ldr	r3, [r7, #12]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	681a      	ldr	r2, [r3, #0]
 800181e:	68fb      	ldr	r3, [r7, #12]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4914      	ldr	r1, [pc, #80]	; (8001874 <SPI_WaitFlagStateUntilTimeout+0xd8>)
 8001824:	400a      	ands	r2, r1
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	68fb      	ldr	r3, [r7, #12]
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	681a      	ldr	r2, [r3, #0]
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	2180      	movs	r1, #128	; 0x80
 8001834:	0189      	lsls	r1, r1, #6
 8001836:	430a      	orrs	r2, r1
 8001838:	601a      	str	r2, [r3, #0]
 800183a:	68fb      	ldr	r3, [r7, #12]
 800183c:	225d      	movs	r2, #93	; 0x5d
 800183e:	2101      	movs	r1, #1
 8001840:	5499      	strb	r1, [r3, r2]
 8001842:	68fb      	ldr	r3, [r7, #12]
 8001844:	225c      	movs	r2, #92	; 0x5c
 8001846:	2100      	movs	r1, #0
 8001848:	5499      	strb	r1, [r3, r2]
 800184a:	2303      	movs	r3, #3
 800184c:	e00e      	b.n	800186c <SPI_WaitFlagStateUntilTimeout+0xd0>
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	689b      	ldr	r3, [r3, #8]
 8001854:	68ba      	ldr	r2, [r7, #8]
 8001856:	4013      	ands	r3, r2
 8001858:	68ba      	ldr	r2, [r7, #8]
 800185a:	429a      	cmp	r2, r3
 800185c:	d101      	bne.n	8001862 <SPI_WaitFlagStateUntilTimeout+0xc6>
 800185e:	2301      	movs	r3, #1
 8001860:	e000      	b.n	8001864 <SPI_WaitFlagStateUntilTimeout+0xc8>
 8001862:	2300      	movs	r3, #0
 8001864:	687a      	ldr	r2, [r7, #4]
 8001866:	4293      	cmp	r3, r2
 8001868:	d1a0      	bne.n	80017ac <SPI_WaitFlagStateUntilTimeout+0x10>
 800186a:	2300      	movs	r3, #0
 800186c:	0018      	movs	r0, r3
 800186e:	46bd      	mov	sp, r7
 8001870:	b004      	add	sp, #16
 8001872:	bd80      	pop	{r7, pc}
 8001874:	ffffdfff 	.word	0xffffdfff

08001878 <SPI_WaitFifoStateUntilTimeout>:
 8001878:	b580      	push	{r7, lr}
 800187a:	b086      	sub	sp, #24
 800187c:	af00      	add	r7, sp, #0
 800187e:	60f8      	str	r0, [r7, #12]
 8001880:	60b9      	str	r1, [r7, #8]
 8001882:	607a      	str	r2, [r7, #4]
 8001884:	603b      	str	r3, [r7, #0]
 8001886:	e062      	b.n	800194e <SPI_WaitFifoStateUntilTimeout+0xd6>
 8001888:	68ba      	ldr	r2, [r7, #8]
 800188a:	23c0      	movs	r3, #192	; 0xc0
 800188c:	00db      	lsls	r3, r3, #3
 800188e:	429a      	cmp	r2, r3
 8001890:	d10c      	bne.n	80018ac <SPI_WaitFifoStateUntilTimeout+0x34>
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	2b00      	cmp	r3, #0
 8001896:	d109      	bne.n	80018ac <SPI_WaitFifoStateUntilTimeout+0x34>
 8001898:	68fb      	ldr	r3, [r7, #12]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	330c      	adds	r3, #12
 800189e:	781b      	ldrb	r3, [r3, #0]
 80018a0:	b2da      	uxtb	r2, r3
 80018a2:	2117      	movs	r1, #23
 80018a4:	187b      	adds	r3, r7, r1
 80018a6:	701a      	strb	r2, [r3, #0]
 80018a8:	187b      	adds	r3, r7, r1
 80018aa:	781b      	ldrb	r3, [r3, #0]
 80018ac:	683b      	ldr	r3, [r7, #0]
 80018ae:	3301      	adds	r3, #1
 80018b0:	d04d      	beq.n	800194e <SPI_WaitFifoStateUntilTimeout+0xd6>
 80018b2:	683b      	ldr	r3, [r7, #0]
 80018b4:	2b00      	cmp	r3, #0
 80018b6:	d007      	beq.n	80018c8 <SPI_WaitFifoStateUntilTimeout+0x50>
 80018b8:	f7fe fcee 	bl	8000298 <HAL_GetTick>
 80018bc:	0002      	movs	r2, r0
 80018be:	6a3b      	ldr	r3, [r7, #32]
 80018c0:	1ad3      	subs	r3, r2, r3
 80018c2:	683a      	ldr	r2, [r7, #0]
 80018c4:	429a      	cmp	r2, r3
 80018c6:	d842      	bhi.n	800194e <SPI_WaitFifoStateUntilTimeout+0xd6>
 80018c8:	68fb      	ldr	r3, [r7, #12]
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	685a      	ldr	r2, [r3, #4]
 80018ce:	68fb      	ldr	r3, [r7, #12]
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	21e0      	movs	r1, #224	; 0xe0
 80018d4:	438a      	bics	r2, r1
 80018d6:	605a      	str	r2, [r3, #4]
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	685a      	ldr	r2, [r3, #4]
 80018dc:	2382      	movs	r3, #130	; 0x82
 80018de:	005b      	lsls	r3, r3, #1
 80018e0:	429a      	cmp	r2, r3
 80018e2:	d113      	bne.n	800190c <SPI_WaitFifoStateUntilTimeout+0x94>
 80018e4:	68fb      	ldr	r3, [r7, #12]
 80018e6:	689a      	ldr	r2, [r3, #8]
 80018e8:	2380      	movs	r3, #128	; 0x80
 80018ea:	021b      	lsls	r3, r3, #8
 80018ec:	429a      	cmp	r2, r3
 80018ee:	d005      	beq.n	80018fc <SPI_WaitFifoStateUntilTimeout+0x84>
 80018f0:	68fb      	ldr	r3, [r7, #12]
 80018f2:	689a      	ldr	r2, [r3, #8]
 80018f4:	2380      	movs	r3, #128	; 0x80
 80018f6:	00db      	lsls	r3, r3, #3
 80018f8:	429a      	cmp	r2, r3
 80018fa:	d107      	bne.n	800190c <SPI_WaitFifoStateUntilTimeout+0x94>
 80018fc:	68fb      	ldr	r3, [r7, #12]
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	68fb      	ldr	r3, [r7, #12]
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	2140      	movs	r1, #64	; 0x40
 8001908:	438a      	bics	r2, r1
 800190a:	601a      	str	r2, [r3, #0]
 800190c:	68fb      	ldr	r3, [r7, #12]
 800190e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001910:	2380      	movs	r3, #128	; 0x80
 8001912:	019b      	lsls	r3, r3, #6
 8001914:	429a      	cmp	r2, r3
 8001916:	d110      	bne.n	800193a <SPI_WaitFifoStateUntilTimeout+0xc2>
 8001918:	68fb      	ldr	r3, [r7, #12]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	681a      	ldr	r2, [r3, #0]
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	681b      	ldr	r3, [r3, #0]
 8001922:	4911      	ldr	r1, [pc, #68]	; (8001968 <SPI_WaitFifoStateUntilTimeout+0xf0>)
 8001924:	400a      	ands	r2, r1
 8001926:	601a      	str	r2, [r3, #0]
 8001928:	68fb      	ldr	r3, [r7, #12]
 800192a:	681b      	ldr	r3, [r3, #0]
 800192c:	681a      	ldr	r2, [r3, #0]
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	2180      	movs	r1, #128	; 0x80
 8001934:	0189      	lsls	r1, r1, #6
 8001936:	430a      	orrs	r2, r1
 8001938:	601a      	str	r2, [r3, #0]
 800193a:	68fb      	ldr	r3, [r7, #12]
 800193c:	225d      	movs	r2, #93	; 0x5d
 800193e:	2101      	movs	r1, #1
 8001940:	5499      	strb	r1, [r3, r2]
 8001942:	68fb      	ldr	r3, [r7, #12]
 8001944:	225c      	movs	r2, #92	; 0x5c
 8001946:	2100      	movs	r1, #0
 8001948:	5499      	strb	r1, [r3, r2]
 800194a:	2303      	movs	r3, #3
 800194c:	e008      	b.n	8001960 <SPI_WaitFifoStateUntilTimeout+0xe8>
 800194e:	68fb      	ldr	r3, [r7, #12]
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	689b      	ldr	r3, [r3, #8]
 8001954:	68ba      	ldr	r2, [r7, #8]
 8001956:	4013      	ands	r3, r2
 8001958:	687a      	ldr	r2, [r7, #4]
 800195a:	429a      	cmp	r2, r3
 800195c:	d194      	bne.n	8001888 <SPI_WaitFifoStateUntilTimeout+0x10>
 800195e:	2300      	movs	r3, #0
 8001960:	0018      	movs	r0, r3
 8001962:	46bd      	mov	sp, r7
 8001964:	b006      	add	sp, #24
 8001966:	bd80      	pop	{r7, pc}
 8001968:	ffffdfff 	.word	0xffffdfff

0800196c <SPI_EndRxTxTransaction>:
 800196c:	b580      	push	{r7, lr}
 800196e:	b086      	sub	sp, #24
 8001970:	af02      	add	r7, sp, #8
 8001972:	60f8      	str	r0, [r7, #12]
 8001974:	60b9      	str	r1, [r7, #8]
 8001976:	607a      	str	r2, [r7, #4]
 8001978:	68ba      	ldr	r2, [r7, #8]
 800197a:	23c0      	movs	r3, #192	; 0xc0
 800197c:	0159      	lsls	r1, r3, #5
 800197e:	68f8      	ldr	r0, [r7, #12]
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	9300      	str	r3, [sp, #0]
 8001984:	0013      	movs	r3, r2
 8001986:	2200      	movs	r2, #0
 8001988:	f7ff ff76 	bl	8001878 <SPI_WaitFifoStateUntilTimeout>
 800198c:	1e03      	subs	r3, r0, #0
 800198e:	d007      	beq.n	80019a0 <SPI_EndRxTxTransaction+0x34>
 8001990:	68fb      	ldr	r3, [r7, #12]
 8001992:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001994:	2220      	movs	r2, #32
 8001996:	431a      	orrs	r2, r3
 8001998:	68fb      	ldr	r3, [r7, #12]
 800199a:	661a      	str	r2, [r3, #96]	; 0x60
 800199c:	2303      	movs	r3, #3
 800199e:	e027      	b.n	80019f0 <SPI_EndRxTxTransaction+0x84>
 80019a0:	68ba      	ldr	r2, [r7, #8]
 80019a2:	68f8      	ldr	r0, [r7, #12]
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	9300      	str	r3, [sp, #0]
 80019a8:	0013      	movs	r3, r2
 80019aa:	2200      	movs	r2, #0
 80019ac:	2180      	movs	r1, #128	; 0x80
 80019ae:	f7ff fef5 	bl	800179c <SPI_WaitFlagStateUntilTimeout>
 80019b2:	1e03      	subs	r3, r0, #0
 80019b4:	d007      	beq.n	80019c6 <SPI_EndRxTxTransaction+0x5a>
 80019b6:	68fb      	ldr	r3, [r7, #12]
 80019b8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80019ba:	2220      	movs	r2, #32
 80019bc:	431a      	orrs	r2, r3
 80019be:	68fb      	ldr	r3, [r7, #12]
 80019c0:	661a      	str	r2, [r3, #96]	; 0x60
 80019c2:	2303      	movs	r3, #3
 80019c4:	e014      	b.n	80019f0 <SPI_EndRxTxTransaction+0x84>
 80019c6:	68ba      	ldr	r2, [r7, #8]
 80019c8:	23c0      	movs	r3, #192	; 0xc0
 80019ca:	00d9      	lsls	r1, r3, #3
 80019cc:	68f8      	ldr	r0, [r7, #12]
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	9300      	str	r3, [sp, #0]
 80019d2:	0013      	movs	r3, r2
 80019d4:	2200      	movs	r2, #0
 80019d6:	f7ff ff4f 	bl	8001878 <SPI_WaitFifoStateUntilTimeout>
 80019da:	1e03      	subs	r3, r0, #0
 80019dc:	d007      	beq.n	80019ee <SPI_EndRxTxTransaction+0x82>
 80019de:	68fb      	ldr	r3, [r7, #12]
 80019e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80019e2:	2220      	movs	r2, #32
 80019e4:	431a      	orrs	r2, r3
 80019e6:	68fb      	ldr	r3, [r7, #12]
 80019e8:	661a      	str	r2, [r3, #96]	; 0x60
 80019ea:	2303      	movs	r3, #3
 80019ec:	e000      	b.n	80019f0 <SPI_EndRxTxTransaction+0x84>
 80019ee:	2300      	movs	r3, #0
 80019f0:	0018      	movs	r0, r3
 80019f2:	46bd      	mov	sp, r7
 80019f4:	b004      	add	sp, #16
 80019f6:	bd80      	pop	{r7, pc}

080019f8 <HAL_UART_Init>:
 80019f8:	b580      	push	{r7, lr}
 80019fa:	b082      	sub	sp, #8
 80019fc:	af00      	add	r7, sp, #0
 80019fe:	6078      	str	r0, [r7, #4]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d101      	bne.n	8001a0a <HAL_UART_Init+0x12>
 8001a06:	2301      	movs	r3, #1
 8001a08:	e047      	b.n	8001a9a <HAL_UART_Init+0xa2>
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	2269      	movs	r2, #105	; 0x69
 8001a0e:	5c9b      	ldrb	r3, [r3, r2]
 8001a10:	b2db      	uxtb	r3, r3
 8001a12:	2b00      	cmp	r3, #0
 8001a14:	d107      	bne.n	8001a26 <HAL_UART_Init+0x2e>
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	2268      	movs	r2, #104	; 0x68
 8001a1a:	2100      	movs	r1, #0
 8001a1c:	5499      	strb	r1, [r3, r2]
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	0018      	movs	r0, r3
 8001a22:	f000 febb 	bl	800279c <HAL_UART_MspInit>
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	2269      	movs	r2, #105	; 0x69
 8001a2a:	2124      	movs	r1, #36	; 0x24
 8001a2c:	5499      	strb	r1, [r3, r2]
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	2101      	movs	r1, #1
 8001a3a:	438a      	bics	r2, r1
 8001a3c:	601a      	str	r2, [r3, #0]
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	0018      	movs	r0, r3
 8001a42:	f000 f831 	bl	8001aa8 <UART_SetConfig>
 8001a46:	0003      	movs	r3, r0
 8001a48:	2b01      	cmp	r3, #1
 8001a4a:	d101      	bne.n	8001a50 <HAL_UART_Init+0x58>
 8001a4c:	2301      	movs	r3, #1
 8001a4e:	e024      	b.n	8001a9a <HAL_UART_Init+0xa2>
 8001a50:	687b      	ldr	r3, [r7, #4]
 8001a52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a54:	2b00      	cmp	r3, #0
 8001a56:	d003      	beq.n	8001a60 <HAL_UART_Init+0x68>
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	0018      	movs	r0, r3
 8001a5c:	f000 f9e0 	bl	8001e20 <UART_AdvFeatureConfig>
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	685a      	ldr	r2, [r3, #4]
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	490e      	ldr	r1, [pc, #56]	; (8001aa4 <HAL_UART_Init+0xac>)
 8001a6c:	400a      	ands	r2, r1
 8001a6e:	605a      	str	r2, [r3, #4]
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	689a      	ldr	r2, [r3, #8]
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	681b      	ldr	r3, [r3, #0]
 8001a7a:	212a      	movs	r1, #42	; 0x2a
 8001a7c:	438a      	bics	r2, r1
 8001a7e:	609a      	str	r2, [r3, #8]
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	2101      	movs	r1, #1
 8001a8c:	430a      	orrs	r2, r1
 8001a8e:	601a      	str	r2, [r3, #0]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	0018      	movs	r0, r3
 8001a94:	f000 fa78 	bl	8001f88 <UART_CheckIdleState>
 8001a98:	0003      	movs	r3, r0
 8001a9a:	0018      	movs	r0, r3
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	b002      	add	sp, #8
 8001aa0:	bd80      	pop	{r7, pc}
 8001aa2:	46c0      	nop			; (mov r8, r8)
 8001aa4:	ffffb7ff 	.word	0xffffb7ff

08001aa8 <UART_SetConfig>:
 8001aa8:	b590      	push	{r4, r7, lr}
 8001aaa:	b087      	sub	sp, #28
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
 8001ab0:	2300      	movs	r3, #0
 8001ab2:	60fb      	str	r3, [r7, #12]
 8001ab4:	2317      	movs	r3, #23
 8001ab6:	18fb      	adds	r3, r7, r3
 8001ab8:	2210      	movs	r2, #16
 8001aba:	701a      	strb	r2, [r3, #0]
 8001abc:	230a      	movs	r3, #10
 8001abe:	18fb      	adds	r3, r7, r3
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	801a      	strh	r2, [r3, #0]
 8001ac4:	2314      	movs	r3, #20
 8001ac6:	18fb      	adds	r3, r7, r3
 8001ac8:	2200      	movs	r2, #0
 8001aca:	801a      	strh	r2, [r3, #0]
 8001acc:	2313      	movs	r3, #19
 8001ace:	18fb      	adds	r3, r7, r3
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	701a      	strb	r2, [r3, #0]
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	689a      	ldr	r2, [r3, #8]
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	691b      	ldr	r3, [r3, #16]
 8001adc:	431a      	orrs	r2, r3
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	695b      	ldr	r3, [r3, #20]
 8001ae2:	431a      	orrs	r2, r3
 8001ae4:	687b      	ldr	r3, [r7, #4]
 8001ae6:	69db      	ldr	r3, [r3, #28]
 8001ae8:	4313      	orrs	r3, r2
 8001aea:	60fb      	str	r3, [r7, #12]
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	681b      	ldr	r3, [r3, #0]
 8001af2:	4ac1      	ldr	r2, [pc, #772]	; (8001df8 <UART_SetConfig+0x350>)
 8001af4:	4013      	ands	r3, r2
 8001af6:	0019      	movs	r1, r3
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	68fa      	ldr	r2, [r7, #12]
 8001afe:	430a      	orrs	r2, r1
 8001b00:	601a      	str	r2, [r3, #0]
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	681b      	ldr	r3, [r3, #0]
 8001b06:	685b      	ldr	r3, [r3, #4]
 8001b08:	4abc      	ldr	r2, [pc, #752]	; (8001dfc <UART_SetConfig+0x354>)
 8001b0a:	4013      	ands	r3, r2
 8001b0c:	0019      	movs	r1, r3
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	68da      	ldr	r2, [r3, #12]
 8001b12:	687b      	ldr	r3, [r7, #4]
 8001b14:	681b      	ldr	r3, [r3, #0]
 8001b16:	430a      	orrs	r2, r1
 8001b18:	605a      	str	r2, [r3, #4]
 8001b1a:	687b      	ldr	r3, [r7, #4]
 8001b1c:	699a      	ldr	r2, [r3, #24]
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	6a1b      	ldr	r3, [r3, #32]
 8001b22:	4313      	orrs	r3, r2
 8001b24:	60fb      	str	r3, [r7, #12]
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	689b      	ldr	r3, [r3, #8]
 8001b2c:	4ab4      	ldr	r2, [pc, #720]	; (8001e00 <UART_SetConfig+0x358>)
 8001b2e:	4013      	ands	r3, r2
 8001b30:	0019      	movs	r1, r3
 8001b32:	687b      	ldr	r3, [r7, #4]
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	68fa      	ldr	r2, [r7, #12]
 8001b38:	430a      	orrs	r2, r1
 8001b3a:	609a      	str	r2, [r3, #8]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	4ab0      	ldr	r2, [pc, #704]	; (8001e04 <UART_SetConfig+0x35c>)
 8001b42:	4293      	cmp	r3, r2
 8001b44:	d125      	bne.n	8001b92 <UART_SetConfig+0xea>
 8001b46:	4bb0      	ldr	r3, [pc, #704]	; (8001e08 <UART_SetConfig+0x360>)
 8001b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b4a:	2203      	movs	r2, #3
 8001b4c:	4013      	ands	r3, r2
 8001b4e:	2b01      	cmp	r3, #1
 8001b50:	d00f      	beq.n	8001b72 <UART_SetConfig+0xca>
 8001b52:	d304      	bcc.n	8001b5e <UART_SetConfig+0xb6>
 8001b54:	2b02      	cmp	r3, #2
 8001b56:	d011      	beq.n	8001b7c <UART_SetConfig+0xd4>
 8001b58:	2b03      	cmp	r3, #3
 8001b5a:	d005      	beq.n	8001b68 <UART_SetConfig+0xc0>
 8001b5c:	e013      	b.n	8001b86 <UART_SetConfig+0xde>
 8001b5e:	2317      	movs	r3, #23
 8001b60:	18fb      	adds	r3, r7, r3
 8001b62:	2200      	movs	r2, #0
 8001b64:	701a      	strb	r2, [r3, #0]
 8001b66:	e064      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001b68:	2317      	movs	r3, #23
 8001b6a:	18fb      	adds	r3, r7, r3
 8001b6c:	2202      	movs	r2, #2
 8001b6e:	701a      	strb	r2, [r3, #0]
 8001b70:	e05f      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001b72:	2317      	movs	r3, #23
 8001b74:	18fb      	adds	r3, r7, r3
 8001b76:	2204      	movs	r2, #4
 8001b78:	701a      	strb	r2, [r3, #0]
 8001b7a:	e05a      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001b7c:	2317      	movs	r3, #23
 8001b7e:	18fb      	adds	r3, r7, r3
 8001b80:	2208      	movs	r2, #8
 8001b82:	701a      	strb	r2, [r3, #0]
 8001b84:	e055      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001b86:	2317      	movs	r3, #23
 8001b88:	18fb      	adds	r3, r7, r3
 8001b8a:	2210      	movs	r2, #16
 8001b8c:	701a      	strb	r2, [r3, #0]
 8001b8e:	46c0      	nop			; (mov r8, r8)
 8001b90:	e04f      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	4a9d      	ldr	r2, [pc, #628]	; (8001e0c <UART_SetConfig+0x364>)
 8001b98:	4293      	cmp	r3, r2
 8001b9a:	d132      	bne.n	8001c02 <UART_SetConfig+0x15a>
 8001b9c:	4b9a      	ldr	r3, [pc, #616]	; (8001e08 <UART_SetConfig+0x360>)
 8001b9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ba0:	23c0      	movs	r3, #192	; 0xc0
 8001ba2:	029b      	lsls	r3, r3, #10
 8001ba4:	4013      	ands	r3, r2
 8001ba6:	2280      	movs	r2, #128	; 0x80
 8001ba8:	0252      	lsls	r2, r2, #9
 8001baa:	4293      	cmp	r3, r2
 8001bac:	d019      	beq.n	8001be2 <UART_SetConfig+0x13a>
 8001bae:	2280      	movs	r2, #128	; 0x80
 8001bb0:	0252      	lsls	r2, r2, #9
 8001bb2:	4293      	cmp	r3, r2
 8001bb4:	d802      	bhi.n	8001bbc <UART_SetConfig+0x114>
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d009      	beq.n	8001bce <UART_SetConfig+0x126>
 8001bba:	e01c      	b.n	8001bf6 <UART_SetConfig+0x14e>
 8001bbc:	2280      	movs	r2, #128	; 0x80
 8001bbe:	0292      	lsls	r2, r2, #10
 8001bc0:	4293      	cmp	r3, r2
 8001bc2:	d013      	beq.n	8001bec <UART_SetConfig+0x144>
 8001bc4:	22c0      	movs	r2, #192	; 0xc0
 8001bc6:	0292      	lsls	r2, r2, #10
 8001bc8:	4293      	cmp	r3, r2
 8001bca:	d005      	beq.n	8001bd8 <UART_SetConfig+0x130>
 8001bcc:	e013      	b.n	8001bf6 <UART_SetConfig+0x14e>
 8001bce:	2317      	movs	r3, #23
 8001bd0:	18fb      	adds	r3, r7, r3
 8001bd2:	2200      	movs	r2, #0
 8001bd4:	701a      	strb	r2, [r3, #0]
 8001bd6:	e02c      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001bd8:	2317      	movs	r3, #23
 8001bda:	18fb      	adds	r3, r7, r3
 8001bdc:	2202      	movs	r2, #2
 8001bde:	701a      	strb	r2, [r3, #0]
 8001be0:	e027      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001be2:	2317      	movs	r3, #23
 8001be4:	18fb      	adds	r3, r7, r3
 8001be6:	2204      	movs	r2, #4
 8001be8:	701a      	strb	r2, [r3, #0]
 8001bea:	e022      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001bec:	2317      	movs	r3, #23
 8001bee:	18fb      	adds	r3, r7, r3
 8001bf0:	2208      	movs	r2, #8
 8001bf2:	701a      	strb	r2, [r3, #0]
 8001bf4:	e01d      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001bf6:	2317      	movs	r3, #23
 8001bf8:	18fb      	adds	r3, r7, r3
 8001bfa:	2210      	movs	r2, #16
 8001bfc:	701a      	strb	r2, [r3, #0]
 8001bfe:	46c0      	nop			; (mov r8, r8)
 8001c00:	e017      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	681b      	ldr	r3, [r3, #0]
 8001c06:	4a82      	ldr	r2, [pc, #520]	; (8001e10 <UART_SetConfig+0x368>)
 8001c08:	4293      	cmp	r3, r2
 8001c0a:	d104      	bne.n	8001c16 <UART_SetConfig+0x16e>
 8001c0c:	2317      	movs	r3, #23
 8001c0e:	18fb      	adds	r3, r7, r3
 8001c10:	2200      	movs	r2, #0
 8001c12:	701a      	strb	r2, [r3, #0]
 8001c14:	e00d      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	681b      	ldr	r3, [r3, #0]
 8001c1a:	4a7e      	ldr	r2, [pc, #504]	; (8001e14 <UART_SetConfig+0x36c>)
 8001c1c:	4293      	cmp	r3, r2
 8001c1e:	d104      	bne.n	8001c2a <UART_SetConfig+0x182>
 8001c20:	2317      	movs	r3, #23
 8001c22:	18fb      	adds	r3, r7, r3
 8001c24:	2200      	movs	r2, #0
 8001c26:	701a      	strb	r2, [r3, #0]
 8001c28:	e003      	b.n	8001c32 <UART_SetConfig+0x18a>
 8001c2a:	2317      	movs	r3, #23
 8001c2c:	18fb      	adds	r3, r7, r3
 8001c2e:	2210      	movs	r2, #16
 8001c30:	701a      	strb	r2, [r3, #0]
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	69da      	ldr	r2, [r3, #28]
 8001c36:	2380      	movs	r3, #128	; 0x80
 8001c38:	021b      	lsls	r3, r3, #8
 8001c3a:	429a      	cmp	r2, r3
 8001c3c:	d000      	beq.n	8001c40 <UART_SetConfig+0x198>
 8001c3e:	e077      	b.n	8001d30 <UART_SetConfig+0x288>
 8001c40:	2317      	movs	r3, #23
 8001c42:	18fb      	adds	r3, r7, r3
 8001c44:	781b      	ldrb	r3, [r3, #0]
 8001c46:	2b02      	cmp	r3, #2
 8001c48:	d01c      	beq.n	8001c84 <UART_SetConfig+0x1dc>
 8001c4a:	dc02      	bgt.n	8001c52 <UART_SetConfig+0x1aa>
 8001c4c:	2b00      	cmp	r3, #0
 8001c4e:	d005      	beq.n	8001c5c <UART_SetConfig+0x1b4>
 8001c50:	e04f      	b.n	8001cf2 <UART_SetConfig+0x24a>
 8001c52:	2b04      	cmp	r3, #4
 8001c54:	d027      	beq.n	8001ca6 <UART_SetConfig+0x1fe>
 8001c56:	2b08      	cmp	r3, #8
 8001c58:	d039      	beq.n	8001cce <UART_SetConfig+0x226>
 8001c5a:	e04a      	b.n	8001cf2 <UART_SetConfig+0x24a>
 8001c5c:	f7ff fa84 	bl	8001168 <HAL_RCC_GetPCLK1Freq>
 8001c60:	0003      	movs	r3, r0
 8001c62:	005a      	lsls	r2, r3, #1
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	685b      	ldr	r3, [r3, #4]
 8001c68:	085b      	lsrs	r3, r3, #1
 8001c6a:	18d2      	adds	r2, r2, r3
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	685b      	ldr	r3, [r3, #4]
 8001c70:	0019      	movs	r1, r3
 8001c72:	0010      	movs	r0, r2
 8001c74:	f7fe fa48 	bl	8000108 <__udivsi3>
 8001c78:	0003      	movs	r3, r0
 8001c7a:	001a      	movs	r2, r3
 8001c7c:	2314      	movs	r3, #20
 8001c7e:	18fb      	adds	r3, r7, r3
 8001c80:	801a      	strh	r2, [r3, #0]
 8001c82:	e03b      	b.n	8001cfc <UART_SetConfig+0x254>
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	685b      	ldr	r3, [r3, #4]
 8001c88:	085b      	lsrs	r3, r3, #1
 8001c8a:	4a63      	ldr	r2, [pc, #396]	; (8001e18 <UART_SetConfig+0x370>)
 8001c8c:	189a      	adds	r2, r3, r2
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	685b      	ldr	r3, [r3, #4]
 8001c92:	0019      	movs	r1, r3
 8001c94:	0010      	movs	r0, r2
 8001c96:	f7fe fa37 	bl	8000108 <__udivsi3>
 8001c9a:	0003      	movs	r3, r0
 8001c9c:	001a      	movs	r2, r3
 8001c9e:	2314      	movs	r3, #20
 8001ca0:	18fb      	adds	r3, r7, r3
 8001ca2:	801a      	strh	r2, [r3, #0]
 8001ca4:	e02a      	b.n	8001cfc <UART_SetConfig+0x254>
 8001ca6:	f7ff f9d7 	bl	8001058 <HAL_RCC_GetSysClockFreq>
 8001caa:	0003      	movs	r3, r0
 8001cac:	005a      	lsls	r2, r3, #1
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	685b      	ldr	r3, [r3, #4]
 8001cb2:	085b      	lsrs	r3, r3, #1
 8001cb4:	18d2      	adds	r2, r2, r3
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	685b      	ldr	r3, [r3, #4]
 8001cba:	0019      	movs	r1, r3
 8001cbc:	0010      	movs	r0, r2
 8001cbe:	f7fe fa23 	bl	8000108 <__udivsi3>
 8001cc2:	0003      	movs	r3, r0
 8001cc4:	001a      	movs	r2, r3
 8001cc6:	2314      	movs	r3, #20
 8001cc8:	18fb      	adds	r3, r7, r3
 8001cca:	801a      	strh	r2, [r3, #0]
 8001ccc:	e016      	b.n	8001cfc <UART_SetConfig+0x254>
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	685b      	ldr	r3, [r3, #4]
 8001cd2:	085b      	lsrs	r3, r3, #1
 8001cd4:	2280      	movs	r2, #128	; 0x80
 8001cd6:	0252      	lsls	r2, r2, #9
 8001cd8:	189a      	adds	r2, r3, r2
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	685b      	ldr	r3, [r3, #4]
 8001cde:	0019      	movs	r1, r3
 8001ce0:	0010      	movs	r0, r2
 8001ce2:	f7fe fa11 	bl	8000108 <__udivsi3>
 8001ce6:	0003      	movs	r3, r0
 8001ce8:	001a      	movs	r2, r3
 8001cea:	2314      	movs	r3, #20
 8001cec:	18fb      	adds	r3, r7, r3
 8001cee:	801a      	strh	r2, [r3, #0]
 8001cf0:	e004      	b.n	8001cfc <UART_SetConfig+0x254>
 8001cf2:	2313      	movs	r3, #19
 8001cf4:	18fb      	adds	r3, r7, r3
 8001cf6:	2201      	movs	r2, #1
 8001cf8:	701a      	strb	r2, [r3, #0]
 8001cfa:	46c0      	nop			; (mov r8, r8)
 8001cfc:	200a      	movs	r0, #10
 8001cfe:	183b      	adds	r3, r7, r0
 8001d00:	2414      	movs	r4, #20
 8001d02:	193a      	adds	r2, r7, r4
 8001d04:	8812      	ldrh	r2, [r2, #0]
 8001d06:	210f      	movs	r1, #15
 8001d08:	438a      	bics	r2, r1
 8001d0a:	801a      	strh	r2, [r3, #0]
 8001d0c:	193b      	adds	r3, r7, r4
 8001d0e:	881b      	ldrh	r3, [r3, #0]
 8001d10:	105b      	asrs	r3, r3, #1
 8001d12:	b29b      	uxth	r3, r3
 8001d14:	2207      	movs	r2, #7
 8001d16:	4013      	ands	r3, r2
 8001d18:	b299      	uxth	r1, r3
 8001d1a:	183b      	adds	r3, r7, r0
 8001d1c:	183a      	adds	r2, r7, r0
 8001d1e:	8812      	ldrh	r2, [r2, #0]
 8001d20:	430a      	orrs	r2, r1
 8001d22:	801a      	strh	r2, [r3, #0]
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	183a      	adds	r2, r7, r0
 8001d2a:	8812      	ldrh	r2, [r2, #0]
 8001d2c:	60da      	str	r2, [r3, #12]
 8001d2e:	e05b      	b.n	8001de8 <UART_SetConfig+0x340>
 8001d30:	2317      	movs	r3, #23
 8001d32:	18fb      	adds	r3, r7, r3
 8001d34:	781b      	ldrb	r3, [r3, #0]
 8001d36:	2b02      	cmp	r3, #2
 8001d38:	d01b      	beq.n	8001d72 <UART_SetConfig+0x2ca>
 8001d3a:	dc02      	bgt.n	8001d42 <UART_SetConfig+0x29a>
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d005      	beq.n	8001d4c <UART_SetConfig+0x2a4>
 8001d40:	e04d      	b.n	8001dde <UART_SetConfig+0x336>
 8001d42:	2b04      	cmp	r3, #4
 8001d44:	d026      	beq.n	8001d94 <UART_SetConfig+0x2ec>
 8001d46:	2b08      	cmp	r3, #8
 8001d48:	d037      	beq.n	8001dba <UART_SetConfig+0x312>
 8001d4a:	e048      	b.n	8001dde <UART_SetConfig+0x336>
 8001d4c:	f7ff fa0c 	bl	8001168 <HAL_RCC_GetPCLK1Freq>
 8001d50:	0002      	movs	r2, r0
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	685b      	ldr	r3, [r3, #4]
 8001d56:	085b      	lsrs	r3, r3, #1
 8001d58:	18d2      	adds	r2, r2, r3
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	685b      	ldr	r3, [r3, #4]
 8001d5e:	0019      	movs	r1, r3
 8001d60:	0010      	movs	r0, r2
 8001d62:	f7fe f9d1 	bl	8000108 <__udivsi3>
 8001d66:	0003      	movs	r3, r0
 8001d68:	b29a      	uxth	r2, r3
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	60da      	str	r2, [r3, #12]
 8001d70:	e03a      	b.n	8001de8 <UART_SetConfig+0x340>
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	685b      	ldr	r3, [r3, #4]
 8001d76:	085b      	lsrs	r3, r3, #1
 8001d78:	4a28      	ldr	r2, [pc, #160]	; (8001e1c <UART_SetConfig+0x374>)
 8001d7a:	189a      	adds	r2, r3, r2
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	685b      	ldr	r3, [r3, #4]
 8001d80:	0019      	movs	r1, r3
 8001d82:	0010      	movs	r0, r2
 8001d84:	f7fe f9c0 	bl	8000108 <__udivsi3>
 8001d88:	0003      	movs	r3, r0
 8001d8a:	b29a      	uxth	r2, r3
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	60da      	str	r2, [r3, #12]
 8001d92:	e029      	b.n	8001de8 <UART_SetConfig+0x340>
 8001d94:	f7ff f960 	bl	8001058 <HAL_RCC_GetSysClockFreq>
 8001d98:	0002      	movs	r2, r0
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	085b      	lsrs	r3, r3, #1
 8001da0:	18d2      	adds	r2, r2, r3
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	685b      	ldr	r3, [r3, #4]
 8001da6:	0019      	movs	r1, r3
 8001da8:	0010      	movs	r0, r2
 8001daa:	f7fe f9ad 	bl	8000108 <__udivsi3>
 8001dae:	0003      	movs	r3, r0
 8001db0:	b29a      	uxth	r2, r3
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	60da      	str	r2, [r3, #12]
 8001db8:	e016      	b.n	8001de8 <UART_SetConfig+0x340>
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	685b      	ldr	r3, [r3, #4]
 8001dbe:	085b      	lsrs	r3, r3, #1
 8001dc0:	2280      	movs	r2, #128	; 0x80
 8001dc2:	0212      	lsls	r2, r2, #8
 8001dc4:	189a      	adds	r2, r3, r2
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	685b      	ldr	r3, [r3, #4]
 8001dca:	0019      	movs	r1, r3
 8001dcc:	0010      	movs	r0, r2
 8001dce:	f7fe f99b 	bl	8000108 <__udivsi3>
 8001dd2:	0003      	movs	r3, r0
 8001dd4:	b29a      	uxth	r2, r3
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	60da      	str	r2, [r3, #12]
 8001ddc:	e004      	b.n	8001de8 <UART_SetConfig+0x340>
 8001dde:	2313      	movs	r3, #19
 8001de0:	18fb      	adds	r3, r7, r3
 8001de2:	2201      	movs	r2, #1
 8001de4:	701a      	strb	r2, [r3, #0]
 8001de6:	46c0      	nop			; (mov r8, r8)
 8001de8:	2313      	movs	r3, #19
 8001dea:	18fb      	adds	r3, r7, r3
 8001dec:	781b      	ldrb	r3, [r3, #0]
 8001dee:	0018      	movs	r0, r3
 8001df0:	46bd      	mov	sp, r7
 8001df2:	b007      	add	sp, #28
 8001df4:	bd90      	pop	{r4, r7, pc}
 8001df6:	46c0      	nop			; (mov r8, r8)
 8001df8:	efff69f3 	.word	0xefff69f3
 8001dfc:	ffffcfff 	.word	0xffffcfff
 8001e00:	fffff4ff 	.word	0xfffff4ff
 8001e04:	40013800 	.word	0x40013800
 8001e08:	40021000 	.word	0x40021000
 8001e0c:	40004400 	.word	0x40004400
 8001e10:	40004800 	.word	0x40004800
 8001e14:	40004c00 	.word	0x40004c00
 8001e18:	00f42400 	.word	0x00f42400
 8001e1c:	007a1200 	.word	0x007a1200

08001e20 <UART_AdvFeatureConfig>:
 8001e20:	b580      	push	{r7, lr}
 8001e22:	b082      	sub	sp, #8
 8001e24:	af00      	add	r7, sp, #0
 8001e26:	6078      	str	r0, [r7, #4]
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	4013      	ands	r3, r2
 8001e30:	d00b      	beq.n	8001e4a <UART_AdvFeatureConfig+0x2a>
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	685b      	ldr	r3, [r3, #4]
 8001e38:	4a4a      	ldr	r2, [pc, #296]	; (8001f64 <UART_AdvFeatureConfig+0x144>)
 8001e3a:	4013      	ands	r3, r2
 8001e3c:	0019      	movs	r1, r3
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	430a      	orrs	r2, r1
 8001e48:	605a      	str	r2, [r3, #4]
 8001e4a:	687b      	ldr	r3, [r7, #4]
 8001e4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e4e:	2202      	movs	r2, #2
 8001e50:	4013      	ands	r3, r2
 8001e52:	d00b      	beq.n	8001e6c <UART_AdvFeatureConfig+0x4c>
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	685b      	ldr	r3, [r3, #4]
 8001e5a:	4a43      	ldr	r2, [pc, #268]	; (8001f68 <UART_AdvFeatureConfig+0x148>)
 8001e5c:	4013      	ands	r3, r2
 8001e5e:	0019      	movs	r1, r3
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	430a      	orrs	r2, r1
 8001e6a:	605a      	str	r2, [r3, #4]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e70:	2204      	movs	r2, #4
 8001e72:	4013      	ands	r3, r2
 8001e74:	d00b      	beq.n	8001e8e <UART_AdvFeatureConfig+0x6e>
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	685b      	ldr	r3, [r3, #4]
 8001e7c:	4a3b      	ldr	r2, [pc, #236]	; (8001f6c <UART_AdvFeatureConfig+0x14c>)
 8001e7e:	4013      	ands	r3, r2
 8001e80:	0019      	movs	r1, r3
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	430a      	orrs	r2, r1
 8001e8c:	605a      	str	r2, [r3, #4]
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e92:	2208      	movs	r2, #8
 8001e94:	4013      	ands	r3, r2
 8001e96:	d00b      	beq.n	8001eb0 <UART_AdvFeatureConfig+0x90>
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	685b      	ldr	r3, [r3, #4]
 8001e9e:	4a34      	ldr	r2, [pc, #208]	; (8001f70 <UART_AdvFeatureConfig+0x150>)
 8001ea0:	4013      	ands	r3, r2
 8001ea2:	0019      	movs	r1, r3
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	430a      	orrs	r2, r1
 8001eae:	605a      	str	r2, [r3, #4]
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001eb4:	2210      	movs	r2, #16
 8001eb6:	4013      	ands	r3, r2
 8001eb8:	d00b      	beq.n	8001ed2 <UART_AdvFeatureConfig+0xb2>
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	689b      	ldr	r3, [r3, #8]
 8001ec0:	4a2c      	ldr	r2, [pc, #176]	; (8001f74 <UART_AdvFeatureConfig+0x154>)
 8001ec2:	4013      	ands	r3, r2
 8001ec4:	0019      	movs	r1, r3
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	430a      	orrs	r2, r1
 8001ed0:	609a      	str	r2, [r3, #8]
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ed6:	2220      	movs	r2, #32
 8001ed8:	4013      	ands	r3, r2
 8001eda:	d00b      	beq.n	8001ef4 <UART_AdvFeatureConfig+0xd4>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	689b      	ldr	r3, [r3, #8]
 8001ee2:	4a25      	ldr	r2, [pc, #148]	; (8001f78 <UART_AdvFeatureConfig+0x158>)
 8001ee4:	4013      	ands	r3, r2
 8001ee6:	0019      	movs	r1, r3
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	430a      	orrs	r2, r1
 8001ef2:	609a      	str	r2, [r3, #8]
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ef8:	2240      	movs	r2, #64	; 0x40
 8001efa:	4013      	ands	r3, r2
 8001efc:	d01d      	beq.n	8001f3a <UART_AdvFeatureConfig+0x11a>
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	685b      	ldr	r3, [r3, #4]
 8001f04:	4a1d      	ldr	r2, [pc, #116]	; (8001f7c <UART_AdvFeatureConfig+0x15c>)
 8001f06:	4013      	ands	r3, r2
 8001f08:	0019      	movs	r1, r3
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	430a      	orrs	r2, r1
 8001f14:	605a      	str	r2, [r3, #4]
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f1a:	2380      	movs	r3, #128	; 0x80
 8001f1c:	035b      	lsls	r3, r3, #13
 8001f1e:	429a      	cmp	r2, r3
 8001f20:	d10b      	bne.n	8001f3a <UART_AdvFeatureConfig+0x11a>
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	685b      	ldr	r3, [r3, #4]
 8001f28:	4a15      	ldr	r2, [pc, #84]	; (8001f80 <UART_AdvFeatureConfig+0x160>)
 8001f2a:	4013      	ands	r3, r2
 8001f2c:	0019      	movs	r1, r3
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	430a      	orrs	r2, r1
 8001f38:	605a      	str	r2, [r3, #4]
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f3e:	2280      	movs	r2, #128	; 0x80
 8001f40:	4013      	ands	r3, r2
 8001f42:	d00b      	beq.n	8001f5c <UART_AdvFeatureConfig+0x13c>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	685b      	ldr	r3, [r3, #4]
 8001f4a:	4a0e      	ldr	r2, [pc, #56]	; (8001f84 <UART_AdvFeatureConfig+0x164>)
 8001f4c:	4013      	ands	r3, r2
 8001f4e:	0019      	movs	r1, r3
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	430a      	orrs	r2, r1
 8001f5a:	605a      	str	r2, [r3, #4]
 8001f5c:	46c0      	nop			; (mov r8, r8)
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	b002      	add	sp, #8
 8001f62:	bd80      	pop	{r7, pc}
 8001f64:	fffdffff 	.word	0xfffdffff
 8001f68:	fffeffff 	.word	0xfffeffff
 8001f6c:	fffbffff 	.word	0xfffbffff
 8001f70:	ffff7fff 	.word	0xffff7fff
 8001f74:	ffffefff 	.word	0xffffefff
 8001f78:	ffffdfff 	.word	0xffffdfff
 8001f7c:	ffefffff 	.word	0xffefffff
 8001f80:	ff9fffff 	.word	0xff9fffff
 8001f84:	fff7ffff 	.word	0xfff7ffff

08001f88 <UART_CheckIdleState>:
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b086      	sub	sp, #24
 8001f8c:	af02      	add	r7, sp, #8
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	2300      	movs	r3, #0
 8001f92:	60fb      	str	r3, [r7, #12]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	2200      	movs	r2, #0
 8001f98:	66da      	str	r2, [r3, #108]	; 0x6c
 8001f9a:	f7fe f97d 	bl	8000298 <HAL_GetTick>
 8001f9e:	0003      	movs	r3, r0
 8001fa0:	60fb      	str	r3, [r7, #12]
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	4a21      	ldr	r2, [pc, #132]	; (800202c <UART_CheckIdleState+0xa4>)
 8001fa8:	4293      	cmp	r3, r2
 8001faa:	d004      	beq.n	8001fb6 <UART_CheckIdleState+0x2e>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	4a1f      	ldr	r2, [pc, #124]	; (8002030 <UART_CheckIdleState+0xa8>)
 8001fb2:	4293      	cmp	r3, r2
 8001fb4:	d129      	bne.n	800200a <UART_CheckIdleState+0x82>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	2208      	movs	r2, #8
 8001fbe:	4013      	ands	r3, r2
 8001fc0:	2b08      	cmp	r3, #8
 8001fc2:	d10d      	bne.n	8001fe0 <UART_CheckIdleState+0x58>
 8001fc4:	68fa      	ldr	r2, [r7, #12]
 8001fc6:	2380      	movs	r3, #128	; 0x80
 8001fc8:	0399      	lsls	r1, r3, #14
 8001fca:	6878      	ldr	r0, [r7, #4]
 8001fcc:	4b19      	ldr	r3, [pc, #100]	; (8002034 <UART_CheckIdleState+0xac>)
 8001fce:	9300      	str	r3, [sp, #0]
 8001fd0:	0013      	movs	r3, r2
 8001fd2:	2200      	movs	r2, #0
 8001fd4:	f000 f830 	bl	8002038 <UART_WaitOnFlagUntilTimeout>
 8001fd8:	1e03      	subs	r3, r0, #0
 8001fda:	d001      	beq.n	8001fe0 <UART_CheckIdleState+0x58>
 8001fdc:	2303      	movs	r3, #3
 8001fde:	e021      	b.n	8002024 <UART_CheckIdleState+0x9c>
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	2204      	movs	r2, #4
 8001fe8:	4013      	ands	r3, r2
 8001fea:	2b04      	cmp	r3, #4
 8001fec:	d10d      	bne.n	800200a <UART_CheckIdleState+0x82>
 8001fee:	68fa      	ldr	r2, [r7, #12]
 8001ff0:	2380      	movs	r3, #128	; 0x80
 8001ff2:	03d9      	lsls	r1, r3, #15
 8001ff4:	6878      	ldr	r0, [r7, #4]
 8001ff6:	4b0f      	ldr	r3, [pc, #60]	; (8002034 <UART_CheckIdleState+0xac>)
 8001ff8:	9300      	str	r3, [sp, #0]
 8001ffa:	0013      	movs	r3, r2
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	f000 f81b 	bl	8002038 <UART_WaitOnFlagUntilTimeout>
 8002002:	1e03      	subs	r3, r0, #0
 8002004:	d001      	beq.n	800200a <UART_CheckIdleState+0x82>
 8002006:	2303      	movs	r3, #3
 8002008:	e00c      	b.n	8002024 <UART_CheckIdleState+0x9c>
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	2269      	movs	r2, #105	; 0x69
 800200e:	2120      	movs	r1, #32
 8002010:	5499      	strb	r1, [r3, r2]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	226a      	movs	r2, #106	; 0x6a
 8002016:	2120      	movs	r1, #32
 8002018:	5499      	strb	r1, [r3, r2]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	2268      	movs	r2, #104	; 0x68
 800201e:	2100      	movs	r1, #0
 8002020:	5499      	strb	r1, [r3, r2]
 8002022:	2300      	movs	r3, #0
 8002024:	0018      	movs	r0, r3
 8002026:	46bd      	mov	sp, r7
 8002028:	b004      	add	sp, #16
 800202a:	bd80      	pop	{r7, pc}
 800202c:	40013800 	.word	0x40013800
 8002030:	40004400 	.word	0x40004400
 8002034:	01ffffff 	.word	0x01ffffff

08002038 <UART_WaitOnFlagUntilTimeout>:
 8002038:	b580      	push	{r7, lr}
 800203a:	b084      	sub	sp, #16
 800203c:	af00      	add	r7, sp, #0
 800203e:	60f8      	str	r0, [r7, #12]
 8002040:	60b9      	str	r1, [r7, #8]
 8002042:	603b      	str	r3, [r7, #0]
 8002044:	1dfb      	adds	r3, r7, #7
 8002046:	701a      	strb	r2, [r3, #0]
 8002048:	e02b      	b.n	80020a2 <UART_WaitOnFlagUntilTimeout+0x6a>
 800204a:	69bb      	ldr	r3, [r7, #24]
 800204c:	3301      	adds	r3, #1
 800204e:	d028      	beq.n	80020a2 <UART_WaitOnFlagUntilTimeout+0x6a>
 8002050:	69bb      	ldr	r3, [r7, #24]
 8002052:	2b00      	cmp	r3, #0
 8002054:	d007      	beq.n	8002066 <UART_WaitOnFlagUntilTimeout+0x2e>
 8002056:	f7fe f91f 	bl	8000298 <HAL_GetTick>
 800205a:	0002      	movs	r2, r0
 800205c:	683b      	ldr	r3, [r7, #0]
 800205e:	1ad3      	subs	r3, r2, r3
 8002060:	69ba      	ldr	r2, [r7, #24]
 8002062:	429a      	cmp	r2, r3
 8002064:	d21d      	bcs.n	80020a2 <UART_WaitOnFlagUntilTimeout+0x6a>
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	681a      	ldr	r2, [r3, #0]
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	4916      	ldr	r1, [pc, #88]	; (80020cc <UART_WaitOnFlagUntilTimeout+0x94>)
 8002072:	400a      	ands	r2, r1
 8002074:	601a      	str	r2, [r3, #0]
 8002076:	68fb      	ldr	r3, [r7, #12]
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	689a      	ldr	r2, [r3, #8]
 800207c:	68fb      	ldr	r3, [r7, #12]
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2101      	movs	r1, #1
 8002082:	438a      	bics	r2, r1
 8002084:	609a      	str	r2, [r3, #8]
 8002086:	68fb      	ldr	r3, [r7, #12]
 8002088:	2269      	movs	r2, #105	; 0x69
 800208a:	2120      	movs	r1, #32
 800208c:	5499      	strb	r1, [r3, r2]
 800208e:	68fb      	ldr	r3, [r7, #12]
 8002090:	226a      	movs	r2, #106	; 0x6a
 8002092:	2120      	movs	r1, #32
 8002094:	5499      	strb	r1, [r3, r2]
 8002096:	68fb      	ldr	r3, [r7, #12]
 8002098:	2268      	movs	r2, #104	; 0x68
 800209a:	2100      	movs	r1, #0
 800209c:	5499      	strb	r1, [r3, r2]
 800209e:	2303      	movs	r3, #3
 80020a0:	e00f      	b.n	80020c2 <UART_WaitOnFlagUntilTimeout+0x8a>
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	69db      	ldr	r3, [r3, #28]
 80020a8:	68ba      	ldr	r2, [r7, #8]
 80020aa:	4013      	ands	r3, r2
 80020ac:	68ba      	ldr	r2, [r7, #8]
 80020ae:	1ad3      	subs	r3, r2, r3
 80020b0:	425a      	negs	r2, r3
 80020b2:	4153      	adcs	r3, r2
 80020b4:	b2db      	uxtb	r3, r3
 80020b6:	001a      	movs	r2, r3
 80020b8:	1dfb      	adds	r3, r7, #7
 80020ba:	781b      	ldrb	r3, [r3, #0]
 80020bc:	429a      	cmp	r2, r3
 80020be:	d0c4      	beq.n	800204a <UART_WaitOnFlagUntilTimeout+0x12>
 80020c0:	2300      	movs	r3, #0
 80020c2:	0018      	movs	r0, r3
 80020c4:	46bd      	mov	sp, r7
 80020c6:	b004      	add	sp, #16
 80020c8:	bd80      	pop	{r7, pc}
 80020ca:	46c0      	nop			; (mov r8, r8)
 80020cc:	fffffe5f 	.word	0xfffffe5f

080020d0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80020d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020d2:	b089      	sub	sp, #36	; 0x24
 80020d4:	af04      	add	r7, sp, #16
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80020d6:	f7fe f8a3 	bl	8000220 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80020da:	f000 f93b 	bl	8002354 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80020de:	f000 fa25 	bl	800252c <_ZL12MX_GPIO_Initv>
  MX_USART2_UART_Init();
 80020e2:	f000 f9ef 	bl	80024c4 <_ZL19MX_USART2_UART_Initv>
  MX_SPI2_Init();
 80020e6:	f000 f995 	bl	8002414 <_ZL12MX_SPI2_Initv>
  /* USER CODE BEGIN 2 */
  TFT_GFX tftDisplay(hspi2.Instance);
 80020ea:	4b97      	ldr	r3, [pc, #604]	; (8002348 <main+0x278>)
 80020ec:	681a      	ldr	r2, [r3, #0]
 80020ee:	1d3b      	adds	r3, r7, #4
 80020f0:	0011      	movs	r1, r2
 80020f2:	0018      	movs	r0, r3
 80020f4:	f000 fbfc 	bl	80028f0 <_ZN7TFT_GFXC1EP11SPI_TypeDef>
  //Set background to black
  tftDisplay.setAddrWindow(0, 0, TFT_GFX::TFT_WIDTH, TFT_GFX::TFT_HEIGHT);
 80020f8:	1d38      	adds	r0, r7, #4
 80020fa:	23a0      	movs	r3, #160	; 0xa0
 80020fc:	005b      	lsls	r3, r3, #1
 80020fe:	9300      	str	r3, [sp, #0]
 8002100:	23f0      	movs	r3, #240	; 0xf0
 8002102:	2200      	movs	r2, #0
 8002104:	2100      	movs	r1, #0
 8002106:	f000 fc00 	bl	800290a <_ZN7TFT_GFX13setAddrWindowEtttt>
  tftDisplay.writeColor(ILI9341_SADDLEBROWN, TFT_GFX::TFT_HEIGHT * TFT_GFX::TFT_WIDTH);
 800210a:	2396      	movs	r3, #150	; 0x96
 800210c:	025a      	lsls	r2, r3, #9
 800210e:	498f      	ldr	r1, [pc, #572]	; (800234c <main+0x27c>)
 8002110:	1d3b      	adds	r3, r7, #4
 8002112:	0018      	movs	r0, r3
 8002114:	f000 fdaf 	bl	8002c76 <_ZN7TFT_GFX10writeColorEtm>
  //Draw on the background
  uint16_t x_inc = 20;
 8002118:	260e      	movs	r6, #14
 800211a:	19bb      	adds	r3, r7, r6
 800211c:	2214      	movs	r2, #20
 800211e:	801a      	strh	r2, [r3, #0]
  int16_t init_x = 30;
 8002120:	240c      	movs	r4, #12
 8002122:	193b      	adds	r3, r7, r4
 8002124:	221e      	movs	r2, #30
 8002126:	801a      	strh	r2, [r3, #0]
  uint16_t displayColor = ILI9341_GREENYELLOW;
 8002128:	250a      	movs	r5, #10
 800212a:	197b      	adds	r3, r7, r5
 800212c:	4a88      	ldr	r2, [pc, #544]	; (8002350 <main+0x280>)
 800212e:	801a      	strh	r2, [r3, #0]
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 'A', displayColor, displayColor, 5, 5);
 8002130:	193b      	adds	r3, r7, r4
 8002132:	881a      	ldrh	r2, [r3, #0]
 8002134:	19bb      	adds	r3, r7, r6
 8002136:	881b      	ldrh	r3, [r3, #0]
 8002138:	18d3      	adds	r3, r2, r3
 800213a:	b29a      	uxth	r2, r3
 800213c:	193b      	adds	r3, r7, r4
 800213e:	801a      	strh	r2, [r3, #0]
 8002140:	193b      	adds	r3, r7, r4
 8002142:	2100      	movs	r1, #0
 8002144:	5e59      	ldrsh	r1, [r3, r1]
 8002146:	1d38      	adds	r0, r7, #4
 8002148:	2305      	movs	r3, #5
 800214a:	9303      	str	r3, [sp, #12]
 800214c:	2305      	movs	r3, #5
 800214e:	9302      	str	r3, [sp, #8]
 8002150:	197b      	adds	r3, r7, r5
 8002152:	881b      	ldrh	r3, [r3, #0]
 8002154:	9301      	str	r3, [sp, #4]
 8002156:	197b      	adds	r3, r7, r5
 8002158:	881b      	ldrh	r3, [r3, #0]
 800215a:	9300      	str	r3, [sp, #0]
 800215c:	2341      	movs	r3, #65	; 0x41
 800215e:	2250      	movs	r2, #80	; 0x50
 8002160:	f000 fe36 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 'l', displayColor, displayColor, 5, 5);
 8002164:	193b      	adds	r3, r7, r4
 8002166:	881a      	ldrh	r2, [r3, #0]
 8002168:	19bb      	adds	r3, r7, r6
 800216a:	881b      	ldrh	r3, [r3, #0]
 800216c:	18d3      	adds	r3, r2, r3
 800216e:	b29a      	uxth	r2, r3
 8002170:	193b      	adds	r3, r7, r4
 8002172:	801a      	strh	r2, [r3, #0]
 8002174:	193b      	adds	r3, r7, r4
 8002176:	2100      	movs	r1, #0
 8002178:	5e59      	ldrsh	r1, [r3, r1]
 800217a:	1d38      	adds	r0, r7, #4
 800217c:	2305      	movs	r3, #5
 800217e:	9303      	str	r3, [sp, #12]
 8002180:	2305      	movs	r3, #5
 8002182:	9302      	str	r3, [sp, #8]
 8002184:	197b      	adds	r3, r7, r5
 8002186:	881b      	ldrh	r3, [r3, #0]
 8002188:	9301      	str	r3, [sp, #4]
 800218a:	197b      	adds	r3, r7, r5
 800218c:	881b      	ldrh	r3, [r3, #0]
 800218e:	9300      	str	r3, [sp, #0]
 8002190:	236c      	movs	r3, #108	; 0x6c
 8002192:	2250      	movs	r2, #80	; 0x50
 8002194:	f000 fe1c 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 'e', displayColor, displayColor, 5, 5);
 8002198:	193b      	adds	r3, r7, r4
 800219a:	881a      	ldrh	r2, [r3, #0]
 800219c:	19bb      	adds	r3, r7, r6
 800219e:	881b      	ldrh	r3, [r3, #0]
 80021a0:	18d3      	adds	r3, r2, r3
 80021a2:	b29a      	uxth	r2, r3
 80021a4:	193b      	adds	r3, r7, r4
 80021a6:	801a      	strh	r2, [r3, #0]
 80021a8:	193b      	adds	r3, r7, r4
 80021aa:	2100      	movs	r1, #0
 80021ac:	5e59      	ldrsh	r1, [r3, r1]
 80021ae:	1d38      	adds	r0, r7, #4
 80021b0:	2305      	movs	r3, #5
 80021b2:	9303      	str	r3, [sp, #12]
 80021b4:	2305      	movs	r3, #5
 80021b6:	9302      	str	r3, [sp, #8]
 80021b8:	197b      	adds	r3, r7, r5
 80021ba:	881b      	ldrh	r3, [r3, #0]
 80021bc:	9301      	str	r3, [sp, #4]
 80021be:	197b      	adds	r3, r7, r5
 80021c0:	881b      	ldrh	r3, [r3, #0]
 80021c2:	9300      	str	r3, [sp, #0]
 80021c4:	2365      	movs	r3, #101	; 0x65
 80021c6:	2250      	movs	r2, #80	; 0x50
 80021c8:	f000 fe02 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 'x', displayColor, displayColor, 5, 5);
 80021cc:	193b      	adds	r3, r7, r4
 80021ce:	881a      	ldrh	r2, [r3, #0]
 80021d0:	19bb      	adds	r3, r7, r6
 80021d2:	881b      	ldrh	r3, [r3, #0]
 80021d4:	18d3      	adds	r3, r2, r3
 80021d6:	b29a      	uxth	r2, r3
 80021d8:	193b      	adds	r3, r7, r4
 80021da:	801a      	strh	r2, [r3, #0]
 80021dc:	193b      	adds	r3, r7, r4
 80021de:	2100      	movs	r1, #0
 80021e0:	5e59      	ldrsh	r1, [r3, r1]
 80021e2:	1d38      	adds	r0, r7, #4
 80021e4:	2305      	movs	r3, #5
 80021e6:	9303      	str	r3, [sp, #12]
 80021e8:	2305      	movs	r3, #5
 80021ea:	9302      	str	r3, [sp, #8]
 80021ec:	197b      	adds	r3, r7, r5
 80021ee:	881b      	ldrh	r3, [r3, #0]
 80021f0:	9301      	str	r3, [sp, #4]
 80021f2:	197b      	adds	r3, r7, r5
 80021f4:	881b      	ldrh	r3, [r3, #0]
 80021f6:	9300      	str	r3, [sp, #0]
 80021f8:	2378      	movs	r3, #120	; 0x78
 80021fa:	2250      	movs	r2, #80	; 0x50
 80021fc:	f000 fde8 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, ' ', displayColor, displayColor, 5, 5);
 8002200:	193b      	adds	r3, r7, r4
 8002202:	881a      	ldrh	r2, [r3, #0]
 8002204:	19bb      	adds	r3, r7, r6
 8002206:	881b      	ldrh	r3, [r3, #0]
 8002208:	18d3      	adds	r3, r2, r3
 800220a:	b29a      	uxth	r2, r3
 800220c:	193b      	adds	r3, r7, r4
 800220e:	801a      	strh	r2, [r3, #0]
 8002210:	193b      	adds	r3, r7, r4
 8002212:	2100      	movs	r1, #0
 8002214:	5e59      	ldrsh	r1, [r3, r1]
 8002216:	1d38      	adds	r0, r7, #4
 8002218:	2305      	movs	r3, #5
 800221a:	9303      	str	r3, [sp, #12]
 800221c:	2305      	movs	r3, #5
 800221e:	9302      	str	r3, [sp, #8]
 8002220:	197b      	adds	r3, r7, r5
 8002222:	881b      	ldrh	r3, [r3, #0]
 8002224:	9301      	str	r3, [sp, #4]
 8002226:	197b      	adds	r3, r7, r5
 8002228:	881b      	ldrh	r3, [r3, #0]
 800222a:	9300      	str	r3, [sp, #0]
 800222c:	2320      	movs	r3, #32
 800222e:	2250      	movs	r2, #80	; 0x50
 8002230:	f000 fdce 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 'i', displayColor, displayColor, 5, 5);
 8002234:	193b      	adds	r3, r7, r4
 8002236:	881a      	ldrh	r2, [r3, #0]
 8002238:	19bb      	adds	r3, r7, r6
 800223a:	881b      	ldrh	r3, [r3, #0]
 800223c:	18d3      	adds	r3, r2, r3
 800223e:	b29a      	uxth	r2, r3
 8002240:	193b      	adds	r3, r7, r4
 8002242:	801a      	strh	r2, [r3, #0]
 8002244:	193b      	adds	r3, r7, r4
 8002246:	2100      	movs	r1, #0
 8002248:	5e59      	ldrsh	r1, [r3, r1]
 800224a:	1d38      	adds	r0, r7, #4
 800224c:	2305      	movs	r3, #5
 800224e:	9303      	str	r3, [sp, #12]
 8002250:	2305      	movs	r3, #5
 8002252:	9302      	str	r3, [sp, #8]
 8002254:	197b      	adds	r3, r7, r5
 8002256:	881b      	ldrh	r3, [r3, #0]
 8002258:	9301      	str	r3, [sp, #4]
 800225a:	197b      	adds	r3, r7, r5
 800225c:	881b      	ldrh	r3, [r3, #0]
 800225e:	9300      	str	r3, [sp, #0]
 8002260:	2369      	movs	r3, #105	; 0x69
 8002262:	2250      	movs	r2, #80	; 0x50
 8002264:	f000 fdb4 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, TFT_GFX::TFT_HEIGHT/4.0, 's', displayColor, displayColor, 5, 5);
 8002268:	193b      	adds	r3, r7, r4
 800226a:	881a      	ldrh	r2, [r3, #0]
 800226c:	19bb      	adds	r3, r7, r6
 800226e:	881b      	ldrh	r3, [r3, #0]
 8002270:	18d3      	adds	r3, r2, r3
 8002272:	b29a      	uxth	r2, r3
 8002274:	193b      	adds	r3, r7, r4
 8002276:	801a      	strh	r2, [r3, #0]
 8002278:	193b      	adds	r3, r7, r4
 800227a:	2100      	movs	r1, #0
 800227c:	5e59      	ldrsh	r1, [r3, r1]
 800227e:	1d38      	adds	r0, r7, #4
 8002280:	2305      	movs	r3, #5
 8002282:	9303      	str	r3, [sp, #12]
 8002284:	2305      	movs	r3, #5
 8002286:	9302      	str	r3, [sp, #8]
 8002288:	197b      	adds	r3, r7, r5
 800228a:	881b      	ldrh	r3, [r3, #0]
 800228c:	9301      	str	r3, [sp, #4]
 800228e:	197b      	adds	r3, r7, r5
 8002290:	881b      	ldrh	r3, [r3, #0]
 8002292:	9300      	str	r3, [sp, #0]
 8002294:	2373      	movs	r3, #115	; 0x73
 8002296:	2250      	movs	r2, #80	; 0x50
 8002298:	f000 fd9a 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  x_inc = 60;
 800229c:	19bb      	adds	r3, r7, r6
 800229e:	223c      	movs	r2, #60	; 0x3c
 80022a0:	801a      	strh	r2, [r3, #0]
  init_x = -20;
 80022a2:	193b      	adds	r3, r7, r4
 80022a4:	2214      	movs	r2, #20
 80022a6:	4252      	negs	r2, r2
 80022a8:	801a      	strh	r2, [r3, #0]
  tftDisplay.drawChar(init_x += x_inc, 2*(TFT_GFX::TFT_HEIGHT/4.0), 'G', displayColor, displayColor, 10, 10);
 80022aa:	193b      	adds	r3, r7, r4
 80022ac:	881a      	ldrh	r2, [r3, #0]
 80022ae:	19bb      	adds	r3, r7, r6
 80022b0:	881b      	ldrh	r3, [r3, #0]
 80022b2:	18d3      	adds	r3, r2, r3
 80022b4:	b29a      	uxth	r2, r3
 80022b6:	193b      	adds	r3, r7, r4
 80022b8:	801a      	strh	r2, [r3, #0]
 80022ba:	193b      	adds	r3, r7, r4
 80022bc:	2100      	movs	r1, #0
 80022be:	5e59      	ldrsh	r1, [r3, r1]
 80022c0:	1d38      	adds	r0, r7, #4
 80022c2:	230a      	movs	r3, #10
 80022c4:	9303      	str	r3, [sp, #12]
 80022c6:	230a      	movs	r3, #10
 80022c8:	9302      	str	r3, [sp, #8]
 80022ca:	197b      	adds	r3, r7, r5
 80022cc:	881b      	ldrh	r3, [r3, #0]
 80022ce:	9301      	str	r3, [sp, #4]
 80022d0:	197b      	adds	r3, r7, r5
 80022d2:	881b      	ldrh	r3, [r3, #0]
 80022d4:	9300      	str	r3, [sp, #0]
 80022d6:	2347      	movs	r3, #71	; 0x47
 80022d8:	22a0      	movs	r2, #160	; 0xa0
 80022da:	f000 fd79 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, 2*(TFT_GFX::TFT_HEIGHT/4.0), 'A', displayColor, displayColor, 10, 10);
 80022de:	193b      	adds	r3, r7, r4
 80022e0:	881a      	ldrh	r2, [r3, #0]
 80022e2:	19bb      	adds	r3, r7, r6
 80022e4:	881b      	ldrh	r3, [r3, #0]
 80022e6:	18d3      	adds	r3, r2, r3
 80022e8:	b29a      	uxth	r2, r3
 80022ea:	193b      	adds	r3, r7, r4
 80022ec:	801a      	strh	r2, [r3, #0]
 80022ee:	193b      	adds	r3, r7, r4
 80022f0:	2100      	movs	r1, #0
 80022f2:	5e59      	ldrsh	r1, [r3, r1]
 80022f4:	1d38      	adds	r0, r7, #4
 80022f6:	230a      	movs	r3, #10
 80022f8:	9303      	str	r3, [sp, #12]
 80022fa:	230a      	movs	r3, #10
 80022fc:	9302      	str	r3, [sp, #8]
 80022fe:	197b      	adds	r3, r7, r5
 8002300:	881b      	ldrh	r3, [r3, #0]
 8002302:	9301      	str	r3, [sp, #4]
 8002304:	197b      	adds	r3, r7, r5
 8002306:	881b      	ldrh	r3, [r3, #0]
 8002308:	9300      	str	r3, [sp, #0]
 800230a:	2341      	movs	r3, #65	; 0x41
 800230c:	22a0      	movs	r2, #160	; 0xa0
 800230e:	f000 fd5f 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  tftDisplay.drawChar(init_x += x_inc, 2*(TFT_GFX::TFT_HEIGHT/4.0), 'Y', displayColor, displayColor, 10, 10);
 8002312:	193b      	adds	r3, r7, r4
 8002314:	881a      	ldrh	r2, [r3, #0]
 8002316:	19bb      	adds	r3, r7, r6
 8002318:	881b      	ldrh	r3, [r3, #0]
 800231a:	18d3      	adds	r3, r2, r3
 800231c:	b29a      	uxth	r2, r3
 800231e:	193b      	adds	r3, r7, r4
 8002320:	801a      	strh	r2, [r3, #0]
 8002322:	193b      	adds	r3, r7, r4
 8002324:	2100      	movs	r1, #0
 8002326:	5e59      	ldrsh	r1, [r3, r1]
 8002328:	1d38      	adds	r0, r7, #4
 800232a:	230a      	movs	r3, #10
 800232c:	9303      	str	r3, [sp, #12]
 800232e:	230a      	movs	r3, #10
 8002330:	9302      	str	r3, [sp, #8]
 8002332:	197b      	adds	r3, r7, r5
 8002334:	881b      	ldrh	r3, [r3, #0]
 8002336:	9301      	str	r3, [sp, #4]
 8002338:	197b      	adds	r3, r7, r5
 800233a:	881b      	ldrh	r3, [r3, #0]
 800233c:	9300      	str	r3, [sp, #0]
 800233e:	2359      	movs	r3, #89	; 0x59
 8002340:	22a0      	movs	r2, #160	; 0xa0
 8002342:	f000 fd45 	bl	8002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8002346:	e7fe      	b.n	8002346 <main+0x276>
 8002348:	20000020 	.word	0x20000020
 800234c:	00008a22 	.word	0x00008a22
 8002350:	ffffafe5 	.word	0xffffafe5

08002354 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002354:	b590      	push	{r4, r7, lr}
 8002356:	b099      	sub	sp, #100	; 0x64
 8002358:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800235a:	242c      	movs	r4, #44	; 0x2c
 800235c:	193b      	adds	r3, r7, r4
 800235e:	0018      	movs	r0, r3
 8002360:	2334      	movs	r3, #52	; 0x34
 8002362:	001a      	movs	r2, r3
 8002364:	2100      	movs	r1, #0
 8002366:	f001 f9bd 	bl	80036e4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800236a:	231c      	movs	r3, #28
 800236c:	18fb      	adds	r3, r7, r3
 800236e:	0018      	movs	r0, r3
 8002370:	2310      	movs	r3, #16
 8002372:	001a      	movs	r2, r3
 8002374:	2100      	movs	r1, #0
 8002376:	f001 f9b5 	bl	80036e4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800237a:	003b      	movs	r3, r7
 800237c:	0018      	movs	r0, r3
 800237e:	231c      	movs	r3, #28
 8002380:	001a      	movs	r2, r3
 8002382:	2100      	movs	r1, #0
 8002384:	f001 f9ae 	bl	80036e4 <memset>

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48;
 8002388:	193b      	adds	r3, r7, r4
 800238a:	2220      	movs	r2, #32
 800238c:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 800238e:	193b      	adds	r3, r7, r4
 8002390:	2201      	movs	r2, #1
 8002392:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8002394:	193b      	adds	r3, r7, r4
 8002396:	2200      	movs	r2, #0
 8002398:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800239a:	193b      	adds	r3, r7, r4
 800239c:	0018      	movs	r0, r3
 800239e:	f7fe f9f1 	bl	8000784 <HAL_RCC_OscConfig>
 80023a2:	0003      	movs	r3, r0
 80023a4:	1e5a      	subs	r2, r3, #1
 80023a6:	4193      	sbcs	r3, r2
 80023a8:	b2db      	uxtb	r3, r3
 80023aa:	2b00      	cmp	r3, #0
 80023ac:	d001      	beq.n	80023b2 <_Z18SystemClock_Configv+0x5e>
  {
    Error_Handler();
 80023ae:	f000 f955 	bl	800265c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023b2:	211c      	movs	r1, #28
 80023b4:	187b      	adds	r3, r7, r1
 80023b6:	2207      	movs	r2, #7
 80023b8:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 80023ba:	187b      	adds	r3, r7, r1
 80023bc:	2203      	movs	r2, #3
 80023be:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80023c0:	187b      	adds	r3, r7, r1
 80023c2:	2200      	movs	r2, #0
 80023c4:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80023c6:	187b      	adds	r3, r7, r1
 80023c8:	2200      	movs	r2, #0
 80023ca:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80023cc:	187b      	adds	r3, r7, r1
 80023ce:	2101      	movs	r1, #1
 80023d0:	0018      	movs	r0, r3
 80023d2:	f7fe fd37 	bl	8000e44 <HAL_RCC_ClockConfig>
 80023d6:	0003      	movs	r3, r0
 80023d8:	1e5a      	subs	r2, r3, #1
 80023da:	4193      	sbcs	r3, r2
 80023dc:	b2db      	uxtb	r3, r3
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d001      	beq.n	80023e6 <_Z18SystemClock_Configv+0x92>
  {
    Error_Handler();
 80023e2:	f000 f93b 	bl	800265c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 80023e6:	003b      	movs	r3, r7
 80023e8:	2202      	movs	r2, #2
 80023ea:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 80023ec:	003b      	movs	r3, r7
 80023ee:	2200      	movs	r2, #0
 80023f0:	60da      	str	r2, [r3, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80023f2:	003b      	movs	r3, r7
 80023f4:	0018      	movs	r0, r3
 80023f6:	f7fe fecd 	bl	8001194 <HAL_RCCEx_PeriphCLKConfig>
 80023fa:	0003      	movs	r3, r0
 80023fc:	1e5a      	subs	r2, r3, #1
 80023fe:	4193      	sbcs	r3, r2
 8002400:	b2db      	uxtb	r3, r3
 8002402:	2b00      	cmp	r3, #0
 8002404:	d001      	beq.n	800240a <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 8002406:	f000 f929 	bl	800265c <Error_Handler>
  }
}
 800240a:	46c0      	nop			; (mov r8, r8)
 800240c:	46bd      	mov	sp, r7
 800240e:	b019      	add	sp, #100	; 0x64
 8002410:	bd90      	pop	{r4, r7, pc}
	...

08002414 <_ZL12MX_SPI2_Initv>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	b082      	sub	sp, #8
 8002418:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 800241a:	4b28      	ldr	r3, [pc, #160]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800241c:	4a28      	ldr	r2, [pc, #160]	; (80024c0 <_ZL12MX_SPI2_Initv+0xac>)
 800241e:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8002420:	4b26      	ldr	r3, [pc, #152]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002422:	2282      	movs	r2, #130	; 0x82
 8002424:	0052      	lsls	r2, r2, #1
 8002426:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8002428:	4b24      	ldr	r3, [pc, #144]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800242a:	2200      	movs	r2, #0
 800242c:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800242e:	4b23      	ldr	r3, [pc, #140]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002430:	22e0      	movs	r2, #224	; 0xe0
 8002432:	00d2      	lsls	r2, r2, #3
 8002434:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8002436:	4b21      	ldr	r3, [pc, #132]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002438:	2202      	movs	r2, #2
 800243a:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 800243c:	4b1f      	ldr	r3, [pc, #124]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800243e:	2201      	movs	r2, #1
 8002440:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8002442:	4b1e      	ldr	r3, [pc, #120]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002444:	2280      	movs	r2, #128	; 0x80
 8002446:	0092      	lsls	r2, r2, #2
 8002448:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 800244a:	4b1c      	ldr	r3, [pc, #112]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800244c:	2210      	movs	r2, #16
 800244e:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002450:	4b1a      	ldr	r3, [pc, #104]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002452:	2200      	movs	r2, #0
 8002454:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8002456:	4b19      	ldr	r3, [pc, #100]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002458:	2200      	movs	r2, #0
 800245a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800245c:	4b17      	ldr	r3, [pc, #92]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800245e:	2200      	movs	r2, #0
 8002460:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 8002462:	4b16      	ldr	r3, [pc, #88]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002464:	2207      	movs	r2, #7
 8002466:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002468:	4b14      	ldr	r3, [pc, #80]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800246a:	2200      	movs	r2, #0
 800246c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 800246e:	4b13      	ldr	r3, [pc, #76]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002470:	2200      	movs	r2, #0
 8002472:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8002474:	4b11      	ldr	r3, [pc, #68]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 8002476:	0018      	movs	r0, r3
 8002478:	f7fe ff8c 	bl	8001394 <HAL_SPI_Init>
 800247c:	0003      	movs	r3, r0
 800247e:	1e5a      	subs	r2, r3, #1
 8002480:	4193      	sbcs	r3, r2
 8002482:	b2db      	uxtb	r3, r3
 8002484:	2b00      	cmp	r3, #0
 8002486:	d001      	beq.n	800248c <_ZL12MX_SPI2_Initv+0x78>
  {
    Error_Handler();
 8002488:	f000 f8e8 	bl	800265c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */
  //Send 1 random byte to reset the sck
  uint8_t temp = 0;
 800248c:	1dfb      	adds	r3, r7, #7
 800248e:	2200      	movs	r2, #0
 8002490:	701a      	strb	r2, [r3, #0]
  HAL_SPI_Transmit(&hspi2, &temp, sizeof(temp), HAL_MAX_DELAY);
 8002492:	2301      	movs	r3, #1
 8002494:	425b      	negs	r3, r3
 8002496:	1df9      	adds	r1, r7, #7
 8002498:	4808      	ldr	r0, [pc, #32]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 800249a:	2201      	movs	r2, #1
 800249c:	f7ff f814 	bl	80014c8 <HAL_SPI_Transmit>
  resetTftBoard();
 80024a0:	f001 f8b7 	bl	8003612 <resetTftBoard>
  pullCSLow();
 80024a4:	f000 fe76 	bl	8003194 <pullCSLow>
  ili9341_hspi_init(hspi2.Instance);
 80024a8:	4b04      	ldr	r3, [pc, #16]	; (80024bc <_ZL12MX_SPI2_Initv+0xa8>)
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	0018      	movs	r0, r3
 80024ae:	f000 fee5 	bl	800327c <ili9341_hspi_init>
  /* USER CODE END SPI2_Init 2 */

}
 80024b2:	46c0      	nop			; (mov r8, r8)
 80024b4:	46bd      	mov	sp, r7
 80024b6:	b002      	add	sp, #8
 80024b8:	bd80      	pop	{r7, pc}
 80024ba:	46c0      	nop			; (mov r8, r8)
 80024bc:	20000020 	.word	0x20000020
 80024c0:	40003800 	.word	0x40003800

080024c4 <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80024c4:	b580      	push	{r7, lr}
 80024c6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80024c8:	4b16      	ldr	r3, [pc, #88]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024ca:	4a17      	ldr	r2, [pc, #92]	; (8002528 <_ZL19MX_USART2_UART_Initv+0x64>)
 80024cc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 38400;
 80024ce:	4b15      	ldr	r3, [pc, #84]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024d0:	2296      	movs	r2, #150	; 0x96
 80024d2:	0212      	lsls	r2, r2, #8
 80024d4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80024d6:	4b13      	ldr	r3, [pc, #76]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024d8:	2200      	movs	r2, #0
 80024da:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80024dc:	4b11      	ldr	r3, [pc, #68]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024de:	2200      	movs	r2, #0
 80024e0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80024e2:	4b10      	ldr	r3, [pc, #64]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80024e8:	4b0e      	ldr	r3, [pc, #56]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024ea:	220c      	movs	r2, #12
 80024ec:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80024ee:	4b0d      	ldr	r3, [pc, #52]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024f0:	2200      	movs	r2, #0
 80024f2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80024f4:	4b0b      	ldr	r3, [pc, #44]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024f6:	2200      	movs	r2, #0
 80024f8:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80024fa:	4b0a      	ldr	r3, [pc, #40]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 80024fc:	2200      	movs	r2, #0
 80024fe:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002500:	4b08      	ldr	r3, [pc, #32]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002502:	2200      	movs	r2, #0
 8002504:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002506:	4b07      	ldr	r3, [pc, #28]	; (8002524 <_ZL19MX_USART2_UART_Initv+0x60>)
 8002508:	0018      	movs	r0, r3
 800250a:	f7ff fa75 	bl	80019f8 <HAL_UART_Init>
 800250e:	0003      	movs	r3, r0
 8002510:	1e5a      	subs	r2, r3, #1
 8002512:	4193      	sbcs	r3, r2
 8002514:	b2db      	uxtb	r3, r3
 8002516:	2b00      	cmp	r3, #0
 8002518:	d001      	beq.n	800251e <_ZL19MX_USART2_UART_Initv+0x5a>
  {
    Error_Handler();
 800251a:	f000 f89f 	bl	800265c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800251e:	46c0      	nop			; (mov r8, r8)
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}
 8002524:	20000084 	.word	0x20000084
 8002528:	40004400 	.word	0x40004400

0800252c <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800252c:	b590      	push	{r4, r7, lr}
 800252e:	b08b      	sub	sp, #44	; 0x2c
 8002530:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002532:	2414      	movs	r4, #20
 8002534:	193b      	adds	r3, r7, r4
 8002536:	0018      	movs	r0, r3
 8002538:	2314      	movs	r3, #20
 800253a:	001a      	movs	r2, r3
 800253c:	2100      	movs	r1, #0
 800253e:	f001 f8d1 	bl	80036e4 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002542:	4b43      	ldr	r3, [pc, #268]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002544:	695a      	ldr	r2, [r3, #20]
 8002546:	4b42      	ldr	r3, [pc, #264]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002548:	2180      	movs	r1, #128	; 0x80
 800254a:	0309      	lsls	r1, r1, #12
 800254c:	430a      	orrs	r2, r1
 800254e:	615a      	str	r2, [r3, #20]
 8002550:	4b3f      	ldr	r3, [pc, #252]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002552:	695a      	ldr	r2, [r3, #20]
 8002554:	2380      	movs	r3, #128	; 0x80
 8002556:	031b      	lsls	r3, r3, #12
 8002558:	4013      	ands	r3, r2
 800255a:	613b      	str	r3, [r7, #16]
 800255c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800255e:	4b3c      	ldr	r3, [pc, #240]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002560:	695a      	ldr	r2, [r3, #20]
 8002562:	4b3b      	ldr	r3, [pc, #236]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002564:	2180      	movs	r1, #128	; 0x80
 8002566:	03c9      	lsls	r1, r1, #15
 8002568:	430a      	orrs	r2, r1
 800256a:	615a      	str	r2, [r3, #20]
 800256c:	4b38      	ldr	r3, [pc, #224]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 800256e:	695a      	ldr	r2, [r3, #20]
 8002570:	2380      	movs	r3, #128	; 0x80
 8002572:	03db      	lsls	r3, r3, #15
 8002574:	4013      	ands	r3, r2
 8002576:	60fb      	str	r3, [r7, #12]
 8002578:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800257a:	4b35      	ldr	r3, [pc, #212]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 800257c:	695a      	ldr	r2, [r3, #20]
 800257e:	4b34      	ldr	r3, [pc, #208]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002580:	2180      	movs	r1, #128	; 0x80
 8002582:	0289      	lsls	r1, r1, #10
 8002584:	430a      	orrs	r2, r1
 8002586:	615a      	str	r2, [r3, #20]
 8002588:	4b31      	ldr	r3, [pc, #196]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 800258a:	695a      	ldr	r2, [r3, #20]
 800258c:	2380      	movs	r3, #128	; 0x80
 800258e:	029b      	lsls	r3, r3, #10
 8002590:	4013      	ands	r3, r2
 8002592:	60bb      	str	r3, [r7, #8]
 8002594:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002596:	4b2e      	ldr	r3, [pc, #184]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 8002598:	695a      	ldr	r2, [r3, #20]
 800259a:	4b2d      	ldr	r3, [pc, #180]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 800259c:	2180      	movs	r1, #128	; 0x80
 800259e:	02c9      	lsls	r1, r1, #11
 80025a0:	430a      	orrs	r2, r1
 80025a2:	615a      	str	r2, [r3, #20]
 80025a4:	4b2a      	ldr	r3, [pc, #168]	; (8002650 <_ZL12MX_GPIO_Initv+0x124>)
 80025a6:	695a      	ldr	r2, [r3, #20]
 80025a8:	2380      	movs	r3, #128	; 0x80
 80025aa:	02db      	lsls	r3, r3, #11
 80025ac:	4013      	ands	r3, r2
 80025ae:	607b      	str	r3, [r7, #4]
 80025b0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TFT_D_C_GPIO_Port, TFT_D_C_Pin, GPIO_PIN_RESET);
 80025b2:	4b28      	ldr	r3, [pc, #160]	; (8002654 <_ZL12MX_GPIO_Initv+0x128>)
 80025b4:	2200      	movs	r2, #0
 80025b6:	2101      	movs	r1, #1
 80025b8:	0018      	movs	r0, r3
 80025ba:	f7fe f8c5 	bl	8000748 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);
 80025be:	4b25      	ldr	r3, [pc, #148]	; (8002654 <_ZL12MX_GPIO_Initv+0x128>)
 80025c0:	2201      	movs	r2, #1
 80025c2:	2102      	movs	r1, #2
 80025c4:	0018      	movs	r0, r3
 80025c6:	f7fe f8bf 	bl	8000748 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TFT_RST_Pin|LD2_Pin, GPIO_PIN_RESET);
 80025ca:	2390      	movs	r3, #144	; 0x90
 80025cc:	05db      	lsls	r3, r3, #23
 80025ce:	2200      	movs	r2, #0
 80025d0:	2121      	movs	r1, #33	; 0x21
 80025d2:	0018      	movs	r0, r3
 80025d4:	f7fe f8b8 	bl	8000748 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80025d8:	193b      	adds	r3, r7, r4
 80025da:	2280      	movs	r2, #128	; 0x80
 80025dc:	0192      	lsls	r2, r2, #6
 80025de:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80025e0:	193b      	adds	r3, r7, r4
 80025e2:	4a1d      	ldr	r2, [pc, #116]	; (8002658 <_ZL12MX_GPIO_Initv+0x12c>)
 80025e4:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025e6:	193b      	adds	r3, r7, r4
 80025e8:	2200      	movs	r2, #0
 80025ea:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80025ec:	193b      	adds	r3, r7, r4
 80025ee:	4a19      	ldr	r2, [pc, #100]	; (8002654 <_ZL12MX_GPIO_Initv+0x128>)
 80025f0:	0019      	movs	r1, r3
 80025f2:	0010      	movs	r0, r2
 80025f4:	f7fd ff2c 	bl	8000450 <HAL_GPIO_Init>

  /*Configure GPIO pins : TFT_D_C_Pin SPI2_NSS_Pin */
  GPIO_InitStruct.Pin = TFT_D_C_Pin|SPI2_NSS_Pin;
 80025f8:	0021      	movs	r1, r4
 80025fa:	187b      	adds	r3, r7, r1
 80025fc:	2203      	movs	r2, #3
 80025fe:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002600:	187b      	adds	r3, r7, r1
 8002602:	2201      	movs	r2, #1
 8002604:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002606:	187b      	adds	r3, r7, r1
 8002608:	2200      	movs	r2, #0
 800260a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800260c:	187b      	adds	r3, r7, r1
 800260e:	2203      	movs	r2, #3
 8002610:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002612:	000c      	movs	r4, r1
 8002614:	187b      	adds	r3, r7, r1
 8002616:	4a0f      	ldr	r2, [pc, #60]	; (8002654 <_ZL12MX_GPIO_Initv+0x128>)
 8002618:	0019      	movs	r1, r3
 800261a:	0010      	movs	r0, r2
 800261c:	f7fd ff18 	bl	8000450 <HAL_GPIO_Init>

  /*Configure GPIO pins : TFT_RST_Pin LD2_Pin */
  GPIO_InitStruct.Pin = TFT_RST_Pin|LD2_Pin;
 8002620:	0021      	movs	r1, r4
 8002622:	187b      	adds	r3, r7, r1
 8002624:	2221      	movs	r2, #33	; 0x21
 8002626:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002628:	187b      	adds	r3, r7, r1
 800262a:	2201      	movs	r2, #1
 800262c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800262e:	187b      	adds	r3, r7, r1
 8002630:	2200      	movs	r2, #0
 8002632:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002634:	187b      	adds	r3, r7, r1
 8002636:	2200      	movs	r2, #0
 8002638:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800263a:	187a      	adds	r2, r7, r1
 800263c:	2390      	movs	r3, #144	; 0x90
 800263e:	05db      	lsls	r3, r3, #23
 8002640:	0011      	movs	r1, r2
 8002642:	0018      	movs	r0, r3
 8002644:	f7fd ff04 	bl	8000450 <HAL_GPIO_Init>

}
 8002648:	46c0      	nop			; (mov r8, r8)
 800264a:	46bd      	mov	sp, r7
 800264c:	b00b      	add	sp, #44	; 0x2c
 800264e:	bd90      	pop	{r4, r7, pc}
 8002650:	40021000 	.word	0x40021000
 8002654:	48000800 	.word	0x48000800
 8002658:	10210000 	.word	0x10210000

0800265c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800265c:	b580      	push	{r7, lr}
 800265e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002660:	46c0      	nop			; (mov r8, r8)
 8002662:	46bd      	mov	sp, r7
 8002664:	bd80      	pop	{r7, pc}
	...

08002668 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002668:	b580      	push	{r7, lr}
 800266a:	b082      	sub	sp, #8
 800266c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800266e:	4b0f      	ldr	r3, [pc, #60]	; (80026ac <HAL_MspInit+0x44>)
 8002670:	699a      	ldr	r2, [r3, #24]
 8002672:	4b0e      	ldr	r3, [pc, #56]	; (80026ac <HAL_MspInit+0x44>)
 8002674:	2101      	movs	r1, #1
 8002676:	430a      	orrs	r2, r1
 8002678:	619a      	str	r2, [r3, #24]
 800267a:	4b0c      	ldr	r3, [pc, #48]	; (80026ac <HAL_MspInit+0x44>)
 800267c:	699b      	ldr	r3, [r3, #24]
 800267e:	2201      	movs	r2, #1
 8002680:	4013      	ands	r3, r2
 8002682:	607b      	str	r3, [r7, #4]
 8002684:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002686:	4b09      	ldr	r3, [pc, #36]	; (80026ac <HAL_MspInit+0x44>)
 8002688:	69da      	ldr	r2, [r3, #28]
 800268a:	4b08      	ldr	r3, [pc, #32]	; (80026ac <HAL_MspInit+0x44>)
 800268c:	2180      	movs	r1, #128	; 0x80
 800268e:	0549      	lsls	r1, r1, #21
 8002690:	430a      	orrs	r2, r1
 8002692:	61da      	str	r2, [r3, #28]
 8002694:	4b05      	ldr	r3, [pc, #20]	; (80026ac <HAL_MspInit+0x44>)
 8002696:	69da      	ldr	r2, [r3, #28]
 8002698:	2380      	movs	r3, #128	; 0x80
 800269a:	055b      	lsls	r3, r3, #21
 800269c:	4013      	ands	r3, r2
 800269e:	603b      	str	r3, [r7, #0]
 80026a0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80026a2:	46c0      	nop			; (mov r8, r8)
 80026a4:	46bd      	mov	sp, r7
 80026a6:	b002      	add	sp, #8
 80026a8:	bd80      	pop	{r7, pc}
 80026aa:	46c0      	nop			; (mov r8, r8)
 80026ac:	40021000 	.word	0x40021000

080026b0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80026b0:	b590      	push	{r4, r7, lr}
 80026b2:	b08b      	sub	sp, #44	; 0x2c
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026b8:	2314      	movs	r3, #20
 80026ba:	18fb      	adds	r3, r7, r3
 80026bc:	0018      	movs	r0, r3
 80026be:	2314      	movs	r3, #20
 80026c0:	001a      	movs	r2, r3
 80026c2:	2100      	movs	r1, #0
 80026c4:	f001 f80e 	bl	80036e4 <memset>
  if(hspi->Instance==SPI2)
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	4a2f      	ldr	r2, [pc, #188]	; (800278c <HAL_SPI_MspInit+0xdc>)
 80026ce:	4293      	cmp	r3, r2
 80026d0:	d157      	bne.n	8002782 <HAL_SPI_MspInit+0xd2>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 80026d2:	4b2f      	ldr	r3, [pc, #188]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026d4:	69da      	ldr	r2, [r3, #28]
 80026d6:	4b2e      	ldr	r3, [pc, #184]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026d8:	2180      	movs	r1, #128	; 0x80
 80026da:	01c9      	lsls	r1, r1, #7
 80026dc:	430a      	orrs	r2, r1
 80026de:	61da      	str	r2, [r3, #28]
 80026e0:	4b2b      	ldr	r3, [pc, #172]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026e2:	69da      	ldr	r2, [r3, #28]
 80026e4:	2380      	movs	r3, #128	; 0x80
 80026e6:	01db      	lsls	r3, r3, #7
 80026e8:	4013      	ands	r3, r2
 80026ea:	613b      	str	r3, [r7, #16]
 80026ec:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80026ee:	4b28      	ldr	r3, [pc, #160]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026f0:	695a      	ldr	r2, [r3, #20]
 80026f2:	4b27      	ldr	r3, [pc, #156]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026f4:	2180      	movs	r1, #128	; 0x80
 80026f6:	0309      	lsls	r1, r1, #12
 80026f8:	430a      	orrs	r2, r1
 80026fa:	615a      	str	r2, [r3, #20]
 80026fc:	4b24      	ldr	r3, [pc, #144]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 80026fe:	695a      	ldr	r2, [r3, #20]
 8002700:	2380      	movs	r3, #128	; 0x80
 8002702:	031b      	lsls	r3, r3, #12
 8002704:	4013      	ands	r3, r2
 8002706:	60fb      	str	r3, [r7, #12]
 8002708:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800270a:	4b21      	ldr	r3, [pc, #132]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 800270c:	695a      	ldr	r2, [r3, #20]
 800270e:	4b20      	ldr	r3, [pc, #128]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 8002710:	2180      	movs	r1, #128	; 0x80
 8002712:	02c9      	lsls	r1, r1, #11
 8002714:	430a      	orrs	r2, r1
 8002716:	615a      	str	r2, [r3, #20]
 8002718:	4b1d      	ldr	r3, [pc, #116]	; (8002790 <HAL_SPI_MspInit+0xe0>)
 800271a:	695a      	ldr	r2, [r3, #20]
 800271c:	2380      	movs	r3, #128	; 0x80
 800271e:	02db      	lsls	r3, r3, #11
 8002720:	4013      	ands	r3, r2
 8002722:	60bb      	str	r3, [r7, #8]
 8002724:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration    
    PC2     ------> SPI2_MISO
    PC3     ------> SPI2_MOSI
    PB10     ------> SPI2_SCK 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8002726:	2114      	movs	r1, #20
 8002728:	187b      	adds	r3, r7, r1
 800272a:	220c      	movs	r2, #12
 800272c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800272e:	187b      	adds	r3, r7, r1
 8002730:	2202      	movs	r2, #2
 8002732:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002734:	187b      	adds	r3, r7, r1
 8002736:	2200      	movs	r2, #0
 8002738:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800273a:	187b      	adds	r3, r7, r1
 800273c:	2203      	movs	r2, #3
 800273e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_SPI2;
 8002740:	187b      	adds	r3, r7, r1
 8002742:	2201      	movs	r2, #1
 8002744:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002746:	000c      	movs	r4, r1
 8002748:	187b      	adds	r3, r7, r1
 800274a:	4a12      	ldr	r2, [pc, #72]	; (8002794 <HAL_SPI_MspInit+0xe4>)
 800274c:	0019      	movs	r1, r3
 800274e:	0010      	movs	r0, r2
 8002750:	f7fd fe7e 	bl	8000450 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002754:	0021      	movs	r1, r4
 8002756:	187b      	adds	r3, r7, r1
 8002758:	2280      	movs	r2, #128	; 0x80
 800275a:	00d2      	lsls	r2, r2, #3
 800275c:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800275e:	187b      	adds	r3, r7, r1
 8002760:	2202      	movs	r2, #2
 8002762:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002764:	187b      	adds	r3, r7, r1
 8002766:	2200      	movs	r2, #0
 8002768:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800276a:	187b      	adds	r3, r7, r1
 800276c:	2203      	movs	r2, #3
 800276e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002770:	187b      	adds	r3, r7, r1
 8002772:	2205      	movs	r2, #5
 8002774:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002776:	187b      	adds	r3, r7, r1
 8002778:	4a07      	ldr	r2, [pc, #28]	; (8002798 <HAL_SPI_MspInit+0xe8>)
 800277a:	0019      	movs	r1, r3
 800277c:	0010      	movs	r0, r2
 800277e:	f7fd fe67 	bl	8000450 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002782:	46c0      	nop			; (mov r8, r8)
 8002784:	46bd      	mov	sp, r7
 8002786:	b00b      	add	sp, #44	; 0x2c
 8002788:	bd90      	pop	{r4, r7, pc}
 800278a:	46c0      	nop			; (mov r8, r8)
 800278c:	40003800 	.word	0x40003800
 8002790:	40021000 	.word	0x40021000
 8002794:	48000800 	.word	0x48000800
 8002798:	48000400 	.word	0x48000400

0800279c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800279c:	b580      	push	{r7, lr}
 800279e:	b08a      	sub	sp, #40	; 0x28
 80027a0:	af00      	add	r7, sp, #0
 80027a2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027a4:	2314      	movs	r3, #20
 80027a6:	18fb      	adds	r3, r7, r3
 80027a8:	0018      	movs	r0, r3
 80027aa:	2314      	movs	r3, #20
 80027ac:	001a      	movs	r2, r3
 80027ae:	2100      	movs	r1, #0
 80027b0:	f000 ff98 	bl	80036e4 <memset>
  if(huart->Instance==USART2)
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	4a1c      	ldr	r2, [pc, #112]	; (800282c <HAL_UART_MspInit+0x90>)
 80027ba:	4293      	cmp	r3, r2
 80027bc:	d132      	bne.n	8002824 <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80027be:	4b1c      	ldr	r3, [pc, #112]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027c0:	69da      	ldr	r2, [r3, #28]
 80027c2:	4b1b      	ldr	r3, [pc, #108]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027c4:	2180      	movs	r1, #128	; 0x80
 80027c6:	0289      	lsls	r1, r1, #10
 80027c8:	430a      	orrs	r2, r1
 80027ca:	61da      	str	r2, [r3, #28]
 80027cc:	4b18      	ldr	r3, [pc, #96]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027ce:	69da      	ldr	r2, [r3, #28]
 80027d0:	2380      	movs	r3, #128	; 0x80
 80027d2:	029b      	lsls	r3, r3, #10
 80027d4:	4013      	ands	r3, r2
 80027d6:	613b      	str	r3, [r7, #16]
 80027d8:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027da:	4b15      	ldr	r3, [pc, #84]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027dc:	695a      	ldr	r2, [r3, #20]
 80027de:	4b14      	ldr	r3, [pc, #80]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027e0:	2180      	movs	r1, #128	; 0x80
 80027e2:	0289      	lsls	r1, r1, #10
 80027e4:	430a      	orrs	r2, r1
 80027e6:	615a      	str	r2, [r3, #20]
 80027e8:	4b11      	ldr	r3, [pc, #68]	; (8002830 <HAL_UART_MspInit+0x94>)
 80027ea:	695a      	ldr	r2, [r3, #20]
 80027ec:	2380      	movs	r3, #128	; 0x80
 80027ee:	029b      	lsls	r3, r3, #10
 80027f0:	4013      	ands	r3, r2
 80027f2:	60fb      	str	r3, [r7, #12]
 80027f4:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration    
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80027f6:	2114      	movs	r1, #20
 80027f8:	187b      	adds	r3, r7, r1
 80027fa:	220c      	movs	r2, #12
 80027fc:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027fe:	187b      	adds	r3, r7, r1
 8002800:	2202      	movs	r2, #2
 8002802:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002804:	187b      	adds	r3, r7, r1
 8002806:	2200      	movs	r2, #0
 8002808:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800280a:	187b      	adds	r3, r7, r1
 800280c:	2200      	movs	r2, #0
 800280e:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8002810:	187b      	adds	r3, r7, r1
 8002812:	2201      	movs	r2, #1
 8002814:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002816:	187a      	adds	r2, r7, r1
 8002818:	2390      	movs	r3, #144	; 0x90
 800281a:	05db      	lsls	r3, r3, #23
 800281c:	0011      	movs	r1, r2
 800281e:	0018      	movs	r0, r3
 8002820:	f7fd fe16 	bl	8000450 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002824:	46c0      	nop			; (mov r8, r8)
 8002826:	46bd      	mov	sp, r7
 8002828:	b00a      	add	sp, #40	; 0x28
 800282a:	bd80      	pop	{r7, pc}
 800282c:	40004400 	.word	0x40004400
 8002830:	40021000 	.word	0x40021000

08002834 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002834:	b580      	push	{r7, lr}
 8002836:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002838:	46c0      	nop			; (mov r8, r8)
 800283a:	46bd      	mov	sp, r7
 800283c:	bd80      	pop	{r7, pc}

0800283e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800283e:	b580      	push	{r7, lr}
 8002840:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002842:	e7fe      	b.n	8002842 <HardFault_Handler+0x4>

08002844 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002844:	b580      	push	{r7, lr}
 8002846:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002848:	46c0      	nop			; (mov r8, r8)
 800284a:	46bd      	mov	sp, r7
 800284c:	bd80      	pop	{r7, pc}

0800284e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800284e:	b580      	push	{r7, lr}
 8002850:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002852:	46c0      	nop			; (mov r8, r8)
 8002854:	46bd      	mov	sp, r7
 8002856:	bd80      	pop	{r7, pc}

08002858 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002858:	b580      	push	{r7, lr}
 800285a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800285c:	f7fd fd10 	bl	8000280 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002860:	46c0      	nop			; (mov r8, r8)
 8002862:	46bd      	mov	sp, r7
 8002864:	bd80      	pop	{r7, pc}
	...

08002868 <SystemInit>:
 8002868:	b580      	push	{r7, lr}
 800286a:	af00      	add	r7, sp, #0
 800286c:	4b1a      	ldr	r3, [pc, #104]	; (80028d8 <SystemInit+0x70>)
 800286e:	681a      	ldr	r2, [r3, #0]
 8002870:	4b19      	ldr	r3, [pc, #100]	; (80028d8 <SystemInit+0x70>)
 8002872:	2101      	movs	r1, #1
 8002874:	430a      	orrs	r2, r1
 8002876:	601a      	str	r2, [r3, #0]
 8002878:	4b17      	ldr	r3, [pc, #92]	; (80028d8 <SystemInit+0x70>)
 800287a:	685a      	ldr	r2, [r3, #4]
 800287c:	4b16      	ldr	r3, [pc, #88]	; (80028d8 <SystemInit+0x70>)
 800287e:	4917      	ldr	r1, [pc, #92]	; (80028dc <SystemInit+0x74>)
 8002880:	400a      	ands	r2, r1
 8002882:	605a      	str	r2, [r3, #4]
 8002884:	4b14      	ldr	r3, [pc, #80]	; (80028d8 <SystemInit+0x70>)
 8002886:	681a      	ldr	r2, [r3, #0]
 8002888:	4b13      	ldr	r3, [pc, #76]	; (80028d8 <SystemInit+0x70>)
 800288a:	4915      	ldr	r1, [pc, #84]	; (80028e0 <SystemInit+0x78>)
 800288c:	400a      	ands	r2, r1
 800288e:	601a      	str	r2, [r3, #0]
 8002890:	4b11      	ldr	r3, [pc, #68]	; (80028d8 <SystemInit+0x70>)
 8002892:	681a      	ldr	r2, [r3, #0]
 8002894:	4b10      	ldr	r3, [pc, #64]	; (80028d8 <SystemInit+0x70>)
 8002896:	4913      	ldr	r1, [pc, #76]	; (80028e4 <SystemInit+0x7c>)
 8002898:	400a      	ands	r2, r1
 800289a:	601a      	str	r2, [r3, #0]
 800289c:	4b0e      	ldr	r3, [pc, #56]	; (80028d8 <SystemInit+0x70>)
 800289e:	685a      	ldr	r2, [r3, #4]
 80028a0:	4b0d      	ldr	r3, [pc, #52]	; (80028d8 <SystemInit+0x70>)
 80028a2:	4911      	ldr	r1, [pc, #68]	; (80028e8 <SystemInit+0x80>)
 80028a4:	400a      	ands	r2, r1
 80028a6:	605a      	str	r2, [r3, #4]
 80028a8:	4b0b      	ldr	r3, [pc, #44]	; (80028d8 <SystemInit+0x70>)
 80028aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80028ac:	4b0a      	ldr	r3, [pc, #40]	; (80028d8 <SystemInit+0x70>)
 80028ae:	210f      	movs	r1, #15
 80028b0:	438a      	bics	r2, r1
 80028b2:	62da      	str	r2, [r3, #44]	; 0x2c
 80028b4:	4b08      	ldr	r3, [pc, #32]	; (80028d8 <SystemInit+0x70>)
 80028b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80028b8:	4b07      	ldr	r3, [pc, #28]	; (80028d8 <SystemInit+0x70>)
 80028ba:	490c      	ldr	r1, [pc, #48]	; (80028ec <SystemInit+0x84>)
 80028bc:	400a      	ands	r2, r1
 80028be:	631a      	str	r2, [r3, #48]	; 0x30
 80028c0:	4b05      	ldr	r3, [pc, #20]	; (80028d8 <SystemInit+0x70>)
 80028c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80028c4:	4b04      	ldr	r3, [pc, #16]	; (80028d8 <SystemInit+0x70>)
 80028c6:	2101      	movs	r1, #1
 80028c8:	438a      	bics	r2, r1
 80028ca:	635a      	str	r2, [r3, #52]	; 0x34
 80028cc:	4b02      	ldr	r3, [pc, #8]	; (80028d8 <SystemInit+0x70>)
 80028ce:	2200      	movs	r2, #0
 80028d0:	609a      	str	r2, [r3, #8]
 80028d2:	46c0      	nop			; (mov r8, r8)
 80028d4:	46bd      	mov	sp, r7
 80028d6:	bd80      	pop	{r7, pc}
 80028d8:	40021000 	.word	0x40021000
 80028dc:	08ffb80c 	.word	0x08ffb80c
 80028e0:	fef6ffff 	.word	0xfef6ffff
 80028e4:	fffbffff 	.word	0xfffbffff
 80028e8:	ffc0ffff 	.word	0xffc0ffff
 80028ec:	fffcfe2c 	.word	0xfffcfe2c

080028f0 <_ZN7TFT_GFXC1EP11SPI_TypeDef>:
//Public Function Prototypes

//Private Function Definitions

//Public Function Definitions
TFT_GFX::TFT_GFX(SPI_TypeDef *SPIx):
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b082      	sub	sp, #8
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	6078      	str	r0, [r7, #4]
 80028f8:	6039      	str	r1, [r7, #0]
spiInstance{SPIx}
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	683a      	ldr	r2, [r7, #0]
 80028fe:	601a      	str	r2, [r3, #0]
{}
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	0018      	movs	r0, r3
 8002904:	46bd      	mov	sp, r7
 8002906:	b002      	add	sp, #8
 8002908:	bd80      	pop	{r7, pc}

0800290a <_ZN7TFT_GFX13setAddrWindowEtttt>:

void TFT_GFX::setAddrWindow(uint16_t x1, uint16_t y1, uint16_t w, uint16_t h)
{
 800290a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800290c:	b087      	sub	sp, #28
 800290e:	af00      	add	r7, sp, #0
 8002910:	60f8      	str	r0, [r7, #12]
 8002912:	000c      	movs	r4, r1
 8002914:	0010      	movs	r0, r2
 8002916:	0019      	movs	r1, r3
 8002918:	250a      	movs	r5, #10
 800291a:	197b      	adds	r3, r7, r5
 800291c:	1c22      	adds	r2, r4, #0
 800291e:	801a      	strh	r2, [r3, #0]
 8002920:	2608      	movs	r6, #8
 8002922:	19bb      	adds	r3, r7, r6
 8002924:	1c02      	adds	r2, r0, #0
 8002926:	801a      	strh	r2, [r3, #0]
 8002928:	1dbb      	adds	r3, r7, #6
 800292a:	1c0a      	adds	r2, r1, #0
 800292c:	801a      	strh	r2, [r3, #0]
    uint16_t x2 = (x1 + w - 1);
 800292e:	002c      	movs	r4, r5
 8002930:	193a      	adds	r2, r7, r4
 8002932:	1dbb      	adds	r3, r7, #6
 8002934:	8812      	ldrh	r2, [r2, #0]
 8002936:	881b      	ldrh	r3, [r3, #0]
 8002938:	18d3      	adds	r3, r2, r3
 800293a:	b29a      	uxth	r2, r3
 800293c:	2316      	movs	r3, #22
 800293e:	18fb      	adds	r3, r7, r3
 8002940:	3a01      	subs	r2, #1
 8002942:	801a      	strh	r2, [r3, #0]
    uint16_t y2 = (y1 + h - 1);
 8002944:	0035      	movs	r5, r6
 8002946:	197b      	adds	r3, r7, r5
 8002948:	2228      	movs	r2, #40	; 0x28
 800294a:	2108      	movs	r1, #8
 800294c:	1879      	adds	r1, r7, r1
 800294e:	1889      	adds	r1, r1, r2
 8002950:	881a      	ldrh	r2, [r3, #0]
 8002952:	880b      	ldrh	r3, [r1, #0]
 8002954:	18d3      	adds	r3, r2, r3
 8002956:	b29a      	uxth	r2, r3
 8002958:	2614      	movs	r6, #20
 800295a:	19bb      	adds	r3, r7, r6
 800295c:	3a01      	subs	r2, #1
 800295e:	801a      	strh	r2, [r3, #0]
	// Set column range.
	hspi_cmd(this->spiInstance, 0x2A);
 8002960:	68fb      	ldr	r3, [r7, #12]
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	212a      	movs	r1, #42	; 0x2a
 8002966:	0018      	movs	r0, r3
 8002968:	f000 fc5c 	bl	8003224 <hspi_cmd>
	hspi_w16(this->spiInstance, x1);
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	681a      	ldr	r2, [r3, #0]
 8002970:	193b      	adds	r3, r7, r4
 8002972:	881b      	ldrh	r3, [r3, #0]
 8002974:	0019      	movs	r1, r3
 8002976:	0010      	movs	r0, r2
 8002978:	f000 fc30 	bl	80031dc <hspi_w16>
	hspi_w16(this->spiInstance, x2);
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	681a      	ldr	r2, [r3, #0]
 8002980:	2316      	movs	r3, #22
 8002982:	18fb      	adds	r3, r7, r3
 8002984:	881b      	ldrh	r3, [r3, #0]
 8002986:	0019      	movs	r1, r3
 8002988:	0010      	movs	r0, r2
 800298a:	f000 fc27 	bl	80031dc <hspi_w16>
	
	// Set row range.
	hspi_cmd(this->spiInstance, 0x2B);
 800298e:	68fb      	ldr	r3, [r7, #12]
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	212b      	movs	r1, #43	; 0x2b
 8002994:	0018      	movs	r0, r3
 8002996:	f000 fc45 	bl	8003224 <hspi_cmd>
	hspi_w16(this->spiInstance, y1);
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	681a      	ldr	r2, [r3, #0]
 800299e:	197b      	adds	r3, r7, r5
 80029a0:	881b      	ldrh	r3, [r3, #0]
 80029a2:	0019      	movs	r1, r3
 80029a4:	0010      	movs	r0, r2
 80029a6:	f000 fc19 	bl	80031dc <hspi_w16>
	hspi_w16(this->spiInstance, y2);
 80029aa:	68fb      	ldr	r3, [r7, #12]
 80029ac:	681a      	ldr	r2, [r3, #0]
 80029ae:	19bb      	adds	r3, r7, r6
 80029b0:	881b      	ldrh	r3, [r3, #0]
 80029b2:	0019      	movs	r1, r3
 80029b4:	0010      	movs	r0, r2
 80029b6:	f000 fc11 	bl	80031dc <hspi_w16>
	
	// Set 'write to RAM'
	hspi_cmd(this->spiInstance, 0x2C);
 80029ba:	68fb      	ldr	r3, [r7, #12]
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	212c      	movs	r1, #44	; 0x2c
 80029c0:	0018      	movs	r0, r3
 80029c2:	f000 fc2f 	bl	8003224 <hspi_cmd>
}
 80029c6:	46c0      	nop			; (mov r8, r8)
 80029c8:	46bd      	mov	sp, r7
 80029ca:	b007      	add	sp, #28
 80029cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080029ce <_ZN7TFT_GFX10writePixelEsst>:

void TFT_GFX::writePixel(int16_t x, int16_t y, uint16_t color) 
{
 80029ce:	b5b0      	push	{r4, r5, r7, lr}
 80029d0:	b086      	sub	sp, #24
 80029d2:	af02      	add	r7, sp, #8
 80029d4:	60f8      	str	r0, [r7, #12]
 80029d6:	000c      	movs	r4, r1
 80029d8:	0010      	movs	r0, r2
 80029da:	0019      	movs	r1, r3
 80029dc:	250a      	movs	r5, #10
 80029de:	197b      	adds	r3, r7, r5
 80029e0:	1c22      	adds	r2, r4, #0
 80029e2:	801a      	strh	r2, [r3, #0]
 80029e4:	2308      	movs	r3, #8
 80029e6:	18fb      	adds	r3, r7, r3
 80029e8:	1c02      	adds	r2, r0, #0
 80029ea:	801a      	strh	r2, [r3, #0]
 80029ec:	1dbb      	adds	r3, r7, #6
 80029ee:	1c0a      	adds	r2, r1, #0
 80029f0:	801a      	strh	r2, [r3, #0]
    if((x >= 0) && (x < TFT_WIDTH) && (y >= 0) && (y < TFT_HEIGHT)) 
 80029f2:	197b      	adds	r3, r7, r5
 80029f4:	2200      	movs	r2, #0
 80029f6:	5e9b      	ldrsh	r3, [r3, r2]
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	db27      	blt.n	8002a4c <_ZN7TFT_GFX10writePixelEsst+0x7e>
 80029fc:	230a      	movs	r3, #10
 80029fe:	18fb      	adds	r3, r7, r3
 8002a00:	2200      	movs	r2, #0
 8002a02:	5e9b      	ldrsh	r3, [r3, r2]
 8002a04:	2bef      	cmp	r3, #239	; 0xef
 8002a06:	dc21      	bgt.n	8002a4c <_ZN7TFT_GFX10writePixelEsst+0x7e>
 8002a08:	2308      	movs	r3, #8
 8002a0a:	18fb      	adds	r3, r7, r3
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	5e9b      	ldrsh	r3, [r3, r2]
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	db1b      	blt.n	8002a4c <_ZN7TFT_GFX10writePixelEsst+0x7e>
 8002a14:	2308      	movs	r3, #8
 8002a16:	18fb      	adds	r3, r7, r3
 8002a18:	2200      	movs	r2, #0
 8002a1a:	5e9a      	ldrsh	r2, [r3, r2]
 8002a1c:	2340      	movs	r3, #64	; 0x40
 8002a1e:	33ff      	adds	r3, #255	; 0xff
 8002a20:	429a      	cmp	r2, r3
 8002a22:	dc13      	bgt.n	8002a4c <_ZN7TFT_GFX10writePixelEsst+0x7e>
    {
        setAddrWindow(x, y, 1, 1);
 8002a24:	230a      	movs	r3, #10
 8002a26:	18fb      	adds	r3, r7, r3
 8002a28:	8819      	ldrh	r1, [r3, #0]
 8002a2a:	2308      	movs	r3, #8
 8002a2c:	18fb      	adds	r3, r7, r3
 8002a2e:	881a      	ldrh	r2, [r3, #0]
 8002a30:	68f8      	ldr	r0, [r7, #12]
 8002a32:	2301      	movs	r3, #1
 8002a34:	9300      	str	r3, [sp, #0]
 8002a36:	2301      	movs	r3, #1
 8002a38:	f7ff ff67 	bl	800290a <_ZN7TFT_GFX13setAddrWindowEtttt>
        hspi_w16(this->spiInstance, color);
 8002a3c:	68fb      	ldr	r3, [r7, #12]
 8002a3e:	681a      	ldr	r2, [r3, #0]
 8002a40:	1dbb      	adds	r3, r7, #6
 8002a42:	881b      	ldrh	r3, [r3, #0]
 8002a44:	0019      	movs	r1, r3
 8002a46:	0010      	movs	r0, r2
 8002a48:	f000 fbc8 	bl	80031dc <hspi_w16>
    }
}
 8002a4c:	46c0      	nop			; (mov r8, r8)
 8002a4e:	46bd      	mov	sp, r7
 8002a50:	b004      	add	sp, #16
 8002a52:	bdb0      	pop	{r4, r5, r7, pc}

08002a54 <_ZN7TFT_GFX13writeFillRectEsssst>:

void TFT_GFX::writeFillRect(int16_t x, int16_t y,
  int16_t w, int16_t h, uint16_t color) {
 8002a54:	b5b0      	push	{r4, r5, r7, lr}
 8002a56:	b088      	sub	sp, #32
 8002a58:	af02      	add	r7, sp, #8
 8002a5a:	60f8      	str	r0, [r7, #12]
 8002a5c:	000c      	movs	r4, r1
 8002a5e:	0010      	movs	r0, r2
 8002a60:	0019      	movs	r1, r3
 8002a62:	230a      	movs	r3, #10
 8002a64:	18fb      	adds	r3, r7, r3
 8002a66:	1c22      	adds	r2, r4, #0
 8002a68:	801a      	strh	r2, [r3, #0]
 8002a6a:	2308      	movs	r3, #8
 8002a6c:	18fb      	adds	r3, r7, r3
 8002a6e:	1c02      	adds	r2, r0, #0
 8002a70:	801a      	strh	r2, [r3, #0]
 8002a72:	1dbb      	adds	r3, r7, #6
 8002a74:	1c0a      	adds	r2, r1, #0
 8002a76:	801a      	strh	r2, [r3, #0]
    if(w && h) {                            // Nonzero width and height?
 8002a78:	1dbb      	adds	r3, r7, #6
 8002a7a:	2200      	movs	r2, #0
 8002a7c:	5e9b      	ldrsh	r3, [r3, r2]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d100      	bne.n	8002a84 <_ZN7TFT_GFX13writeFillRectEsssst+0x30>
 8002a82:	e0c2      	b.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
 8002a84:	2328      	movs	r3, #40	; 0x28
 8002a86:	18fb      	adds	r3, r7, r3
 8002a88:	2200      	movs	r2, #0
 8002a8a:	5e9b      	ldrsh	r3, [r3, r2]
 8002a8c:	2b00      	cmp	r3, #0
 8002a8e:	d100      	bne.n	8002a92 <_ZN7TFT_GFX13writeFillRectEsssst+0x3e>
 8002a90:	e0bb      	b.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
        if(w < 0) {                         // If negative width...
 8002a92:	1dbb      	adds	r3, r7, #6
 8002a94:	2200      	movs	r2, #0
 8002a96:	5e9b      	ldrsh	r3, [r3, r2]
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	da10      	bge.n	8002abe <_ZN7TFT_GFX13writeFillRectEsssst+0x6a>
            x +=  w + 1;                    //   Move X to left edge
 8002a9c:	1dbb      	adds	r3, r7, #6
 8002a9e:	881a      	ldrh	r2, [r3, #0]
 8002aa0:	210a      	movs	r1, #10
 8002aa2:	187b      	adds	r3, r7, r1
 8002aa4:	881b      	ldrh	r3, [r3, #0]
 8002aa6:	18d3      	adds	r3, r2, r3
 8002aa8:	b29b      	uxth	r3, r3
 8002aaa:	3301      	adds	r3, #1
 8002aac:	b29a      	uxth	r2, r3
 8002aae:	187b      	adds	r3, r7, r1
 8002ab0:	801a      	strh	r2, [r3, #0]
            w  = -w;                        //   Use positive width
 8002ab2:	1dbb      	adds	r3, r7, #6
 8002ab4:	881b      	ldrh	r3, [r3, #0]
 8002ab6:	425b      	negs	r3, r3
 8002ab8:	b29a      	uxth	r2, r3
 8002aba:	1dbb      	adds	r3, r7, #6
 8002abc:	801a      	strh	r2, [r3, #0]
        }
        if(x < TFT_WIDTH) {                    // Not off right
 8002abe:	230a      	movs	r3, #10
 8002ac0:	18fb      	adds	r3, r7, r3
 8002ac2:	2200      	movs	r2, #0
 8002ac4:	5e9b      	ldrsh	r3, [r3, r2]
 8002ac6:	2bef      	cmp	r3, #239	; 0xef
 8002ac8:	dd00      	ble.n	8002acc <_ZN7TFT_GFX13writeFillRectEsssst+0x78>
 8002aca:	e09e      	b.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
            if(h < 0) {                     // If negative height...
 8002acc:	2328      	movs	r3, #40	; 0x28
 8002ace:	18fb      	adds	r3, r7, r3
 8002ad0:	2200      	movs	r2, #0
 8002ad2:	5e9b      	ldrsh	r3, [r3, r2]
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	da11      	bge.n	8002afc <_ZN7TFT_GFX13writeFillRectEsssst+0xa8>
                y +=  h + 1;                //   Move Y to top edge
 8002ad8:	2128      	movs	r1, #40	; 0x28
 8002ada:	187b      	adds	r3, r7, r1
 8002adc:	881a      	ldrh	r2, [r3, #0]
 8002ade:	2008      	movs	r0, #8
 8002ae0:	183b      	adds	r3, r7, r0
 8002ae2:	881b      	ldrh	r3, [r3, #0]
 8002ae4:	18d3      	adds	r3, r2, r3
 8002ae6:	b29b      	uxth	r3, r3
 8002ae8:	3301      	adds	r3, #1
 8002aea:	b29a      	uxth	r2, r3
 8002aec:	183b      	adds	r3, r7, r0
 8002aee:	801a      	strh	r2, [r3, #0]
                h  = -h;                    //   Use positive height
 8002af0:	187b      	adds	r3, r7, r1
 8002af2:	881b      	ldrh	r3, [r3, #0]
 8002af4:	425b      	negs	r3, r3
 8002af6:	b29a      	uxth	r2, r3
 8002af8:	187b      	adds	r3, r7, r1
 8002afa:	801a      	strh	r2, [r3, #0]
            }
            if(y < TFT_HEIGHT) {               // Not off bottom
 8002afc:	2308      	movs	r3, #8
 8002afe:	18fb      	adds	r3, r7, r3
 8002b00:	2200      	movs	r2, #0
 8002b02:	5e9a      	ldrsh	r2, [r3, r2]
 8002b04:	2340      	movs	r3, #64	; 0x40
 8002b06:	33ff      	adds	r3, #255	; 0xff
 8002b08:	429a      	cmp	r2, r3
 8002b0a:	dd00      	ble.n	8002b0e <_ZN7TFT_GFX13writeFillRectEsssst+0xba>
 8002b0c:	e07d      	b.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
                int16_t x2 = x + w - 1;
 8002b0e:	230a      	movs	r3, #10
 8002b10:	18fb      	adds	r3, r7, r3
 8002b12:	881a      	ldrh	r2, [r3, #0]
 8002b14:	1dbb      	adds	r3, r7, #6
 8002b16:	881b      	ldrh	r3, [r3, #0]
 8002b18:	18d3      	adds	r3, r2, r3
 8002b1a:	b29b      	uxth	r3, r3
 8002b1c:	3b01      	subs	r3, #1
 8002b1e:	b29a      	uxth	r2, r3
 8002b20:	2116      	movs	r1, #22
 8002b22:	187b      	adds	r3, r7, r1
 8002b24:	801a      	strh	r2, [r3, #0]
                if(x2 >= 0) {               // Not off left
 8002b26:	187b      	adds	r3, r7, r1
 8002b28:	2200      	movs	r2, #0
 8002b2a:	5e9b      	ldrsh	r3, [r3, r2]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	db6c      	blt.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
                    int16_t y2 = y + h - 1;
 8002b30:	2308      	movs	r3, #8
 8002b32:	18fb      	adds	r3, r7, r3
 8002b34:	881a      	ldrh	r2, [r3, #0]
 8002b36:	2328      	movs	r3, #40	; 0x28
 8002b38:	18fb      	adds	r3, r7, r3
 8002b3a:	881b      	ldrh	r3, [r3, #0]
 8002b3c:	18d3      	adds	r3, r2, r3
 8002b3e:	b29b      	uxth	r3, r3
 8002b40:	3b01      	subs	r3, #1
 8002b42:	b29a      	uxth	r2, r3
 8002b44:	2114      	movs	r1, #20
 8002b46:	187b      	adds	r3, r7, r1
 8002b48:	801a      	strh	r2, [r3, #0]
                    if(y2 >= 0) {           // Not off top
 8002b4a:	187b      	adds	r3, r7, r1
 8002b4c:	2200      	movs	r2, #0
 8002b4e:	5e9b      	ldrsh	r3, [r3, r2]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	db5a      	blt.n	8002c0a <_ZN7TFT_GFX13writeFillRectEsssst+0x1b6>
                        // Rectangle partly or fully overlaps screen
                        if(x  <  0)       { x = 0; w = x2 + 1; } // Clip left
 8002b54:	230a      	movs	r3, #10
 8002b56:	18fb      	adds	r3, r7, r3
 8002b58:	2200      	movs	r2, #0
 8002b5a:	5e9b      	ldrsh	r3, [r3, r2]
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	da0a      	bge.n	8002b76 <_ZN7TFT_GFX13writeFillRectEsssst+0x122>
 8002b60:	230a      	movs	r3, #10
 8002b62:	18fb      	adds	r3, r7, r3
 8002b64:	2200      	movs	r2, #0
 8002b66:	801a      	strh	r2, [r3, #0]
 8002b68:	2316      	movs	r3, #22
 8002b6a:	18fb      	adds	r3, r7, r3
 8002b6c:	881b      	ldrh	r3, [r3, #0]
 8002b6e:	3301      	adds	r3, #1
 8002b70:	b29a      	uxth	r2, r3
 8002b72:	1dbb      	adds	r3, r7, #6
 8002b74:	801a      	strh	r2, [r3, #0]
                        if(y  <  0)       { y = 0; h = y2 + 1; } // Clip top
 8002b76:	2308      	movs	r3, #8
 8002b78:	18fb      	adds	r3, r7, r3
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	5e9b      	ldrsh	r3, [r3, r2]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	da0b      	bge.n	8002b9a <_ZN7TFT_GFX13writeFillRectEsssst+0x146>
 8002b82:	2308      	movs	r3, #8
 8002b84:	18fb      	adds	r3, r7, r3
 8002b86:	2200      	movs	r2, #0
 8002b88:	801a      	strh	r2, [r3, #0]
 8002b8a:	2314      	movs	r3, #20
 8002b8c:	18fb      	adds	r3, r7, r3
 8002b8e:	881b      	ldrh	r3, [r3, #0]
 8002b90:	3301      	adds	r3, #1
 8002b92:	b29a      	uxth	r2, r3
 8002b94:	2328      	movs	r3, #40	; 0x28
 8002b96:	18fb      	adds	r3, r7, r3
 8002b98:	801a      	strh	r2, [r3, #0]
                        if(x2 >= TFT_WIDTH)  { w = TFT_WIDTH  - x;   } // Clip right
 8002b9a:	2316      	movs	r3, #22
 8002b9c:	18fb      	adds	r3, r7, r3
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	5e9b      	ldrsh	r3, [r3, r2]
 8002ba2:	2bef      	cmp	r3, #239	; 0xef
 8002ba4:	dd07      	ble.n	8002bb6 <_ZN7TFT_GFX13writeFillRectEsssst+0x162>
 8002ba6:	230a      	movs	r3, #10
 8002ba8:	18fb      	adds	r3, r7, r3
 8002baa:	881b      	ldrh	r3, [r3, #0]
 8002bac:	22f0      	movs	r2, #240	; 0xf0
 8002bae:	1ad3      	subs	r3, r2, r3
 8002bb0:	b29a      	uxth	r2, r3
 8002bb2:	1dbb      	adds	r3, r7, #6
 8002bb4:	801a      	strh	r2, [r3, #0]
                        if(y2 >= TFT_HEIGHT) { h = TFT_HEIGHT - y;   } // Clip bottom
 8002bb6:	2314      	movs	r3, #20
 8002bb8:	18fb      	adds	r3, r7, r3
 8002bba:	2200      	movs	r2, #0
 8002bbc:	5e9a      	ldrsh	r2, [r3, r2]
 8002bbe:	2340      	movs	r3, #64	; 0x40
 8002bc0:	33ff      	adds	r3, #255	; 0xff
 8002bc2:	429a      	cmp	r2, r3
 8002bc4:	dd09      	ble.n	8002bda <_ZN7TFT_GFX13writeFillRectEsssst+0x186>
 8002bc6:	2308      	movs	r3, #8
 8002bc8:	18fb      	adds	r3, r7, r3
 8002bca:	881b      	ldrh	r3, [r3, #0]
 8002bcc:	22a0      	movs	r2, #160	; 0xa0
 8002bce:	0052      	lsls	r2, r2, #1
 8002bd0:	1ad3      	subs	r3, r2, r3
 8002bd2:	b29a      	uxth	r2, r3
 8002bd4:	2328      	movs	r3, #40	; 0x28
 8002bd6:	18fb      	adds	r3, r7, r3
 8002bd8:	801a      	strh	r2, [r3, #0]
                        writeFillRectPreclipped(x, y, w, h, color);
 8002bda:	1dbb      	adds	r3, r7, #6
 8002bdc:	2400      	movs	r4, #0
 8002bde:	5f1c      	ldrsh	r4, [r3, r4]
 8002be0:	2308      	movs	r3, #8
 8002be2:	18fb      	adds	r3, r7, r3
 8002be4:	2200      	movs	r2, #0
 8002be6:	5e9a      	ldrsh	r2, [r3, r2]
 8002be8:	230a      	movs	r3, #10
 8002bea:	18fb      	adds	r3, r7, r3
 8002bec:	2100      	movs	r1, #0
 8002bee:	5e59      	ldrsh	r1, [r3, r1]
 8002bf0:	68f8      	ldr	r0, [r7, #12]
 8002bf2:	232c      	movs	r3, #44	; 0x2c
 8002bf4:	18fb      	adds	r3, r7, r3
 8002bf6:	881b      	ldrh	r3, [r3, #0]
 8002bf8:	9301      	str	r3, [sp, #4]
 8002bfa:	2328      	movs	r3, #40	; 0x28
 8002bfc:	18fb      	adds	r3, r7, r3
 8002bfe:	2500      	movs	r5, #0
 8002c00:	5f5b      	ldrsh	r3, [r3, r5]
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	0023      	movs	r3, r4
 8002c06:	f000 f804 	bl	8002c12 <_ZN7TFT_GFX23writeFillRectPreclippedEsssst>
                    }
                }
            }
        }
    }
}
 8002c0a:	46c0      	nop			; (mov r8, r8)
 8002c0c:	46bd      	mov	sp, r7
 8002c0e:	b006      	add	sp, #24
 8002c10:	bdb0      	pop	{r4, r5, r7, pc}

08002c12 <_ZN7TFT_GFX23writeFillRectPreclippedEsssst>:

inline void TFT_GFX::writeFillRectPreclipped(int16_t x, int16_t y,
  int16_t w, int16_t h, uint16_t color) {
 8002c12:	b5b0      	push	{r4, r5, r7, lr}
 8002c14:	b086      	sub	sp, #24
 8002c16:	af02      	add	r7, sp, #8
 8002c18:	60f8      	str	r0, [r7, #12]
 8002c1a:	000c      	movs	r4, r1
 8002c1c:	0010      	movs	r0, r2
 8002c1e:	0019      	movs	r1, r3
 8002c20:	250a      	movs	r5, #10
 8002c22:	197b      	adds	r3, r7, r5
 8002c24:	1c22      	adds	r2, r4, #0
 8002c26:	801a      	strh	r2, [r3, #0]
 8002c28:	2408      	movs	r4, #8
 8002c2a:	193b      	adds	r3, r7, r4
 8002c2c:	1c02      	adds	r2, r0, #0
 8002c2e:	801a      	strh	r2, [r3, #0]
 8002c30:	1dbb      	adds	r3, r7, #6
 8002c32:	1c0a      	adds	r2, r1, #0
 8002c34:	801a      	strh	r2, [r3, #0]
    setAddrWindow(x, y, w, h);
 8002c36:	197b      	adds	r3, r7, r5
 8002c38:	8819      	ldrh	r1, [r3, #0]
 8002c3a:	193b      	adds	r3, r7, r4
 8002c3c:	881a      	ldrh	r2, [r3, #0]
 8002c3e:	1dbb      	adds	r3, r7, #6
 8002c40:	881c      	ldrh	r4, [r3, #0]
 8002c42:	2520      	movs	r5, #32
 8002c44:	197b      	adds	r3, r7, r5
 8002c46:	881b      	ldrh	r3, [r3, #0]
 8002c48:	68f8      	ldr	r0, [r7, #12]
 8002c4a:	9300      	str	r3, [sp, #0]
 8002c4c:	0023      	movs	r3, r4
 8002c4e:	f7ff fe5c 	bl	800290a <_ZN7TFT_GFX13setAddrWindowEtttt>
    writeColor(color, (uint32_t)w * h);
 8002c52:	1dbb      	adds	r3, r7, #6
 8002c54:	2200      	movs	r2, #0
 8002c56:	5e9b      	ldrsh	r3, [r3, r2]
 8002c58:	197a      	adds	r2, r7, r5
 8002c5a:	2100      	movs	r1, #0
 8002c5c:	5e52      	ldrsh	r2, [r2, r1]
 8002c5e:	435a      	muls	r2, r3
 8002c60:	2324      	movs	r3, #36	; 0x24
 8002c62:	18fb      	adds	r3, r7, r3
 8002c64:	8819      	ldrh	r1, [r3, #0]
 8002c66:	68fb      	ldr	r3, [r7, #12]
 8002c68:	0018      	movs	r0, r3
 8002c6a:	f000 f804 	bl	8002c76 <_ZN7TFT_GFX10writeColorEtm>
}
 8002c6e:	46c0      	nop			; (mov r8, r8)
 8002c70:	46bd      	mov	sp, r7
 8002c72:	b004      	add	sp, #16
 8002c74:	bdb0      	pop	{r4, r5, r7, pc}

08002c76 <_ZN7TFT_GFX10writeColorEtm>:

void TFT_GFX::writeColor(uint16_t color, uint32_t len){
 8002c76:	b580      	push	{r7, lr}
 8002c78:	b086      	sub	sp, #24
 8002c7a:	af00      	add	r7, sp, #0
 8002c7c:	60f8      	str	r0, [r7, #12]
 8002c7e:	607a      	str	r2, [r7, #4]
 8002c80:	230a      	movs	r3, #10
 8002c82:	18fb      	adds	r3, r7, r3
 8002c84:	1c0a      	adds	r2, r1, #0
 8002c86:	801a      	strh	r2, [r3, #0]
	for(uint32_t i = 0; i < len; i++){
 8002c88:	2300      	movs	r3, #0
 8002c8a:	617b      	str	r3, [r7, #20]
 8002c8c:	697a      	ldr	r2, [r7, #20]
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	429a      	cmp	r2, r3
 8002c92:	d20c      	bcs.n	8002cae <_ZN7TFT_GFX10writeColorEtm+0x38>
		hspi_w16(this->spiInstance, color);
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	681a      	ldr	r2, [r3, #0]
 8002c98:	230a      	movs	r3, #10
 8002c9a:	18fb      	adds	r3, r7, r3
 8002c9c:	881b      	ldrh	r3, [r3, #0]
 8002c9e:	0019      	movs	r1, r3
 8002ca0:	0010      	movs	r0, r2
 8002ca2:	f000 fa9b 	bl	80031dc <hspi_w16>
	for(uint32_t i = 0; i < len; i++){
 8002ca6:	697b      	ldr	r3, [r7, #20]
 8002ca8:	3301      	adds	r3, #1
 8002caa:	617b      	str	r3, [r7, #20]
 8002cac:	e7ee      	b.n	8002c8c <_ZN7TFT_GFX10writeColorEtm+0x16>
	}
}
 8002cae:	46c0      	nop			; (mov r8, r8)
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	b006      	add	sp, #24
 8002cb4:	bd80      	pop	{r7, pc}

08002cb6 <_ZN7TFT_GFX14writeFastVLineEssst>:

void inline TFT_GFX::writeFastVLine(int16_t x, int16_t y, int16_t h, uint16_t color) {
 8002cb6:	b5b0      	push	{r4, r5, r7, lr}
 8002cb8:	b088      	sub	sp, #32
 8002cba:	af02      	add	r7, sp, #8
 8002cbc:	60f8      	str	r0, [r7, #12]
 8002cbe:	000c      	movs	r4, r1
 8002cc0:	0010      	movs	r0, r2
 8002cc2:	0019      	movs	r1, r3
 8002cc4:	250a      	movs	r5, #10
 8002cc6:	197b      	adds	r3, r7, r5
 8002cc8:	1c22      	adds	r2, r4, #0
 8002cca:	801a      	strh	r2, [r3, #0]
 8002ccc:	2308      	movs	r3, #8
 8002cce:	18fb      	adds	r3, r7, r3
 8002cd0:	1c02      	adds	r2, r0, #0
 8002cd2:	801a      	strh	r2, [r3, #0]
 8002cd4:	1dbb      	adds	r3, r7, #6
 8002cd6:	1c0a      	adds	r2, r1, #0
 8002cd8:	801a      	strh	r2, [r3, #0]
    if((x >= 0) && (x < TFT_WIDTH) && h) { // X on screen, nonzero height
 8002cda:	197b      	adds	r3, r7, r5
 8002cdc:	2200      	movs	r2, #0
 8002cde:	5e9b      	ldrsh	r3, [r3, r2]
 8002ce0:	2b00      	cmp	r3, #0
 8002ce2:	da00      	bge.n	8002ce6 <_ZN7TFT_GFX14writeFastVLineEssst+0x30>
 8002ce4:	e06f      	b.n	8002dc6 <_ZN7TFT_GFX14writeFastVLineEssst+0x110>
 8002ce6:	230a      	movs	r3, #10
 8002ce8:	18fb      	adds	r3, r7, r3
 8002cea:	2200      	movs	r2, #0
 8002cec:	5e9b      	ldrsh	r3, [r3, r2]
 8002cee:	2bef      	cmp	r3, #239	; 0xef
 8002cf0:	dc69      	bgt.n	8002dc6 <_ZN7TFT_GFX14writeFastVLineEssst+0x110>
 8002cf2:	1dbb      	adds	r3, r7, #6
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	5e9b      	ldrsh	r3, [r3, r2]
 8002cf8:	2b00      	cmp	r3, #0
 8002cfa:	d064      	beq.n	8002dc6 <_ZN7TFT_GFX14writeFastVLineEssst+0x110>
        if(h < 0) {                     // If negative height...
 8002cfc:	1dbb      	adds	r3, r7, #6
 8002cfe:	2200      	movs	r2, #0
 8002d00:	5e9b      	ldrsh	r3, [r3, r2]
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	da10      	bge.n	8002d28 <_ZN7TFT_GFX14writeFastVLineEssst+0x72>
            y +=  h + 1;                //   Move Y to top edge
 8002d06:	1dbb      	adds	r3, r7, #6
 8002d08:	881a      	ldrh	r2, [r3, #0]
 8002d0a:	2108      	movs	r1, #8
 8002d0c:	187b      	adds	r3, r7, r1
 8002d0e:	881b      	ldrh	r3, [r3, #0]
 8002d10:	18d3      	adds	r3, r2, r3
 8002d12:	b29b      	uxth	r3, r3
 8002d14:	3301      	adds	r3, #1
 8002d16:	b29a      	uxth	r2, r3
 8002d18:	187b      	adds	r3, r7, r1
 8002d1a:	801a      	strh	r2, [r3, #0]
            h  = -h;                    //   Use positive height
 8002d1c:	1dbb      	adds	r3, r7, #6
 8002d1e:	881b      	ldrh	r3, [r3, #0]
 8002d20:	425b      	negs	r3, r3
 8002d22:	b29a      	uxth	r2, r3
 8002d24:	1dbb      	adds	r3, r7, #6
 8002d26:	801a      	strh	r2, [r3, #0]
        }
        if(y < TFT_HEIGHT) {               // Not off bottom
 8002d28:	2308      	movs	r3, #8
 8002d2a:	18fb      	adds	r3, r7, r3
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	5e9a      	ldrsh	r2, [r3, r2]
 8002d30:	2340      	movs	r3, #64	; 0x40
 8002d32:	33ff      	adds	r3, #255	; 0xff
 8002d34:	429a      	cmp	r2, r3
 8002d36:	dc46      	bgt.n	8002dc6 <_ZN7TFT_GFX14writeFastVLineEssst+0x110>
            int16_t y2 = y + h - 1;
 8002d38:	2308      	movs	r3, #8
 8002d3a:	18fb      	adds	r3, r7, r3
 8002d3c:	881a      	ldrh	r2, [r3, #0]
 8002d3e:	1dbb      	adds	r3, r7, #6
 8002d40:	881b      	ldrh	r3, [r3, #0]
 8002d42:	18d3      	adds	r3, r2, r3
 8002d44:	b29b      	uxth	r3, r3
 8002d46:	3b01      	subs	r3, #1
 8002d48:	b29a      	uxth	r2, r3
 8002d4a:	2116      	movs	r1, #22
 8002d4c:	187b      	adds	r3, r7, r1
 8002d4e:	801a      	strh	r2, [r3, #0]
            if(y2 >= 0) {               // Not off top
 8002d50:	187b      	adds	r3, r7, r1
 8002d52:	2200      	movs	r2, #0
 8002d54:	5e9b      	ldrsh	r3, [r3, r2]
 8002d56:	2b00      	cmp	r3, #0
 8002d58:	db35      	blt.n	8002dc6 <_ZN7TFT_GFX14writeFastVLineEssst+0x110>
                // Line partly or fully overlaps screen
                if(y  <  0)       { y = 0; h = y2 + 1; } // Clip top
 8002d5a:	2308      	movs	r3, #8
 8002d5c:	18fb      	adds	r3, r7, r3
 8002d5e:	2200      	movs	r2, #0
 8002d60:	5e9b      	ldrsh	r3, [r3, r2]
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	da0a      	bge.n	8002d7c <_ZN7TFT_GFX14writeFastVLineEssst+0xc6>
 8002d66:	2308      	movs	r3, #8
 8002d68:	18fb      	adds	r3, r7, r3
 8002d6a:	2200      	movs	r2, #0
 8002d6c:	801a      	strh	r2, [r3, #0]
 8002d6e:	2316      	movs	r3, #22
 8002d70:	18fb      	adds	r3, r7, r3
 8002d72:	881b      	ldrh	r3, [r3, #0]
 8002d74:	3301      	adds	r3, #1
 8002d76:	b29a      	uxth	r2, r3
 8002d78:	1dbb      	adds	r3, r7, #6
 8002d7a:	801a      	strh	r2, [r3, #0]
                if(y2 >= TFT_HEIGHT) { h = TFT_HEIGHT - y;   } // Clip bottom
 8002d7c:	2316      	movs	r3, #22
 8002d7e:	18fb      	adds	r3, r7, r3
 8002d80:	2200      	movs	r2, #0
 8002d82:	5e9a      	ldrsh	r2, [r3, r2]
 8002d84:	2340      	movs	r3, #64	; 0x40
 8002d86:	33ff      	adds	r3, #255	; 0xff
 8002d88:	429a      	cmp	r2, r3
 8002d8a:	dd08      	ble.n	8002d9e <_ZN7TFT_GFX14writeFastVLineEssst+0xe8>
 8002d8c:	2308      	movs	r3, #8
 8002d8e:	18fb      	adds	r3, r7, r3
 8002d90:	881b      	ldrh	r3, [r3, #0]
 8002d92:	22a0      	movs	r2, #160	; 0xa0
 8002d94:	0052      	lsls	r2, r2, #1
 8002d96:	1ad3      	subs	r3, r2, r3
 8002d98:	b29a      	uxth	r2, r3
 8002d9a:	1dbb      	adds	r3, r7, #6
 8002d9c:	801a      	strh	r2, [r3, #0]
                writeFillRectPreclipped(x, y, 1, h, color);
 8002d9e:	2308      	movs	r3, #8
 8002da0:	18fb      	adds	r3, r7, r3
 8002da2:	2200      	movs	r2, #0
 8002da4:	5e9a      	ldrsh	r2, [r3, r2]
 8002da6:	230a      	movs	r3, #10
 8002da8:	18fb      	adds	r3, r7, r3
 8002daa:	2100      	movs	r1, #0
 8002dac:	5e59      	ldrsh	r1, [r3, r1]
 8002dae:	68f8      	ldr	r0, [r7, #12]
 8002db0:	2328      	movs	r3, #40	; 0x28
 8002db2:	18fb      	adds	r3, r7, r3
 8002db4:	881b      	ldrh	r3, [r3, #0]
 8002db6:	9301      	str	r3, [sp, #4]
 8002db8:	1dbb      	adds	r3, r7, #6
 8002dba:	2400      	movs	r4, #0
 8002dbc:	5f1b      	ldrsh	r3, [r3, r4]
 8002dbe:	9300      	str	r3, [sp, #0]
 8002dc0:	2301      	movs	r3, #1
 8002dc2:	f7ff ff26 	bl	8002c12 <_ZN7TFT_GFX23writeFillRectPreclippedEsssst>
            }
        }
    }
}
 8002dc6:	46c0      	nop			; (mov r8, r8)
 8002dc8:	46bd      	mov	sp, r7
 8002dca:	b006      	add	sp, #24
 8002dcc:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002dd0 <_ZN7TFT_GFX8drawCharEsshtthh>:
        }
    }
}

void TFT_GFX::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg, uint8_t size_x, uint8_t size_y) 
{
 8002dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002dd2:	b089      	sub	sp, #36	; 0x24
 8002dd4:	af02      	add	r7, sp, #8
 8002dd6:	60f8      	str	r0, [r7, #12]
 8002dd8:	000c      	movs	r4, r1
 8002dda:	0010      	movs	r0, r2
 8002ddc:	0019      	movs	r1, r3
 8002dde:	250a      	movs	r5, #10
 8002de0:	197b      	adds	r3, r7, r5
 8002de2:	1c22      	adds	r2, r4, #0
 8002de4:	801a      	strh	r2, [r3, #0]
 8002de6:	2308      	movs	r3, #8
 8002de8:	18fb      	adds	r3, r7, r3
 8002dea:	1c02      	adds	r2, r0, #0
 8002dec:	801a      	strh	r2, [r3, #0]
 8002dee:	1dfb      	adds	r3, r7, #7
 8002df0:	1c0a      	adds	r2, r1, #0
 8002df2:	701a      	strb	r2, [r3, #0]
    if((x >= TFT_WIDTH)            || // Clip right
 8002df4:	197b      	adds	r3, r7, r5
 8002df6:	2200      	movs	r2, #0
 8002df8:	5e9b      	ldrsh	r3, [r3, r2]
 8002dfa:	2bef      	cmp	r3, #239	; 0xef
 8002dfc:	dd00      	ble.n	8002e00 <_ZN7TFT_GFX8drawCharEsshtthh+0x30>
 8002dfe:	e1c2      	b.n	8003186 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b6>
 8002e00:	2308      	movs	r3, #8
 8002e02:	18fb      	adds	r3, r7, r3
 8002e04:	2200      	movs	r2, #0
 8002e06:	5e9a      	ldrsh	r2, [r3, r2]
 8002e08:	2340      	movs	r3, #64	; 0x40
 8002e0a:	33ff      	adds	r3, #255	; 0xff
 8002e0c:	429a      	cmp	r2, r3
 8002e0e:	dd00      	ble.n	8002e12 <_ZN7TFT_GFX8drawCharEsshtthh+0x42>
 8002e10:	e1b9      	b.n	8003186 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b6>
        (y >= TFT_HEIGHT)           || // Clip bottom
        ((x + 6 * size_x - 1) < 0) || // Clip left
 8002e12:	230a      	movs	r3, #10
 8002e14:	18fb      	adds	r3, r7, r3
 8002e16:	2100      	movs	r1, #0
 8002e18:	5e59      	ldrsh	r1, [r3, r1]
 8002e1a:	2330      	movs	r3, #48	; 0x30
 8002e1c:	2208      	movs	r2, #8
 8002e1e:	4694      	mov	ip, r2
 8002e20:	44bc      	add	ip, r7
 8002e22:	4463      	add	r3, ip
 8002e24:	781a      	ldrb	r2, [r3, #0]
 8002e26:	0013      	movs	r3, r2
 8002e28:	005b      	lsls	r3, r3, #1
 8002e2a:	189b      	adds	r3, r3, r2
 8002e2c:	005b      	lsls	r3, r3, #1
 8002e2e:	18cb      	adds	r3, r1, r3
 8002e30:	3b01      	subs	r3, #1
        (y >= TFT_HEIGHT)           || // Clip bottom
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	da00      	bge.n	8002e38 <_ZN7TFT_GFX8drawCharEsshtthh+0x68>
 8002e36:	e1a6      	b.n	8003186 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b6>
        ((y + 8 * size_y - 1) < 0))   // Clip top
 8002e38:	2308      	movs	r3, #8
 8002e3a:	18fb      	adds	r3, r7, r3
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	5e9a      	ldrsh	r2, [r3, r2]
 8002e40:	2334      	movs	r3, #52	; 0x34
 8002e42:	2108      	movs	r1, #8
 8002e44:	468c      	mov	ip, r1
 8002e46:	44bc      	add	ip, r7
 8002e48:	4463      	add	r3, ip
 8002e4a:	781b      	ldrb	r3, [r3, #0]
 8002e4c:	00db      	lsls	r3, r3, #3
 8002e4e:	18d3      	adds	r3, r2, r3
 8002e50:	3b01      	subs	r3, #1
        ((x + 6 * size_x - 1) < 0) || // Clip left
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	da00      	bge.n	8002e58 <_ZN7TFT_GFX8drawCharEsshtthh+0x88>
 8002e56:	e196      	b.n	8003186 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b6>
        return;

    if(c >= 176) c++; // Handle 'classic' charset behavior
 8002e58:	1dfb      	adds	r3, r7, #7
 8002e5a:	781b      	ldrb	r3, [r3, #0]
 8002e5c:	2baf      	cmp	r3, #175	; 0xaf
 8002e5e:	d904      	bls.n	8002e6a <_ZN7TFT_GFX8drawCharEsshtthh+0x9a>
 8002e60:	1dfb      	adds	r3, r7, #7
 8002e62:	781a      	ldrb	r2, [r3, #0]
 8002e64:	1dfb      	adds	r3, r7, #7
 8002e66:	3201      	adds	r2, #1
 8002e68:	701a      	strb	r2, [r3, #0]

    //startWrite();
    for(int8_t i=0; i<5; i++ ) { // Char bitmap = 5 columns
 8002e6a:	2317      	movs	r3, #23
 8002e6c:	18fb      	adds	r3, r7, r3
 8002e6e:	2200      	movs	r2, #0
 8002e70:	701a      	strb	r2, [r3, #0]
 8002e72:	2317      	movs	r3, #23
 8002e74:	18fb      	adds	r3, r7, r3
 8002e76:	781b      	ldrb	r3, [r3, #0]
 8002e78:	b25b      	sxtb	r3, r3
 8002e7a:	2b04      	cmp	r3, #4
 8002e7c:	dd00      	ble.n	8002e80 <_ZN7TFT_GFX8drawCharEsshtthh+0xb0>
 8002e7e:	e11f      	b.n	80030c0 <_ZN7TFT_GFX8drawCharEsshtthh+0x2f0>
        uint8_t line = pgm_read_byte(&font[c * 5 + i]);
 8002e80:	1dfb      	adds	r3, r7, #7
 8002e82:	781a      	ldrb	r2, [r3, #0]
 8002e84:	0013      	movs	r3, r2
 8002e86:	009b      	lsls	r3, r3, #2
 8002e88:	189a      	adds	r2, r3, r2
 8002e8a:	2317      	movs	r3, #23
 8002e8c:	18fb      	adds	r3, r7, r3
 8002e8e:	781b      	ldrb	r3, [r3, #0]
 8002e90:	b25b      	sxtb	r3, r3
 8002e92:	18d2      	adds	r2, r2, r3
 8002e94:	2316      	movs	r3, #22
 8002e96:	18fb      	adds	r3, r7, r3
 8002e98:	49bd      	ldr	r1, [pc, #756]	; (8003190 <_ZN7TFT_GFX8drawCharEsshtthh+0x3c0>)
 8002e9a:	5c8a      	ldrb	r2, [r1, r2]
 8002e9c:	701a      	strb	r2, [r3, #0]
        for(int8_t j=0; j<8; j++, line >>= 1) {
 8002e9e:	2315      	movs	r3, #21
 8002ea0:	18fb      	adds	r3, r7, r3
 8002ea2:	2200      	movs	r2, #0
 8002ea4:	701a      	strb	r2, [r3, #0]
 8002ea6:	2315      	movs	r3, #21
 8002ea8:	18fb      	adds	r3, r7, r3
 8002eaa:	781b      	ldrb	r3, [r3, #0]
 8002eac:	b25b      	sxtb	r3, r3
 8002eae:	2b07      	cmp	r3, #7
 8002eb0:	dd00      	ble.n	8002eb4 <_ZN7TFT_GFX8drawCharEsshtthh+0xe4>
 8002eb2:	e0fb      	b.n	80030ac <_ZN7TFT_GFX8drawCharEsshtthh+0x2dc>
            if(line & 1) {
 8002eb4:	2316      	movs	r3, #22
 8002eb6:	18fb      	adds	r3, r7, r3
 8002eb8:	781b      	ldrb	r3, [r3, #0]
 8002eba:	2201      	movs	r2, #1
 8002ebc:	4013      	ands	r3, r2
 8002ebe:	d06c      	beq.n	8002f9a <_ZN7TFT_GFX8drawCharEsshtthh+0x1ca>
                if(size_x == 1 && size_y == 1)
 8002ec0:	2330      	movs	r3, #48	; 0x30
 8002ec2:	2208      	movs	r2, #8
 8002ec4:	4694      	mov	ip, r2
 8002ec6:	44bc      	add	ip, r7
 8002ec8:	4463      	add	r3, ip
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	2b01      	cmp	r3, #1
 8002ece:	d127      	bne.n	8002f20 <_ZN7TFT_GFX8drawCharEsshtthh+0x150>
 8002ed0:	2334      	movs	r3, #52	; 0x34
 8002ed2:	2208      	movs	r2, #8
 8002ed4:	4694      	mov	ip, r2
 8002ed6:	44bc      	add	ip, r7
 8002ed8:	4463      	add	r3, ip
 8002eda:	781b      	ldrb	r3, [r3, #0]
 8002edc:	2b01      	cmp	r3, #1
 8002ede:	d11f      	bne.n	8002f20 <_ZN7TFT_GFX8drawCharEsshtthh+0x150>
                    writePixel(x+i, y+j, color);
 8002ee0:	2317      	movs	r3, #23
 8002ee2:	18fb      	adds	r3, r7, r3
 8002ee4:	781b      	ldrb	r3, [r3, #0]
 8002ee6:	b25b      	sxtb	r3, r3
 8002ee8:	b29a      	uxth	r2, r3
 8002eea:	230a      	movs	r3, #10
 8002eec:	18fb      	adds	r3, r7, r3
 8002eee:	881b      	ldrh	r3, [r3, #0]
 8002ef0:	18d3      	adds	r3, r2, r3
 8002ef2:	b29b      	uxth	r3, r3
 8002ef4:	b219      	sxth	r1, r3
 8002ef6:	2315      	movs	r3, #21
 8002ef8:	18fb      	adds	r3, r7, r3
 8002efa:	781b      	ldrb	r3, [r3, #0]
 8002efc:	b25b      	sxtb	r3, r3
 8002efe:	b29a      	uxth	r2, r3
 8002f00:	2308      	movs	r3, #8
 8002f02:	18fb      	adds	r3, r7, r3
 8002f04:	881b      	ldrh	r3, [r3, #0]
 8002f06:	18d3      	adds	r3, r2, r3
 8002f08:	b29b      	uxth	r3, r3
 8002f0a:	b21a      	sxth	r2, r3
 8002f0c:	2328      	movs	r3, #40	; 0x28
 8002f0e:	2008      	movs	r0, #8
 8002f10:	4684      	mov	ip, r0
 8002f12:	44bc      	add	ip, r7
 8002f14:	4463      	add	r3, ip
 8002f16:	881b      	ldrh	r3, [r3, #0]
 8002f18:	68f8      	ldr	r0, [r7, #12]
 8002f1a:	f7ff fd58 	bl	80029ce <_ZN7TFT_GFX10writePixelEsst>
 8002f1e:	e0b5      	b.n	800308c <_ZN7TFT_GFX8drawCharEsshtthh+0x2bc>
                else
                    writeFillRect(x+i*size_x, y+j*size_y, size_x, size_y, color);
 8002f20:	2317      	movs	r3, #23
 8002f22:	18fb      	adds	r3, r7, r3
 8002f24:	781b      	ldrb	r3, [r3, #0]
 8002f26:	b25b      	sxtb	r3, r3
 8002f28:	b29b      	uxth	r3, r3
 8002f2a:	2030      	movs	r0, #48	; 0x30
 8002f2c:	2408      	movs	r4, #8
 8002f2e:	193a      	adds	r2, r7, r4
 8002f30:	1812      	adds	r2, r2, r0
 8002f32:	7812      	ldrb	r2, [r2, #0]
 8002f34:	b292      	uxth	r2, r2
 8002f36:	4353      	muls	r3, r2
 8002f38:	b29a      	uxth	r2, r3
 8002f3a:	230a      	movs	r3, #10
 8002f3c:	18fb      	adds	r3, r7, r3
 8002f3e:	881b      	ldrh	r3, [r3, #0]
 8002f40:	18d3      	adds	r3, r2, r3
 8002f42:	b29b      	uxth	r3, r3
 8002f44:	b219      	sxth	r1, r3
 8002f46:	2315      	movs	r3, #21
 8002f48:	18fb      	adds	r3, r7, r3
 8002f4a:	781b      	ldrb	r3, [r3, #0]
 8002f4c:	b25b      	sxtb	r3, r3
 8002f4e:	b29b      	uxth	r3, r3
 8002f50:	2634      	movs	r6, #52	; 0x34
 8002f52:	193a      	adds	r2, r7, r4
 8002f54:	1992      	adds	r2, r2, r6
 8002f56:	7812      	ldrb	r2, [r2, #0]
 8002f58:	b292      	uxth	r2, r2
 8002f5a:	4353      	muls	r3, r2
 8002f5c:	b29a      	uxth	r2, r3
 8002f5e:	0023      	movs	r3, r4
 8002f60:	001d      	movs	r5, r3
 8002f62:	18fb      	adds	r3, r7, r3
 8002f64:	881b      	ldrh	r3, [r3, #0]
 8002f66:	18d3      	adds	r3, r2, r3
 8002f68:	b29b      	uxth	r3, r3
 8002f6a:	b21c      	sxth	r4, r3
 8002f6c:	002a      	movs	r2, r5
 8002f6e:	18bb      	adds	r3, r7, r2
 8002f70:	181b      	adds	r3, r3, r0
 8002f72:	781b      	ldrb	r3, [r3, #0]
 8002f74:	b21d      	sxth	r5, r3
 8002f76:	18bb      	adds	r3, r7, r2
 8002f78:	199b      	adds	r3, r3, r6
 8002f7a:	781b      	ldrb	r3, [r3, #0]
 8002f7c:	b21b      	sxth	r3, r3
 8002f7e:	68f8      	ldr	r0, [r7, #12]
 8002f80:	2228      	movs	r2, #40	; 0x28
 8002f82:	2608      	movs	r6, #8
 8002f84:	46b4      	mov	ip, r6
 8002f86:	44bc      	add	ip, r7
 8002f88:	4462      	add	r2, ip
 8002f8a:	8812      	ldrh	r2, [r2, #0]
 8002f8c:	9201      	str	r2, [sp, #4]
 8002f8e:	9300      	str	r3, [sp, #0]
 8002f90:	002b      	movs	r3, r5
 8002f92:	0022      	movs	r2, r4
 8002f94:	f7ff fd5e 	bl	8002a54 <_ZN7TFT_GFX13writeFillRectEsssst>
 8002f98:	e078      	b.n	800308c <_ZN7TFT_GFX8drawCharEsshtthh+0x2bc>
            } else if(bg != color) {
 8002f9a:	232c      	movs	r3, #44	; 0x2c
 8002f9c:	2208      	movs	r2, #8
 8002f9e:	4694      	mov	ip, r2
 8002fa0:	44bc      	add	ip, r7
 8002fa2:	4463      	add	r3, ip
 8002fa4:	2228      	movs	r2, #40	; 0x28
 8002fa6:	2108      	movs	r1, #8
 8002fa8:	1879      	adds	r1, r7, r1
 8002faa:	1889      	adds	r1, r1, r2
 8002fac:	881a      	ldrh	r2, [r3, #0]
 8002fae:	880b      	ldrh	r3, [r1, #0]
 8002fb0:	429a      	cmp	r2, r3
 8002fb2:	d06b      	beq.n	800308c <_ZN7TFT_GFX8drawCharEsshtthh+0x2bc>
                if(size_x == 1 && size_y == 1)
 8002fb4:	2330      	movs	r3, #48	; 0x30
 8002fb6:	2208      	movs	r2, #8
 8002fb8:	4694      	mov	ip, r2
 8002fba:	44bc      	add	ip, r7
 8002fbc:	4463      	add	r3, ip
 8002fbe:	781b      	ldrb	r3, [r3, #0]
 8002fc0:	2b01      	cmp	r3, #1
 8002fc2:	d127      	bne.n	8003014 <_ZN7TFT_GFX8drawCharEsshtthh+0x244>
 8002fc4:	2334      	movs	r3, #52	; 0x34
 8002fc6:	2208      	movs	r2, #8
 8002fc8:	4694      	mov	ip, r2
 8002fca:	44bc      	add	ip, r7
 8002fcc:	4463      	add	r3, ip
 8002fce:	781b      	ldrb	r3, [r3, #0]
 8002fd0:	2b01      	cmp	r3, #1
 8002fd2:	d11f      	bne.n	8003014 <_ZN7TFT_GFX8drawCharEsshtthh+0x244>
                    writePixel(x+i, y+j, bg);
 8002fd4:	2317      	movs	r3, #23
 8002fd6:	18fb      	adds	r3, r7, r3
 8002fd8:	781b      	ldrb	r3, [r3, #0]
 8002fda:	b25b      	sxtb	r3, r3
 8002fdc:	b29a      	uxth	r2, r3
 8002fde:	230a      	movs	r3, #10
 8002fe0:	18fb      	adds	r3, r7, r3
 8002fe2:	881b      	ldrh	r3, [r3, #0]
 8002fe4:	18d3      	adds	r3, r2, r3
 8002fe6:	b29b      	uxth	r3, r3
 8002fe8:	b219      	sxth	r1, r3
 8002fea:	2315      	movs	r3, #21
 8002fec:	18fb      	adds	r3, r7, r3
 8002fee:	781b      	ldrb	r3, [r3, #0]
 8002ff0:	b25b      	sxtb	r3, r3
 8002ff2:	b29a      	uxth	r2, r3
 8002ff4:	2308      	movs	r3, #8
 8002ff6:	18fb      	adds	r3, r7, r3
 8002ff8:	881b      	ldrh	r3, [r3, #0]
 8002ffa:	18d3      	adds	r3, r2, r3
 8002ffc:	b29b      	uxth	r3, r3
 8002ffe:	b21a      	sxth	r2, r3
 8003000:	232c      	movs	r3, #44	; 0x2c
 8003002:	2008      	movs	r0, #8
 8003004:	4684      	mov	ip, r0
 8003006:	44bc      	add	ip, r7
 8003008:	4463      	add	r3, ip
 800300a:	881b      	ldrh	r3, [r3, #0]
 800300c:	68f8      	ldr	r0, [r7, #12]
 800300e:	f7ff fcde 	bl	80029ce <_ZN7TFT_GFX10writePixelEsst>
 8003012:	e03b      	b.n	800308c <_ZN7TFT_GFX8drawCharEsshtthh+0x2bc>
                else
                    writeFillRect(x+i*size_x, y+j*size_y, size_x, size_y, bg);
 8003014:	2317      	movs	r3, #23
 8003016:	18fb      	adds	r3, r7, r3
 8003018:	781b      	ldrb	r3, [r3, #0]
 800301a:	b25b      	sxtb	r3, r3
 800301c:	b29b      	uxth	r3, r3
 800301e:	2030      	movs	r0, #48	; 0x30
 8003020:	2408      	movs	r4, #8
 8003022:	193a      	adds	r2, r7, r4
 8003024:	1812      	adds	r2, r2, r0
 8003026:	7812      	ldrb	r2, [r2, #0]
 8003028:	b292      	uxth	r2, r2
 800302a:	4353      	muls	r3, r2
 800302c:	b29a      	uxth	r2, r3
 800302e:	230a      	movs	r3, #10
 8003030:	18fb      	adds	r3, r7, r3
 8003032:	881b      	ldrh	r3, [r3, #0]
 8003034:	18d3      	adds	r3, r2, r3
 8003036:	b29b      	uxth	r3, r3
 8003038:	b219      	sxth	r1, r3
 800303a:	2315      	movs	r3, #21
 800303c:	18fb      	adds	r3, r7, r3
 800303e:	781b      	ldrb	r3, [r3, #0]
 8003040:	b25b      	sxtb	r3, r3
 8003042:	b29b      	uxth	r3, r3
 8003044:	2634      	movs	r6, #52	; 0x34
 8003046:	193a      	adds	r2, r7, r4
 8003048:	1992      	adds	r2, r2, r6
 800304a:	7812      	ldrb	r2, [r2, #0]
 800304c:	b292      	uxth	r2, r2
 800304e:	4353      	muls	r3, r2
 8003050:	b29a      	uxth	r2, r3
 8003052:	0023      	movs	r3, r4
 8003054:	001d      	movs	r5, r3
 8003056:	18fb      	adds	r3, r7, r3
 8003058:	881b      	ldrh	r3, [r3, #0]
 800305a:	18d3      	adds	r3, r2, r3
 800305c:	b29b      	uxth	r3, r3
 800305e:	b21c      	sxth	r4, r3
 8003060:	002a      	movs	r2, r5
 8003062:	18bb      	adds	r3, r7, r2
 8003064:	181b      	adds	r3, r3, r0
 8003066:	781b      	ldrb	r3, [r3, #0]
 8003068:	b21d      	sxth	r5, r3
 800306a:	18bb      	adds	r3, r7, r2
 800306c:	199b      	adds	r3, r3, r6
 800306e:	781b      	ldrb	r3, [r3, #0]
 8003070:	b21b      	sxth	r3, r3
 8003072:	68f8      	ldr	r0, [r7, #12]
 8003074:	222c      	movs	r2, #44	; 0x2c
 8003076:	2608      	movs	r6, #8
 8003078:	46b4      	mov	ip, r6
 800307a:	44bc      	add	ip, r7
 800307c:	4462      	add	r2, ip
 800307e:	8812      	ldrh	r2, [r2, #0]
 8003080:	9201      	str	r2, [sp, #4]
 8003082:	9300      	str	r3, [sp, #0]
 8003084:	002b      	movs	r3, r5
 8003086:	0022      	movs	r2, r4
 8003088:	f7ff fce4 	bl	8002a54 <_ZN7TFT_GFX13writeFillRectEsssst>
        for(int8_t j=0; j<8; j++, line >>= 1) {
 800308c:	2115      	movs	r1, #21
 800308e:	187b      	adds	r3, r7, r1
 8003090:	781b      	ldrb	r3, [r3, #0]
 8003092:	b25b      	sxtb	r3, r3
 8003094:	b2db      	uxtb	r3, r3
 8003096:	3301      	adds	r3, #1
 8003098:	b2da      	uxtb	r2, r3
 800309a:	187b      	adds	r3, r7, r1
 800309c:	701a      	strb	r2, [r3, #0]
 800309e:	2116      	movs	r1, #22
 80030a0:	187b      	adds	r3, r7, r1
 80030a2:	781b      	ldrb	r3, [r3, #0]
 80030a4:	105a      	asrs	r2, r3, #1
 80030a6:	187b      	adds	r3, r7, r1
 80030a8:	701a      	strb	r2, [r3, #0]
 80030aa:	e6fc      	b.n	8002ea6 <_ZN7TFT_GFX8drawCharEsshtthh+0xd6>
    for(int8_t i=0; i<5; i++ ) { // Char bitmap = 5 columns
 80030ac:	2117      	movs	r1, #23
 80030ae:	187b      	adds	r3, r7, r1
 80030b0:	781b      	ldrb	r3, [r3, #0]
 80030b2:	b25b      	sxtb	r3, r3
 80030b4:	b2db      	uxtb	r3, r3
 80030b6:	3301      	adds	r3, #1
 80030b8:	b2da      	uxtb	r2, r3
 80030ba:	187b      	adds	r3, r7, r1
 80030bc:	701a      	strb	r2, [r3, #0]
 80030be:	e6d8      	b.n	8002e72 <_ZN7TFT_GFX8drawCharEsshtthh+0xa2>
            }
        }
    }
    if(bg != color) { // If opaque, draw vertical line for last column
 80030c0:	232c      	movs	r3, #44	; 0x2c
 80030c2:	2208      	movs	r2, #8
 80030c4:	4694      	mov	ip, r2
 80030c6:	44bc      	add	ip, r7
 80030c8:	4463      	add	r3, ip
 80030ca:	2228      	movs	r2, #40	; 0x28
 80030cc:	2108      	movs	r1, #8
 80030ce:	1879      	adds	r1, r7, r1
 80030d0:	1889      	adds	r1, r1, r2
 80030d2:	881a      	ldrh	r2, [r3, #0]
 80030d4:	880b      	ldrh	r3, [r1, #0]
 80030d6:	429a      	cmp	r2, r3
 80030d8:	d056      	beq.n	8003188 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b8>
        if(size_x == 1 && size_y == 1) writeFastVLine(x+5, y, 8, bg);
 80030da:	2330      	movs	r3, #48	; 0x30
 80030dc:	2208      	movs	r2, #8
 80030de:	4694      	mov	ip, r2
 80030e0:	44bc      	add	ip, r7
 80030e2:	4463      	add	r3, ip
 80030e4:	781b      	ldrb	r3, [r3, #0]
 80030e6:	2b01      	cmp	r3, #1
 80030e8:	d11d      	bne.n	8003126 <_ZN7TFT_GFX8drawCharEsshtthh+0x356>
 80030ea:	2334      	movs	r3, #52	; 0x34
 80030ec:	2208      	movs	r2, #8
 80030ee:	4694      	mov	ip, r2
 80030f0:	44bc      	add	ip, r7
 80030f2:	4463      	add	r3, ip
 80030f4:	781b      	ldrb	r3, [r3, #0]
 80030f6:	2b01      	cmp	r3, #1
 80030f8:	d115      	bne.n	8003126 <_ZN7TFT_GFX8drawCharEsshtthh+0x356>
 80030fa:	230a      	movs	r3, #10
 80030fc:	18fb      	adds	r3, r7, r3
 80030fe:	881b      	ldrh	r3, [r3, #0]
 8003100:	3305      	adds	r3, #5
 8003102:	b29b      	uxth	r3, r3
 8003104:	b219      	sxth	r1, r3
 8003106:	2308      	movs	r3, #8
 8003108:	18fb      	adds	r3, r7, r3
 800310a:	2200      	movs	r2, #0
 800310c:	5e9a      	ldrsh	r2, [r3, r2]
 800310e:	68f8      	ldr	r0, [r7, #12]
 8003110:	232c      	movs	r3, #44	; 0x2c
 8003112:	2408      	movs	r4, #8
 8003114:	46a4      	mov	ip, r4
 8003116:	44bc      	add	ip, r7
 8003118:	4463      	add	r3, ip
 800311a:	881b      	ldrh	r3, [r3, #0]
 800311c:	9300      	str	r3, [sp, #0]
 800311e:	2308      	movs	r3, #8
 8003120:	f7ff fdc9 	bl	8002cb6 <_ZN7TFT_GFX14writeFastVLineEssst>
 8003124:	e030      	b.n	8003188 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b8>
        else          writeFillRect(x+5*size_x, y, size_x, 8*size_y, bg);
 8003126:	2030      	movs	r0, #48	; 0x30
 8003128:	2408      	movs	r4, #8
 800312a:	193b      	adds	r3, r7, r4
 800312c:	181b      	adds	r3, r3, r0
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	b29b      	uxth	r3, r3
 8003132:	1c1a      	adds	r2, r3, #0
 8003134:	0092      	lsls	r2, r2, #2
 8003136:	18d3      	adds	r3, r2, r3
 8003138:	b29a      	uxth	r2, r3
 800313a:	230a      	movs	r3, #10
 800313c:	18fb      	adds	r3, r7, r3
 800313e:	881b      	ldrh	r3, [r3, #0]
 8003140:	18d3      	adds	r3, r2, r3
 8003142:	b29b      	uxth	r3, r3
 8003144:	b219      	sxth	r1, r3
 8003146:	193b      	adds	r3, r7, r4
 8003148:	181b      	adds	r3, r3, r0
 800314a:	781b      	ldrb	r3, [r3, #0]
 800314c:	b21d      	sxth	r5, r3
 800314e:	2334      	movs	r3, #52	; 0x34
 8003150:	2208      	movs	r2, #8
 8003152:	4694      	mov	ip, r2
 8003154:	44bc      	add	ip, r7
 8003156:	4463      	add	r3, ip
 8003158:	781b      	ldrb	r3, [r3, #0]
 800315a:	b29b      	uxth	r3, r3
 800315c:	00db      	lsls	r3, r3, #3
 800315e:	b29b      	uxth	r3, r3
 8003160:	b21b      	sxth	r3, r3
 8003162:	0022      	movs	r2, r4
 8003164:	18ba      	adds	r2, r7, r2
 8003166:	2400      	movs	r4, #0
 8003168:	5f14      	ldrsh	r4, [r2, r4]
 800316a:	68f8      	ldr	r0, [r7, #12]
 800316c:	222c      	movs	r2, #44	; 0x2c
 800316e:	2608      	movs	r6, #8
 8003170:	46b4      	mov	ip, r6
 8003172:	44bc      	add	ip, r7
 8003174:	4462      	add	r2, ip
 8003176:	8812      	ldrh	r2, [r2, #0]
 8003178:	9201      	str	r2, [sp, #4]
 800317a:	9300      	str	r3, [sp, #0]
 800317c:	002b      	movs	r3, r5
 800317e:	0022      	movs	r2, r4
 8003180:	f7ff fc68 	bl	8002a54 <_ZN7TFT_GFX13writeFillRectEsssst>
 8003184:	e000      	b.n	8003188 <_ZN7TFT_GFX8drawCharEsshtthh+0x3b8>
        return;
 8003186:	46c0      	nop			; (mov r8, r8)
    }
    //endWrite();
}
 8003188:	46bd      	mov	sp, r7
 800318a:	b007      	add	sp, #28
 800318c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800318e:	46c0      	nop			; (mov r8, r8)
 8003190:	08003744 	.word	0x08003744

08003194 <pullCSLow>:
#include "hspi.h"
#include "pin-definitions.h"

void pullCSLow(void)
{
 8003194:	b580      	push	{r7, lr}
 8003196:	af00      	add	r7, sp, #0
	SPI2_CS_PORT->ODR &= ~(1 << SPI2_CS_PIN);
 8003198:	4b04      	ldr	r3, [pc, #16]	; (80031ac <pullCSLow+0x18>)
 800319a:	695a      	ldr	r2, [r3, #20]
 800319c:	4b03      	ldr	r3, [pc, #12]	; (80031ac <pullCSLow+0x18>)
 800319e:	2102      	movs	r1, #2
 80031a0:	438a      	bics	r2, r1
 80031a2:	615a      	str	r2, [r3, #20]
}
 80031a4:	46c0      	nop			; (mov r8, r8)
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bd80      	pop	{r7, pc}
 80031aa:	46c0      	nop			; (mov r8, r8)
 80031ac:	48000800 	.word	0x48000800

080031b0 <hspi_w8>:
void pullCSHigh(void)
{
	SPI2_CS_PORT->ODR |= (1 << SPI2_CS_PIN);
}

void hspi_w8(SPI_TypeDef *SPIx, uint8_t dat) {
 80031b0:	b580      	push	{r7, lr}
 80031b2:	b082      	sub	sp, #8
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
 80031b8:	000a      	movs	r2, r1
 80031ba:	1cfb      	adds	r3, r7, #3
 80031bc:	701a      	strb	r2, [r3, #0]
  // Wait for TXE.
  while (!(SPIx->SR & SPI_SR_TXE)) {};
 80031be:	46c0      	nop			; (mov r8, r8)
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	689b      	ldr	r3, [r3, #8]
 80031c4:	2202      	movs	r2, #2
 80031c6:	4013      	ands	r3, r2
 80031c8:	d0fa      	beq.n	80031c0 <hspi_w8+0x10>
  // Send the byte.
  *(uint8_t*)&(SPIx->DR) = dat;
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	330c      	adds	r3, #12
 80031ce:	1cfa      	adds	r2, r7, #3
 80031d0:	7812      	ldrb	r2, [r2, #0]
 80031d2:	701a      	strb	r2, [r3, #0]
}
 80031d4:	46c0      	nop			; (mov r8, r8)
 80031d6:	46bd      	mov	sp, r7
 80031d8:	b002      	add	sp, #8
 80031da:	bd80      	pop	{r7, pc}

080031dc <hspi_w16>:

void hspi_w16(SPI_TypeDef *SPIx, uint16_t dat) {
 80031dc:	b580      	push	{r7, lr}
 80031de:	b082      	sub	sp, #8
 80031e0:	af00      	add	r7, sp, #0
 80031e2:	6078      	str	r0, [r7, #4]
 80031e4:	000a      	movs	r2, r1
 80031e6:	1cbb      	adds	r3, r7, #2
 80031e8:	801a      	strh	r2, [r3, #0]
  // Wait for TXE.
  while (!(SPIx->SR & SPI_SR_TXE)) {};
 80031ea:	46c0      	nop			; (mov r8, r8)
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	689b      	ldr	r3, [r3, #8]
 80031f0:	2202      	movs	r2, #2
 80031f2:	4013      	ands	r3, r2
 80031f4:	d0fa      	beq.n	80031ec <hspi_w16+0x10>
  // Send the data.
  // (Flip the bytes for the little-endian ARM core.)
  dat = (((dat & 0x00FF) << 8) | ((dat & 0xFF00) >> 8));
 80031f6:	1cbb      	adds	r3, r7, #2
 80031f8:	881b      	ldrh	r3, [r3, #0]
 80031fa:	021b      	lsls	r3, r3, #8
 80031fc:	b21a      	sxth	r2, r3
 80031fe:	1cbb      	adds	r3, r7, #2
 8003200:	881b      	ldrh	r3, [r3, #0]
 8003202:	0a1b      	lsrs	r3, r3, #8
 8003204:	b29b      	uxth	r3, r3
 8003206:	b21b      	sxth	r3, r3
 8003208:	4313      	orrs	r3, r2
 800320a:	b21a      	sxth	r2, r3
 800320c:	1cbb      	adds	r3, r7, #2
 800320e:	801a      	strh	r2, [r3, #0]
  *(uint16_t*)&(SPIx->DR) = dat;
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	330c      	adds	r3, #12
 8003214:	1cba      	adds	r2, r7, #2
 8003216:	8812      	ldrh	r2, [r2, #0]
 8003218:	801a      	strh	r2, [r3, #0]
}
 800321a:	46c0      	nop			; (mov r8, r8)
 800321c:	46bd      	mov	sp, r7
 800321e:	b002      	add	sp, #8
 8003220:	bd80      	pop	{r7, pc}
	...

08003224 <hspi_cmd>:

void hspi_cmd(SPI_TypeDef *SPIx, uint8_t cmd) {
 8003224:	b580      	push	{r7, lr}
 8003226:	b082      	sub	sp, #8
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]
 800322c:	000a      	movs	r2, r1
 800322e:	1cfb      	adds	r3, r7, #3
 8003230:	701a      	strb	r2, [r3, #0]
  while ((SPIx->SR & SPI_SR_BSY)) {};
 8003232:	46c0      	nop			; (mov r8, r8)
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	689b      	ldr	r3, [r3, #8]
 8003238:	2280      	movs	r2, #128	; 0x80
 800323a:	4013      	ands	r3, r2
 800323c:	d1fa      	bne.n	8003234 <hspi_cmd+0x10>
  TFT_DC_PORT->ODR &= ~(1 << TFT_DC_PIN);
 800323e:	4b0e      	ldr	r3, [pc, #56]	; (8003278 <hspi_cmd+0x54>)
 8003240:	695a      	ldr	r2, [r3, #20]
 8003242:	4b0d      	ldr	r3, [pc, #52]	; (8003278 <hspi_cmd+0x54>)
 8003244:	2101      	movs	r1, #1
 8003246:	438a      	bics	r2, r1
 8003248:	615a      	str	r2, [r3, #20]
  hspi_w8(SPIx, cmd);
 800324a:	1cfb      	adds	r3, r7, #3
 800324c:	781a      	ldrb	r2, [r3, #0]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	0011      	movs	r1, r2
 8003252:	0018      	movs	r0, r3
 8003254:	f7ff ffac 	bl	80031b0 <hspi_w8>
  while ((SPIx->SR & SPI_SR_BSY)) {};
 8003258:	46c0      	nop			; (mov r8, r8)
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	689b      	ldr	r3, [r3, #8]
 800325e:	2280      	movs	r2, #128	; 0x80
 8003260:	4013      	ands	r3, r2
 8003262:	d1fa      	bne.n	800325a <hspi_cmd+0x36>
  TFT_DC_PORT->ODR |=  (1 << TFT_DC_PIN);
 8003264:	4b04      	ldr	r3, [pc, #16]	; (8003278 <hspi_cmd+0x54>)
 8003266:	695a      	ldr	r2, [r3, #20]
 8003268:	4b03      	ldr	r3, [pc, #12]	; (8003278 <hspi_cmd+0x54>)
 800326a:	2101      	movs	r1, #1
 800326c:	430a      	orrs	r2, r1
 800326e:	615a      	str	r2, [r3, #20]
}
 8003270:	46c0      	nop			; (mov r8, r8)
 8003272:	46bd      	mov	sp, r7
 8003274:	b002      	add	sp, #8
 8003276:	bd80      	pop	{r7, pc}
 8003278:	48000800 	.word	0x48000800

0800327c <ili9341_hspi_init>:

void ili9341_hspi_init(SPI_TypeDef *SPIx) {
 800327c:	b580      	push	{r7, lr}
 800327e:	b082      	sub	sp, #8
 8003280:	af00      	add	r7, sp, #0
 8003282:	6078      	str	r0, [r7, #4]
  // (Display off)
  //hspi_cmd(SPIx, 0x28);
  // Issue a series of initialization commands from the
  // Adafruit library for a simple 'known good' test.
  // (TODO: Add named macro definitions for these hex values.)
  hspi_cmd(SPIx, 0xEF);
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	21ef      	movs	r1, #239	; 0xef
 8003288:	0018      	movs	r0, r3
 800328a:	f7ff ffcb 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x03);
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	2103      	movs	r1, #3
 8003292:	0018      	movs	r0, r3
 8003294:	f7ff ff8c 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x80);
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	2180      	movs	r1, #128	; 0x80
 800329c:	0018      	movs	r0, r3
 800329e:	f7ff ff87 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x02);
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	2102      	movs	r1, #2
 80032a6:	0018      	movs	r0, r3
 80032a8:	f7ff ff82 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xCF);
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	21cf      	movs	r1, #207	; 0xcf
 80032b0:	0018      	movs	r0, r3
 80032b2:	f7ff ffb7 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	2100      	movs	r1, #0
 80032ba:	0018      	movs	r0, r3
 80032bc:	f7ff ff78 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0xC1);
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	21c1      	movs	r1, #193	; 0xc1
 80032c4:	0018      	movs	r0, r3
 80032c6:	f7ff ff73 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x30);
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	2130      	movs	r1, #48	; 0x30
 80032ce:	0018      	movs	r0, r3
 80032d0:	f7ff ff6e 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xED);
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	21ed      	movs	r1, #237	; 0xed
 80032d8:	0018      	movs	r0, r3
 80032da:	f7ff ffa3 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x64);
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	2164      	movs	r1, #100	; 0x64
 80032e2:	0018      	movs	r0, r3
 80032e4:	f7ff ff64 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x03);
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	2103      	movs	r1, #3
 80032ec:	0018      	movs	r0, r3
 80032ee:	f7ff ff5f 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x12);
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	2112      	movs	r1, #18
 80032f6:	0018      	movs	r0, r3
 80032f8:	f7ff ff5a 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x81);
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	2181      	movs	r1, #129	; 0x81
 8003300:	0018      	movs	r0, r3
 8003302:	f7ff ff55 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xE8);
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	21e8      	movs	r1, #232	; 0xe8
 800330a:	0018      	movs	r0, r3
 800330c:	f7ff ff8a 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x85);
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	2185      	movs	r1, #133	; 0x85
 8003314:	0018      	movs	r0, r3
 8003316:	f7ff ff4b 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x00);
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	2100      	movs	r1, #0
 800331e:	0018      	movs	r0, r3
 8003320:	f7ff ff46 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x78);
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	2178      	movs	r1, #120	; 0x78
 8003328:	0018      	movs	r0, r3
 800332a:	f7ff ff41 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xCB);
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	21cb      	movs	r1, #203	; 0xcb
 8003332:	0018      	movs	r0, r3
 8003334:	f7ff ff76 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x39);
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	2139      	movs	r1, #57	; 0x39
 800333c:	0018      	movs	r0, r3
 800333e:	f7ff ff37 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x2C);
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	212c      	movs	r1, #44	; 0x2c
 8003346:	0018      	movs	r0, r3
 8003348:	f7ff ff32 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x00);
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	2100      	movs	r1, #0
 8003350:	0018      	movs	r0, r3
 8003352:	f7ff ff2d 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x34);
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	2134      	movs	r1, #52	; 0x34
 800335a:	0018      	movs	r0, r3
 800335c:	f7ff ff28 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x02);
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	2102      	movs	r1, #2
 8003364:	0018      	movs	r0, r3
 8003366:	f7ff ff23 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xF7);
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	21f7      	movs	r1, #247	; 0xf7
 800336e:	0018      	movs	r0, r3
 8003370:	f7ff ff58 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x20);
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	2120      	movs	r1, #32
 8003378:	0018      	movs	r0, r3
 800337a:	f7ff ff19 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xEA);
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	21ea      	movs	r1, #234	; 0xea
 8003382:	0018      	movs	r0, r3
 8003384:	f7ff ff4e 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	2100      	movs	r1, #0
 800338c:	0018      	movs	r0, r3
 800338e:	f7ff ff0f 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x00);
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	2100      	movs	r1, #0
 8003396:	0018      	movs	r0, r3
 8003398:	f7ff ff0a 	bl	80031b0 <hspi_w8>
  // PWCTR1
  hspi_cmd(SPIx, 0xC0);
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	21c0      	movs	r1, #192	; 0xc0
 80033a0:	0018      	movs	r0, r3
 80033a2:	f7ff ff3f 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x23);
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	2123      	movs	r1, #35	; 0x23
 80033aa:	0018      	movs	r0, r3
 80033ac:	f7ff ff00 	bl	80031b0 <hspi_w8>
  // PWCTR2
  hspi_cmd(SPIx, 0xC1);
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	21c1      	movs	r1, #193	; 0xc1
 80033b4:	0018      	movs	r0, r3
 80033b6:	f7ff ff35 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x10);
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	2110      	movs	r1, #16
 80033be:	0018      	movs	r0, r3
 80033c0:	f7ff fef6 	bl	80031b0 <hspi_w8>
  // VMCTR1
  hspi_cmd(SPIx, 0xC5);
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	21c5      	movs	r1, #197	; 0xc5
 80033c8:	0018      	movs	r0, r3
 80033ca:	f7ff ff2b 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x3E);
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	213e      	movs	r1, #62	; 0x3e
 80033d2:	0018      	movs	r0, r3
 80033d4:	f7ff feec 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x28);
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	2128      	movs	r1, #40	; 0x28
 80033dc:	0018      	movs	r0, r3
 80033de:	f7ff fee7 	bl	80031b0 <hspi_w8>
  // VMCTR2
  hspi_cmd(SPIx, 0xC7);
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	21c7      	movs	r1, #199	; 0xc7
 80033e6:	0018      	movs	r0, r3
 80033e8:	f7ff ff1c 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x86);
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	2186      	movs	r1, #134	; 0x86
 80033f0:	0018      	movs	r0, r3
 80033f2:	f7ff fedd 	bl	80031b0 <hspi_w8>
  // MADCTL
  hspi_cmd(SPIx, 0x36);
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	2136      	movs	r1, #54	; 0x36
 80033fa:	0018      	movs	r0, r3
 80033fc:	f7ff ff12 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x48);
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	2148      	movs	r1, #72	; 0x48
 8003404:	0018      	movs	r0, r3
 8003406:	f7ff fed3 	bl	80031b0 <hspi_w8>
  // VSCRSADD
  hspi_cmd(SPIx, 0x37);
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	2137      	movs	r1, #55	; 0x37
 800340e:	0018      	movs	r0, r3
 8003410:	f7ff ff08 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	2100      	movs	r1, #0
 8003418:	0018      	movs	r0, r3
 800341a:	f7ff fec9 	bl	80031b0 <hspi_w8>
  // PIXFMT
  hspi_cmd(SPIx, 0x3A);
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	213a      	movs	r1, #58	; 0x3a
 8003422:	0018      	movs	r0, r3
 8003424:	f7ff fefe 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x55);
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2155      	movs	r1, #85	; 0x55
 800342c:	0018      	movs	r0, r3
 800342e:	f7ff febf 	bl	80031b0 <hspi_w8>
  // FRMCTR1
  hspi_cmd(SPIx, 0xB1);
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	21b1      	movs	r1, #177	; 0xb1
 8003436:	0018      	movs	r0, r3
 8003438:	f7ff fef4 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	2100      	movs	r1, #0
 8003440:	0018      	movs	r0, r3
 8003442:	f7ff feb5 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x18);
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	2118      	movs	r1, #24
 800344a:	0018      	movs	r0, r3
 800344c:	f7ff feb0 	bl	80031b0 <hspi_w8>
  // DFUNCTR
  hspi_cmd(SPIx, 0xB6);
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	21b6      	movs	r1, #182	; 0xb6
 8003454:	0018      	movs	r0, r3
 8003456:	f7ff fee5 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x08);
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	2108      	movs	r1, #8
 800345e:	0018      	movs	r0, r3
 8003460:	f7ff fea6 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x82);
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	2182      	movs	r1, #130	; 0x82
 8003468:	0018      	movs	r0, r3
 800346a:	f7ff fea1 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x27);
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	2127      	movs	r1, #39	; 0x27
 8003472:	0018      	movs	r0, r3
 8003474:	f7ff fe9c 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xF2);
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	21f2      	movs	r1, #242	; 0xf2
 800347c:	0018      	movs	r0, r3
 800347e:	f7ff fed1 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	2100      	movs	r1, #0
 8003486:	0018      	movs	r0, r3
 8003488:	f7ff fe92 	bl	80031b0 <hspi_w8>
  // GAMMASET
  hspi_cmd(SPIx, 0x26);
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	2126      	movs	r1, #38	; 0x26
 8003490:	0018      	movs	r0, r3
 8003492:	f7ff fec7 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x01);
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	2101      	movs	r1, #1
 800349a:	0018      	movs	r0, r3
 800349c:	f7ff fe88 	bl	80031b0 <hspi_w8>
  // (Actual gamma settings)
  hspi_cmd(SPIx, 0xE0);
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	21e0      	movs	r1, #224	; 0xe0
 80034a4:	0018      	movs	r0, r3
 80034a6:	f7ff febd 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x0F);
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	210f      	movs	r1, #15
 80034ae:	0018      	movs	r0, r3
 80034b0:	f7ff fe7e 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x31);
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	2131      	movs	r1, #49	; 0x31
 80034b8:	0018      	movs	r0, r3
 80034ba:	f7ff fe79 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x2B);
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	212b      	movs	r1, #43	; 0x2b
 80034c2:	0018      	movs	r0, r3
 80034c4:	f7ff fe74 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0C);
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	210c      	movs	r1, #12
 80034cc:	0018      	movs	r0, r3
 80034ce:	f7ff fe6f 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0E);
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	210e      	movs	r1, #14
 80034d6:	0018      	movs	r0, r3
 80034d8:	f7ff fe6a 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x08);
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2108      	movs	r1, #8
 80034e0:	0018      	movs	r0, r3
 80034e2:	f7ff fe65 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x4E);
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	214e      	movs	r1, #78	; 0x4e
 80034ea:	0018      	movs	r0, r3
 80034ec:	f7ff fe60 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0xF1);
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	21f1      	movs	r1, #241	; 0xf1
 80034f4:	0018      	movs	r0, r3
 80034f6:	f7ff fe5b 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x37);
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	2137      	movs	r1, #55	; 0x37
 80034fe:	0018      	movs	r0, r3
 8003500:	f7ff fe56 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x07);
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	2107      	movs	r1, #7
 8003508:	0018      	movs	r0, r3
 800350a:	f7ff fe51 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x10);
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	2110      	movs	r1, #16
 8003512:	0018      	movs	r0, r3
 8003514:	f7ff fe4c 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x03);
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	2103      	movs	r1, #3
 800351c:	0018      	movs	r0, r3
 800351e:	f7ff fe47 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0E);
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	210e      	movs	r1, #14
 8003526:	0018      	movs	r0, r3
 8003528:	f7ff fe42 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x09);
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	2109      	movs	r1, #9
 8003530:	0018      	movs	r0, r3
 8003532:	f7ff fe3d 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x00);
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	2100      	movs	r1, #0
 800353a:	0018      	movs	r0, r3
 800353c:	f7ff fe38 	bl	80031b0 <hspi_w8>
  hspi_cmd(SPIx, 0xE1);
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	21e1      	movs	r1, #225	; 0xe1
 8003544:	0018      	movs	r0, r3
 8003546:	f7ff fe6d 	bl	8003224 <hspi_cmd>
  hspi_w8(SPIx, 0x00);
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	2100      	movs	r1, #0
 800354e:	0018      	movs	r0, r3
 8003550:	f7ff fe2e 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0E);
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	210e      	movs	r1, #14
 8003558:	0018      	movs	r0, r3
 800355a:	f7ff fe29 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x14);
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	2114      	movs	r1, #20
 8003562:	0018      	movs	r0, r3
 8003564:	f7ff fe24 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x03);
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	2103      	movs	r1, #3
 800356c:	0018      	movs	r0, r3
 800356e:	f7ff fe1f 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x11);
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	2111      	movs	r1, #17
 8003576:	0018      	movs	r0, r3
 8003578:	f7ff fe1a 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x07);
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	2107      	movs	r1, #7
 8003580:	0018      	movs	r0, r3
 8003582:	f7ff fe15 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x31);
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	2131      	movs	r1, #49	; 0x31
 800358a:	0018      	movs	r0, r3
 800358c:	f7ff fe10 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0xC1);
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	21c1      	movs	r1, #193	; 0xc1
 8003594:	0018      	movs	r0, r3
 8003596:	f7ff fe0b 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x48);
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	2148      	movs	r1, #72	; 0x48
 800359e:	0018      	movs	r0, r3
 80035a0:	f7ff fe06 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x08);
 80035a4:	687b      	ldr	r3, [r7, #4]
 80035a6:	2108      	movs	r1, #8
 80035a8:	0018      	movs	r0, r3
 80035aa:	f7ff fe01 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0F);
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	210f      	movs	r1, #15
 80035b2:	0018      	movs	r0, r3
 80035b4:	f7ff fdfc 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0C);
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	210c      	movs	r1, #12
 80035bc:	0018      	movs	r0, r3
 80035be:	f7ff fdf7 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x31);
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	2131      	movs	r1, #49	; 0x31
 80035c6:	0018      	movs	r0, r3
 80035c8:	f7ff fdf2 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x36);
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	2136      	movs	r1, #54	; 0x36
 80035d0:	0018      	movs	r0, r3
 80035d2:	f7ff fded 	bl	80031b0 <hspi_w8>
  hspi_w8(SPIx, 0x0F);
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	210f      	movs	r1, #15
 80035da:	0018      	movs	r0, r3
 80035dc:	f7ff fde8 	bl	80031b0 <hspi_w8>
  // Exit sleep mode.
  hspi_cmd(SPIx, 0x11);
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	2111      	movs	r1, #17
 80035e4:	0018      	movs	r0, r3
 80035e6:	f7ff fe1d 	bl	8003224 <hspi_cmd>
  HAL_Delay(150);
 80035ea:	2096      	movs	r0, #150	; 0x96
 80035ec:	f7fc fe5e 	bl	80002ac <HAL_Delay>
  // Display on.
  hspi_cmd(SPIx, 0x29);
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	2129      	movs	r1, #41	; 0x29
 80035f4:	0018      	movs	r0, r3
 80035f6:	f7ff fe15 	bl	8003224 <hspi_cmd>
	HAL_Delay(150);
 80035fa:	2096      	movs	r0, #150	; 0x96
 80035fc:	f7fc fe56 	bl	80002ac <HAL_Delay>
  // 'Normal' display mode.
  hspi_cmd(SPIx, 0x13);
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2113      	movs	r1, #19
 8003604:	0018      	movs	r0, r3
 8003606:	f7ff fe0d 	bl	8003224 <hspi_cmd>
}
 800360a:	46c0      	nop			; (mov r8, r8)
 800360c:	46bd      	mov	sp, r7
 800360e:	b002      	add	sp, #8
 8003610:	bd80      	pop	{r7, pc}

08003612 <resetTftBoard>:
#include "tft-board-specific.h"
#include "pin-definitions.h"


void resetTftBoard(void)
{
 8003612:	b580      	push	{r7, lr}
 8003614:	af00      	add	r7, sp, #0
	TFT_RST_PORT->ODR &= ~(1 << TFT_RST_PIN);
 8003616:	2390      	movs	r3, #144	; 0x90
 8003618:	05db      	lsls	r3, r3, #23
 800361a:	695a      	ldr	r2, [r3, #20]
 800361c:	2390      	movs	r3, #144	; 0x90
 800361e:	05db      	lsls	r3, r3, #23
 8003620:	2101      	movs	r1, #1
 8003622:	438a      	bics	r2, r1
 8003624:	615a      	str	r2, [r3, #20]
	HAL_Delay(150);
 8003626:	2096      	movs	r0, #150	; 0x96
 8003628:	f7fc fe40 	bl	80002ac <HAL_Delay>
	TFT_RST_PORT->ODR |=  (1 << TFT_RST_PIN);
 800362c:	2390      	movs	r3, #144	; 0x90
 800362e:	05db      	lsls	r3, r3, #23
 8003630:	695a      	ldr	r2, [r3, #20]
 8003632:	2390      	movs	r3, #144	; 0x90
 8003634:	05db      	lsls	r3, r3, #23
 8003636:	2101      	movs	r1, #1
 8003638:	430a      	orrs	r2, r1
 800363a:	615a      	str	r2, [r3, #20]
	HAL_Delay(150);
 800363c:	2096      	movs	r0, #150	; 0x96
 800363e:	f7fc fe35 	bl	80002ac <HAL_Delay>
}
 8003642:	46c0      	nop			; (mov r8, r8)
 8003644:	46bd      	mov	sp, r7
 8003646:	bd80      	pop	{r7, pc}

08003648 <Reset_Handler>:
 8003648:	480d      	ldr	r0, [pc, #52]	; (8003680 <LoopForever+0x2>)
 800364a:	4685      	mov	sp, r0
 800364c:	480d      	ldr	r0, [pc, #52]	; (8003684 <LoopForever+0x6>)
 800364e:	490e      	ldr	r1, [pc, #56]	; (8003688 <LoopForever+0xa>)
 8003650:	4a0e      	ldr	r2, [pc, #56]	; (800368c <LoopForever+0xe>)
 8003652:	2300      	movs	r3, #0
 8003654:	e002      	b.n	800365c <LoopCopyDataInit>

08003656 <CopyDataInit>:
 8003656:	58d4      	ldr	r4, [r2, r3]
 8003658:	50c4      	str	r4, [r0, r3]
 800365a:	3304      	adds	r3, #4

0800365c <LoopCopyDataInit>:
 800365c:	18c4      	adds	r4, r0, r3
 800365e:	428c      	cmp	r4, r1
 8003660:	d3f9      	bcc.n	8003656 <CopyDataInit>
 8003662:	4a0b      	ldr	r2, [pc, #44]	; (8003690 <LoopForever+0x12>)
 8003664:	4c0b      	ldr	r4, [pc, #44]	; (8003694 <LoopForever+0x16>)
 8003666:	2300      	movs	r3, #0
 8003668:	e001      	b.n	800366e <LoopFillZerobss>

0800366a <FillZerobss>:
 800366a:	6013      	str	r3, [r2, #0]
 800366c:	3204      	adds	r2, #4

0800366e <LoopFillZerobss>:
 800366e:	42a2      	cmp	r2, r4
 8003670:	d3fb      	bcc.n	800366a <FillZerobss>
 8003672:	f7ff f8f9 	bl	8002868 <SystemInit>
 8003676:	f000 f811 	bl	800369c <__libc_init_array>
 800367a:	f7fe fd29 	bl	80020d0 <main>

0800367e <LoopForever>:
 800367e:	e7fe      	b.n	800367e <LoopForever>
 8003680:	20004000 	.word	0x20004000
 8003684:	20000000 	.word	0x20000000
 8003688:	20000004 	.word	0x20000004
 800368c:	08003c4c 	.word	0x08003c4c
 8003690:	20000004 	.word	0x20000004
 8003694:	200000f8 	.word	0x200000f8

08003698 <ADC1_COMP_IRQHandler>:
 8003698:	e7fe      	b.n	8003698 <ADC1_COMP_IRQHandler>
	...

0800369c <__libc_init_array>:
 800369c:	b570      	push	{r4, r5, r6, lr}
 800369e:	2600      	movs	r6, #0
 80036a0:	4d0c      	ldr	r5, [pc, #48]	; (80036d4 <__libc_init_array+0x38>)
 80036a2:	4c0d      	ldr	r4, [pc, #52]	; (80036d8 <__libc_init_array+0x3c>)
 80036a4:	1b64      	subs	r4, r4, r5
 80036a6:	10a4      	asrs	r4, r4, #2
 80036a8:	42a6      	cmp	r6, r4
 80036aa:	d109      	bne.n	80036c0 <__libc_init_array+0x24>
 80036ac:	2600      	movs	r6, #0
 80036ae:	f000 f821 	bl	80036f4 <_init>
 80036b2:	4d0a      	ldr	r5, [pc, #40]	; (80036dc <__libc_init_array+0x40>)
 80036b4:	4c0a      	ldr	r4, [pc, #40]	; (80036e0 <__libc_init_array+0x44>)
 80036b6:	1b64      	subs	r4, r4, r5
 80036b8:	10a4      	asrs	r4, r4, #2
 80036ba:	42a6      	cmp	r6, r4
 80036bc:	d105      	bne.n	80036ca <__libc_init_array+0x2e>
 80036be:	bd70      	pop	{r4, r5, r6, pc}
 80036c0:	00b3      	lsls	r3, r6, #2
 80036c2:	58eb      	ldr	r3, [r5, r3]
 80036c4:	4798      	blx	r3
 80036c6:	3601      	adds	r6, #1
 80036c8:	e7ee      	b.n	80036a8 <__libc_init_array+0xc>
 80036ca:	00b3      	lsls	r3, r6, #2
 80036cc:	58eb      	ldr	r3, [r5, r3]
 80036ce:	4798      	blx	r3
 80036d0:	3601      	adds	r6, #1
 80036d2:	e7f2      	b.n	80036ba <__libc_init_array+0x1e>
 80036d4:	08003c44 	.word	0x08003c44
 80036d8:	08003c44 	.word	0x08003c44
 80036dc:	08003c44 	.word	0x08003c44
 80036e0:	08003c48 	.word	0x08003c48

080036e4 <memset>:
 80036e4:	0003      	movs	r3, r0
 80036e6:	1812      	adds	r2, r2, r0
 80036e8:	4293      	cmp	r3, r2
 80036ea:	d100      	bne.n	80036ee <memset+0xa>
 80036ec:	4770      	bx	lr
 80036ee:	7019      	strb	r1, [r3, #0]
 80036f0:	3301      	adds	r3, #1
 80036f2:	e7f9      	b.n	80036e8 <memset+0x4>

080036f4 <_init>:
 80036f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036f6:	46c0      	nop			; (mov r8, r8)
 80036f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80036fa:	bc08      	pop	{r3}
 80036fc:	469e      	mov	lr, r3
 80036fe:	4770      	bx	lr

08003700 <_fini>:
 8003700:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003702:	46c0      	nop			; (mov r8, r8)
 8003704:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003706:	bc08      	pop	{r3}
 8003708:	469e      	mov	lr, r3
 800370a:	4770      	bx	lr
